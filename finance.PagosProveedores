USE [HNT_TRZ]
GO
/****** Object:  StoredProcedure [dbo].[up_finance_PagosProveedores]    Script Date: 24/01/2024 09:33:10 a. m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
--@GroupCode
-- 1 MXP
-- 2 USD
-- 3 IMPORTACIÓN
-- 4 BANCO
--110	Nacional Pesos
--111	Nacional Dólares
--112/113	Importación
--118	Bancos (quitar CardCode '20012','21478')

-- =============================================
ALTER PROCEDURE [dbo].[up_finance_PagosProveedores]
	@TipoConsulta			int,
	@FechaDesde				Date = NULL,
	@FechaHasta				Date = NULL,
	@Sucursales				Varchar(MAX) = NULL,
	@Proveedores			Varchar(MAX) = NULL,
	@GroupCode				int = NULL,
	
	@DocNum					int = NULL,
	@Comentario				Varchar(MAX) = NULL,
	@Propuesta				Decimal(18,6) = NULL,
	@Aprobado				Decimal(18,6) = NULL,
	@Estatus				Varchar(MAX) = NULL,
	
	@Usuario				nvarchar(100) = NULL,
	
	@PropuestaUSD			Decimal(18,6) = NULL,
	@AprobadoUSD			Decimal(18,6) = NULL,
	@TC						Decimal(18,6) = NULL,
	@NC						bit=NULL,
	@TipoPermiso			VARCHAR(50) = NULL,
	@Rol					INT = NULL,

	--REPOSICION DE CAJA
	@FormaPago				VARCHAR(50)=NULL,
	@Referencia				VARCHAR(50)=NULL,
	@Folio					varchar(50)=NULL,
	@Sucursal				VARCHAR(50)=NULL,
	@FechaReposicion		DATE=NULL,
	@FechaAplicacion		DATE=NULL,
	@UserID					int=NULL,

	@Line					int=NULL,
	@Factura				VARCHAR(50)=NULL,
	@Emitido				VARCHAR(250)=NULL, 
	@RFC					VARCHAR(50)=NULL, 
	@Concepto				VARCHAR(250)=NULL, 
	@Monto					DECIMAL(18,4)=NULL, 
	@IVA					DECIMAL(18,4)=NULL, 
	@RetencionIVA			DECIMAL(18,4)=NULL,
	@RetnecionISR			DECIMAL(18,4)=NULL, 
	@Total					DECIMAL(18,4)=NULL,
	@OCSAP					NVARCHAR(25)=NULL, 
	@FacturaSAP				NVARCHAR(25)=NULL,
	@PagoSAP				NVARCHAR(25)=NULL,
	@pathPDF				VARCHAR(MAX)=NULL, 
	@pathXML				VARCHAR(MAX)=NULL,
	@Bancos					Decimal(18,4)=NULL,
	@Seguridad				Decimal(18,4)=NULL,
	@exentoIVA				DECIMAL(18,4)=NULL,
	@deducible				BIT = 1,

	@idXML					VARCHAR(10)=NULL,
	@idPDF					VARCHAR(10)=NULL,


	@idReposicion			NUMERIC(18,0)=NULL, 
	@idExtracto				NUMERIC(18,0)=NULL,

	@Mensaje				VARCHAR(50) = '' OUT

		-----------pmjm----------------------
	,@Anio					INT = NULL
	,@Mes					INT = NULL
	,@TipoMov				INT = NULL
	,@Rubro					varchar(50) = NULL
	,@ColumVal				varchar(50) = NULL
	,@MontoRubro			NUMERIC(18,4) = NULL
	,@Fechas				varchar(max) = NULL
	,@IDD					INT = NULL
	,@SUBIDD				INT = NULL
	,@TIPOD					VARCHAR(500) = NULL
	,@RUBROD				VARCHAR(500) = NULL
	,@PKD					INT = NULL
	,@MONEDAD				VARCHAR(10) = NULL
	--------VARIABLES PARA CACHAR ERROR DE PAGOS PROVEEDORES-----
	,@NombreArchivo			varchar(max) = NULL
	,@NombreMetodo			varchar(max) = NULL
	,@NumLinea				int = NULL
	,@NumCol				int = NULL
	,@NumCodError			int = NULL
	,@TabActual				varchar(500) = NULL
	,@UsuarioSuceso			varchar(500) = NULL
	,@EvtMet				varchar(500) = NULL
	,@MensajeError			varchar(max) = NULL
	,@FechaReposicionHasta	DATE=NULL
	,@PagosInicial			bit = NULL
	,@_Version				nvarchar(10) = NULL

	--sp_pagosproveedores
	, @Desde				DATE=NULL
	, @Hasta				DATE=NULL
	, @Grupos				nvarchar(max)=NULL

	, @Almacenar_Flujo		bit = null
	, @TipoProv				varchar(5) = null
	, @Empresa				varchar(25) = null
	, @FechaPago			date = null
	, @CardCode				varchar(15) = null
	, @Currency				varchar(15) = null
	, @ImportePropuesto		decimal(18,4) = null
	, @ImporteAprobado		decimal(18,4) = null
	, @Cuenta				varchar(100) = null
	, @Banco				varchar(150) = null
	, @EstatusPagos			int = null
	, @Opc					int = null
	, @Error				varchar(max) = null
	, @TipoLista			varchar(20) = null
	, @FolioSAP				varchar(20) = null
	, @TipoPago				varchar(5) = null
	, @ReferenciaPago		varchar(50) = null
	, @Id					varchar(50) = null
	, @ParamDefinitions		NVARCHAR(MAX) = NULL
	, @Qry1					NVARCHAR(MAX) = NULL
	, @Extension			varchar(15) = NULL
	, @Ruta					varchar(1500) = null
	, @Rechazar				char = null
AS
BEGIN --	@FormaPago		VARCHAR(50)=NULL,
	DECLARE @_VersionActual nvarchar(10) = 'C'
	DECLARE @fechaConsulta date DECLARE @FechaIniMes DATE DECLARE @FechaFinMes DATE
	DECLARE @Rango varchar(50)
	DECLARE @i INT,@ProvMXP NVARCHAR(MAX), @ProvUSD NVARCHAR(MAX), @ProvImp NVARCHAR(MAX), @ProvBancos nvarchar(MAX), @ProvPagCapital Nvarchar(MAX), 
	@ProvActivos Nvarchar(MAX), @ProvAnticipos NVARCHAR(MAX), @PagTRACTOZONE NVARCHAR(MAX), @PagPRONTOPag NVARCHAR(MAX), @PagBLOQCTA NVARCHAR(MAX), @PagFORDWARD NVARCHAR(MAX)
	DECLARE @Tipo nvarchar(20)
	DECLARE @FInMonth varchar(10), @FFnMonth varchar(10)
	DECLARE @DyIn varchar(2), @DyFn varchar(2)
	DECLARE @FechaIn varchar(10), @FechaFn varchar(10), @RangoNom varchar(13)

	DECLARE @MONEDA_PROV VARCHAR(10) = '' 
	Declare @TblGrpCode Table (GrpCode int)

	IF @GroupCode = 1
	begin
		Insert into @TblGrpCode Values(/*110*/104)
		Insert into @TblGrpCode Values(101)
		SET @MONEDA_PROV = '$'
	end
	IF @GroupCode = 2
	begin
		Insert into @TblGrpCode Values(/*111*/105)
		Insert into @TblGrpCode Values(101)
		SET @MONEDA_PROV = 'USD'
	end
	IF @GroupCode = 3
	BEGIN
		Insert into @TblGrpCode Values(/*112*/106)
		Insert into @TblGrpCode Values(/*113*/107)
	END
	IF @GroupCode = 4
	BEGIN
		Insert into @TblGrpCode Values(/*118*/108)
	END
	IF @GroupCode = 5
	BEGIN
		Insert into @TblGrpCode Values(/*109*/102)
		SET @MONEDA_PROV = '$'
	END
	IF @GroupCode = 6
	BEGIN
		Insert into @TblGrpCode Values(/*109*/102)
		SET @MONEDA_PROV = 'USD'
	END	


	IF @TipoConsulta = 1
	BEGIN
		IF @GroupCode in (1,2)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, [Folio SAP]
				, DocCur 'Moneda del documento'
				, Total
				, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
				, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				--, 'A' Clasificación
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END
		
		IF @GroupCode in (4)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, [Folio SAP]
				, DocCur 'Moneda del documento'
				, Total
				, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
				, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				--, 'A' Clasificación
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones 
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode)  )tmp
			Where Provedor in ('20248', '20250', '20705')
			      AND [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END
		
		IF @GroupCode in (3)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, [Folio SAP]
				, DocCur 'Moneda del documento'
				, Total
				, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
				, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				--, 'A' Clasificación
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode))tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END
	END
	
	--GUARDAR CAMBIOS
	IF @TipoConsulta = 2
	BEGIN 
        BEGIN TRY
			Declare @Moneda Varchar(10) = @Estatus;

			IF @Proveedores = 'FR'  
			BEGIN	
				IF @Moneda = '$'
				BEGIN
					IF @TC = 0
					BEGIN
						IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'FR')
							UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR'
						ELSE
							INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'FR', 'N', @NC, @PagosInicial)
						
						
						IF @Aprobado = 0 AND @Propuesta > 0
							UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'P' Where DocEntry = @DocNum 
						IF @Aprobado > 0 
							UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'A' Where DocEntry = @DocNum
						IF @Aprobado = 0 AND @Propuesta = 0 
						BEGIN
							UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = NULL  Where DocEntry = @DocNum
							UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = NULL, U_PropuestaMXP = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR'
						END						
					END
				END
				
				IF @TC = 0 AND @Moneda = 'USD'
				BEGIN
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'FR' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoUSD = @AprobadoUSD, U_PropuestaUSD = @PropuestaUSD, U_Comentarios = @Comentario, U_USD = @Sucursales, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR' 
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, NULL, @PropuestaUSD, NULL, @AprobadoUSD, @Comentario, @Sucursales, 'FR', 'N', @NC, @PagosInicial)
					
					
					IF @AprobadoUSD = 0 AND @PropuestaUSD != 0
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'P' Where DocEntry = @DocNum
					IF @AprobadoUSD != 0 
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'A' Where DocEntry = @DocNum
					IF @AprobadoUSD = 0 AND @PropuestaUSD = 0 
					BEGIN
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = NULL Where DocEntry = @DocNum
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoUSD = NULL, U_PropuestaUSD = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR' 
					END					
				END
				
				IF @TC <> 0 AND @Moneda = 'USD'
				BEGIN
			
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'FR' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_TC = @TC, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR' 
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, @TC, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'FR', 'N', @NC, @PagosInicial)
				
				
					IF @Aprobado = 0 AND @Propuesta != 0
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'P' Where DocEntry = @DocNum
					IF @Aprobado != 0 
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = 'A' Where DocEntry = @DocNum
					IF @Aprobado = 0 AND @Propuesta = 0 
					BEGIN
						UPDATE [SBOCTRZ].[dbo].OPCH SET U_FP = NULL Where DocEntry = @DocNum
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = NULL, U_PropuestaMXP = NULL, U_TC = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'FR' 
					END
				
				END
				END
			
			IF @Proveedores = 'NC'  
			BEGIN	
				IF @Moneda = '$'
				BEGIN
					IF @TC = 0
					BEGIN
						IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'NC' )
							UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC' 
						ELSE
							INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'NC', 'N', @NC, @PagosInicial)
						print 'si'
						print @Aprobado
						print @Propuesta
						print @Docnum
						
						IF @Aprobado = 0 AND @Propuesta < 0
							UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'P' Where DocEntry = @DocNum
						IF @Aprobado < 0 
							UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'A' Where DocEntry = @DocNum
						IF @Aprobado = 0 AND @Propuesta = 0 
						BEGIN
							UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = NULL Where DocEntry = @DocNum
							UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = NULL, U_PropuestaMXP = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC' 
						END						
					END
				END
				
				IF @TC = 0 AND @Moneda = 'USD'
				BEGIN
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'NC' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoUSD = @AprobadoUSD, U_PropuestaUSD = @PropuestaUSD, U_Comentarios = @Comentario, U_USD = @Sucursales, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC' 
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, NULL, @PropuestaUSD, NULL, @AprobadoUSD, @Comentario, @Sucursales, 'NC', 'N', @NC, @PagosInicial)
					
					
					IF @AprobadoUSD = 0 AND @PropuestaUSD != 0
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'P' Where DocEntry = @DocNum
					IF @AprobadoUSD != 0 
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'A' Where DocEntry = @DocNum
					IF @AprobadoUSD = 0 AND @PropuestaUSD = 0 
					BEGIN
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = NULL Where DocEntry = @DocNum
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoUSD = NULL, U_PropuestaUSD = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC' 
					END					
				END
				
				IF @TC <> 0 AND @Moneda = 'USD'
				BEGIN
			
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'NC' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_TC = @TC, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC'
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, @TC, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'NC', 'N', @NC, @PagosInicial)
				
				
					IF @Aprobado = 0 AND @Propuesta != 0
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'P' Where DocEntry = @DocNum
					IF @Aprobado != 0 
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = 'A' Where DocEntry = @DocNum
					IF @Aprobado = 0 AND @Propuesta = 0 
					BEGIN
						UPDATE [SBOCTRZ].[dbo].ORPC SET U_FP = NULL Where DocEntry = @DocNum
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = NULL, U_PropuestaMXP = NULL, U_TC = NULL, U_Comentarios = @Comentario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'NC' 
					END
				
				END
			END
			
			IF @Proveedores = 'SF'  
			BEGIN	
				IF @Moneda = '$'
				BEGIN
					IF @TC = 0
					BEGIN
						IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'SF' )
							UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial  WHERE U_FolioSAP = @DocNum AND U_Tipo = 'SF' 
						ELSE
							INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'SF', 'N', @NC, @PagosInicial)
											
					END
				END
				
				IF @TC = 0 AND @Moneda = 'USD'
				BEGIN
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'SF' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoUSD = @AprobadoUSD, U_PropuestaUSD = @PropuestaUSD, U_Comentarios = @Comentario, U_USD = @Sucursales, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'SF' 
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, NULL, NULL, @PropuestaUSD, NULL, @AprobadoUSD, @Comentario, @Sucursales, 'SF', 'N', @NC, @PagosInicial)
									
				END
				
				IF @TC <> 0 AND @Moneda = 'USD'
				BEGIN
			
					IF EXISTS(Select * from [finance].[PagosProv] Where U_FolioSAP = @DocNum AND U_Tipo = 'SF' )
						UPDATE [finance].[PagosProv] SET U_UpdateDate = GETDATE(), U_AprobadoMXP = @Aprobado, U_PropuestaMXP = @Propuesta, U_TC = @TC, U_Comentarios = @Comentario, U_User = @Usuario, U_NC = @NC, PagosInicial = @PagosInicial WHERE U_FolioSAP = @DocNum AND U_Tipo = 'SF' 
					ELSE
						INSERT INTO [finance].[PagosProv] VALUES(GETDATE(), GETDATE(), @Usuario, @DocNum, @TC, @Propuesta, NULL, @Aprobado, NULL, @Comentario, NULL, 'SF', 'N', @NC, @PagosInicial)
								
				END
			END
			--COMMIT
		END TRY
		BEGIN CATCH
			--ROLLBACK 
			--RETURN 
		END CATCH
	END
	
	IF @TipoConsulta = 3
	BEGIN 
		BEGIN TRY
			UPDATE hnt.Config_ParametrosGenerales SET Valor = @Propuesta WHERE Name = @Comentario
		--COMMIT	
		END TRY
		BEGIN CATCH
			--ROLLBACK 
			--RETURN 
		END CATCH
	END
	
	IF @TipoConsulta = 4
	BEGIN
		SELECT Name[U_Nombre], Valor[U_Valor] FROM hnt.Config_ParametrosGenerales
	END
	
	IF @TipoConsulta = 5
	BEGIN
	SELECT ''
		--select 
		--	Code, 
		--	U_Concepto 'Concepto', 
		--	U_MXP 'MXP', 
		--	U_USD 'USD'
		--from PJ_PagosLibres
		
	END
	
	--IF @TipoConsulta = 6
	--BEGIN
		
	--	Select *
	--	From(
	--		Select B.CardCode, B.CardName as CardName, ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
	--		From [SBOCTRZ].DBO.OCRD B 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
	--		Union ALL
	--		Select '','','','')tmp
	--	Order by CardName
		
	--END

	IF @TipoConsulta = 6 --PROVEEDORES
	BEGIN

		 -- COMERCIALIZADORA TRZONE (SBOCTRZ)
			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SBOCTRZ].DBO.OCRD B 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
		
		-- SERVICIOS CORPORATIVOS (SERVCORP)

			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SERVCORP].DBO.OCRD B 
			LEFT JOIN [SERVCORP].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
		
	    -- DISTRIBUIDORA PEJ (PEJ)
		
			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SB1CPEJ].DBO.OCRD B 
			LEFT JOIN [SB1CPEJ].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
		
		-- LOGÍSTICA Y TRANSPORTE (LOGTRA)
		
			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SBOLOGTRANSP].DBO.OCRD B 
			LEFT JOIN [SBOLOGTRANSP].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
		
		-- DISTRIBUIDORA TRZONE (DTRZ)
		
			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SBODTRZ].DBO.OCRD B 
			LEFT JOIN [SBODTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
		
		-- SERVICIOS DE IMPORTACION (SERVIMPO)
		
			SELECT B.CardCode, B.CardName , ISNULL(F.BankName,'') BankName, ISNULL(B.DflAccount, '') DflAccount
			FROM [SBOSERVIMPO].DBO.OCRD B 
			LEFT JOIN [SBOSERVIMPO].[dbo].ODSC F ON B.BankCode = F.BankCode	Where CardType = 'S'
			UNION ALL
			SELECT '' CardCode, '' CardName,'' BankName,'' DflAccount
			ORDER BY Cardcode
	END
	
	--IF @TipoConsulta = 7
	--BEGIN
		
	--	SELECT
	--		ROW_NUMBER() OVER ( PARTITION BY Provedor ORDER BY Provedor) 'Num'
	--		, ID DocEntry
	--		, [Folio SAP]
	--		, Provedor 'Proveedor'
	--		, Nombre
	--		, DocCur 'Moneda'
	--		, Case When DocCur = 'USD' Then 
	--				ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 
	--			   When DocCur = '$' Then 
	--				ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) End Aprobado
	--		, GETDATE() 'FechaContabilizacion'
	--		, GETDATE() 'Fecha transferencia'
	--		, Case When DocCur  = 'USD' Then
	--				'2140-002-000'
	--			   When DocCur = '$' Then 
	--			    '1120-002-004' End 'Cuenta contable'
	--		, Case When Tipo = 'FR' Then 'it_PurchaseInvoice'
	--			   When Tipo = 'NC' Then 'it_PurchaseCreditNote'
	--			   When Tipo = 'SF' Then 'it_JournalEntry' End Tipo
	--		, DocLine
	--		, 'Pendiente' [Estatus]
	--		  --Case When ISNULL((SELECT U_Template FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 'N') = 'N' Then 'Pendiente'
	--		  --	   Else 'Procesado' End 'Estatus'
	--		, GroupCode Grupo				
	--	FROM
	--	(
	--		SELECT 
	--			'FR' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			B.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--			, A.DocEntry 'ID'
	--			, 0 DocLine 
	--			, B.GroupCode
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (110,111,112,113,118,101)
	--		--NC
	--		UNION ALL
	--		SELECT 
	--			'NC' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			B.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--			,A.DocEntry 'ID'
	--			,0 DocLine
	--			,B.GroupCode
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (110,111,112,113,118,101)
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--			'SF' Tipo,
	--			'Saldo a favor' as 'Estatus',
	--			A.CardCode,
	--			C.CardName,
	--			A.DocDate,
	--			A.DocDueDate,
	--			'',
	--			A.DocNum
	--			,A.DocCurr
	--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--			,Case When Case When DocCurr = 'USD' Then 
	--				ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = A.DocEntry AND U_Tipo = 'SF'), 0) 
	--			   When DocCurr = '$' Then 
	--				ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = A.DocEntry AND U_Tipo = 'SF'), 0) End <> 0 Then 'A' End
	--			,A.DocEntry
	--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--			,A.TransId 'ID'
	--			,1 DocLine
	--			,C.GroupCode
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND A.OpenBal <> 0 AND C.GroupCode IN (110,111,112,113,118,101))tmp
	--	Where U_FP = 'A'
	--	Order by Provedor, [Fecha de vencimiento]
		
	--END
	
	IF @TipoConsulta = 8
	BEGIN
		
			Select AcctCode 'Codigo', AcctCode + ' '+AcctName 'Nombre' from [SBOCTRZ].DBO.OACT Where AcctCode like '1120-%' AND Postable = 'Y'
			UNION ALL
			Select AcctCode 'Codigo', AcctCode + ' '+AcctName 'Nombre' from [SBOCTRZ].DBO.OACT Where AcctCode = '2140-002-000' --> usd impo
			--2140-002-000 --> usd impo
	END
	
	IF @TipoConsulta = 9
	BEGIN
		BEGIN TRY

			IF @Comentario = 'it_PurchaseInvoice' 
				SET @Tipo = 'FR'
			IF @Comentario = 'it_PurchaseCreditNote'
				SET @Tipo = 'NC'
			IF @Comentario = 'it_JournalEntry'
				SET @Tipo = 'SF'
				
			Update [finance].[PagosProv] Set U_Template = 'Y' Where U_FolioSAP = @DocNum AND U_Tipo = @Tipo
		COMMIT
		END TRY
		BEGIN CATCH
			ROLLBACK 
			RETURN 
		END CATCH
	END
	
	IF @TipoConsulta = 10
	BEGIN
	SELECT 
		A.DocDate [Fecha], 
		D.DocNum [Factura], 
		B.CardName [Proveedor], 
		ISNULL(CASE WHEN A.DocCurr = '$' THEN SumApplied END, 0) 'MXP', 
		ISNULL(CASE WHEN A.DocCurr = 'USD' THEN AppliedFC END,0) 'USD'
	FROM [SBOCTRZ].DBO.OVPM A WITH (NOLOCK)
		INNER JOIN [SBOCTRZ].DBO.OCRD B WITH (NOLOCK) ON A.CardCode = B.CardCode
		INNER JOIN [SBOCTRZ].DBO.VPM2 C WITH (NOLOCK) ON A.DocNum = C.DocNum
		INNER JOIN [SBOCTRZ].DBO.OPCH D WITH (NOLOCK) ON C.DocEntry = D.DocEntry
		INNER JOIN [SBOCTRZ].DBO.OCRG E WITH (NOLOCK) ON B.GroupCode = E.GroupCode
	WHERE A.DocDate BETWEEN @FechaDesde AND @FechaHasta
		AND C.InvType = 18 
	ORDER BY Proveedor, Fecha


	END

	----se agrego columna con descuentos de prov con pp 30-06-2015
	--IF @TipoConsulta = 11
	--BEGIN
	--	IF @GroupCode in (1,2)
	--	BEGIN
	--		--Facturas
	--		SELECT 
	--			Estatus
	--			, Provedor 'Proveedor'
	--			, Nombre
	--			, [Fecha de Contabilización]
	--			, [Fecha de vencimiento]
	--			, [Folio Factura]
	--			, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
	--			, DocCur 'Moneda del documento'
	--			, Total [Monto original]
	--			, CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
	--						THEN CASE WHEN Indicator = 'PR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
	--						     CASE WHEN Tipo = 'FR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
	--				   ELSE  Total END Total
	--			, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
	--			, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
	--			, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
	--			, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
	--			, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
	--			, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
	--			, DocEntry
	--			, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
	--			, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
	--			, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
	--			, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
	--			, ISNULL(Cuenta, '' ) Cuenta
	--			, Tipo
	--			, U_Condiciones
	--			, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
	--		FROM
	--		(
	--		SELECT 
	--		'FR' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		b.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
	--		--NC
	--		UNION ALL
	--		SELECT 
	--		'NC' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		b.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--		'SF' Tipo,
	--		'Saldo a favor' as 'Estatus',
	--		A.CardCode,
	--		C.CardName,
	--		A.DocDate,
	--		A.DocDueDate,
	--		'',
	--		A.DocNum
	--		,A.DocCurr
	--		,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--		,NULL
	--		,A.DocEntry
	--		,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--		,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,''
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--		LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--		LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV)tmp
	--		Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
	--		Order by Provedor, [Fecha de vencimiento]
	--	END
		
	--	IF @GroupCode in (4)
	--	BEGIN
	--		--Facturas
	--		SELECT 
	--			Estatus
	--			, Provedor 'Proveedor'
	--			, Nombre
	--			, [Fecha de Contabilización]
	--			, [Fecha de vencimiento]
	--			, [Folio Factura]
	--			, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
	--			, DocCur 'Moneda del documento'
	--			, Total [Monto original]
	--			, CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
	--						THEN CASE WHEN Indicator = 'PR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
	--						     CASE WHEN Tipo = 'FR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
	--				   ELSE  Total END Total
	--			, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
	--			, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
	--			, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
	--			, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
	--			, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
	--			, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
	--			, DocEntry
	--			, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
	--			, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
	--			, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
	--			, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
	--			, ISNULL(Cuenta, '' ) Cuenta
	--			, Tipo
	--			, U_Condiciones
	--			, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND X.PP IS NULL),0) Descuento

	--		FROM
	--		(
	--		SELECT 
	--		'FR' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		B.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
	--		--NC
	--		UNION ALL
	--		SELECT 
	--		'NC' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		B.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--		'SF' Tipo,
	--		'Saldo a favor' as 'Estatus',
	--		A.CardCode,
	--		C.CardName,
	--		A.DocDate,
	--		A.DocDueDate,
	--		'',
	--		A.DocNum
	--		,A.DocCurr
	--		,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--		,NULL
	--		,A.DocEntry
	--		,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--		,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,''
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--		LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--		LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode)  )tmp
	--		Where Provedor in ('20248', '20250', '20705')
	--		      AND [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
	--		Order by Provedor, [Fecha de vencimiento]
	--	END
		
	--	IF @GroupCode in (3)
	--	BEGIN
	--		--Facturas
	--		SELECT 
	--			Estatus
	--			, Provedor 'Proveedor'
	--			, Nombre
	--			, [Fecha de Contabilización]
	--			, [Fecha de vencimiento]
	--			, [Folio Factura]
	--			, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
	--			, DocCur 'Moneda del documento'
	--			, Total [Monto original]
	--			, CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
	--						THEN CASE WHEN Indicator = 'PR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
	--						     CASE WHEN Tipo = 'FR' THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
	--				   ELSE  Total END Total
	--			, Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) 'Prop'
	--			, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
	--			, Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) 'Apro'
	--			, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
	--			, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
	--			, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
	--			, DocEntry
	--			, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
	--			, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
	--			, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
	--			, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
	--			, ISNULL(Cuenta, '' ) Cuenta
	--			, Tipo
	--			, U_Condiciones
	--			, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento

	--		FROM
	--		(
	--		SELECT 
	--		'FR' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		B.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
	--		--NC
	--		UNION ALL
	--		SELECT 
	--		'NC' Tipo,
	--		CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--		ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--		END END as 'Estatus',
	--		A.CardCode 'Provedor',
	--		B.CardName 'Nombre',
	--		A.DocDate 'Fecha de Contabilización',
	--		A.DocDueDate 'Fecha de vencimiento',
	--		A.NumAtCard 'Folio Factura',
	--		A.DocNum 'Folio SAP'
	--		,A.DocCur
	--		,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--		,A.U_FP
	--		,A.DocEntry
	--		,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--		,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,A.Indicator
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--		INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--		'SF' Tipo,
	--		'Saldo a favor' as 'Estatus',
	--		A.CardCode,
	--		C.CardName,
	--		A.DocDate,
	--		A.DocDueDate,
	--		'',
	--		A.DocNum
	--		,A.DocCurr
	--		,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--		,NULL
	--		,A.DocEntry
	--		,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--		,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		,''
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--		LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--		INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--		LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--		INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--		LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode))tmp
	--		Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
	--		Order by Provedor, [Fecha de vencimiento]
	--	END
	--END

	----PREVIO DE PAGOS
	--IF @TipoConsulta = 12
	--BEGIN
	--SELECT
	--	Tipo,
	--	Proveedor, 
	--	Nombre,
	--	SUM([Aprobado MXP]) [Aprobado MXP],
	--	SUM([Aprobado USD]) [Aprobado USD],
	--	BankName [Banco],
	--	Cuenta
	--INTO #TEMP
	--FROM(
	--	SELECT
	--		'MXP' Tipo 
	--		, Provedor 'Proveedor'
	--		, Nombre
	--		, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) [Aprobado MXP]
	--		, NULL [Aprobado USD]
	--		, BankName
	--		, Cuenta
	--	FROM
	--	(
	--		SELECT 
	--			'FR' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			b.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (110,101) AND B.Currency = '$'
	--		--NC
	--		UNION ALL
	--		SELECT 
	--			'NC' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			b.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (110,101) AND B.Currency = '$'
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--			'SF' Tipo,
	--			'Saldo a favor' as 'Estatus',
	--			A.CardCode,
	--			C.CardName,
	--			A.DocDate,
	--			A.DocDueDate,
	--			'',
	--			A.DocNum
	--			,A.DocCurr
	--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--			,NULL
	--			,A.DocEntry
	--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (110,101) AND C.Currency = '$')tmp
	--	Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta	
	--		AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
	--	UNION ALL
	--	SELECT
	--		'USD' Tipo 
	--		, Provedor 'Proveedor'
	--		, Nombre
	--		, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 0
	--			THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) * (Select U_Valor from PJ_PagosProv x Where x.U_Nombre = 'TC')END [Aprobado MXP]
	
	--		, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 1
	--			THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) END [Aprobado USD]
	--		, BankName
	--		, Cuenta
	--	FROM
	--	(
	--		SELECT 
	--			'FR' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			b.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (111,101) AND B.Currency = 'USD'
	--		--NC
	--		UNION ALL
	--		SELECT 
	--			'NC' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			b.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (111,101) AND B.Currency = 'USD'
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--			'SF' Tipo,
	--			'Saldo a favor' as 'Estatus',
	--			A.CardCode,
	--			C.CardName,
	--			A.DocDate,
	--			A.DocDueDate,
	--			'',
	--			A.DocNum
	--			,A.DocCurr
	--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--			,NULL
	--			,A.DocEntry
	--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (111,101) AND C.Currency = 'USD')tmp
	--	Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta	
	--		AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
	--	UNION ALL
	--	SELECT
	--		'Importación' Tipo 
	--		, Provedor 'Proveedor'
	--		, Nombre
	--		, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 0
	--			THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) * (Select U_Valor from PJ_PagosProv x Where x.U_Nombre = 'TC')END [Aprobado MXP]
	
	--		, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 1
	--			THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) END [Aprobado USD]
	--		, BankName
	--		, ISNULL(Cuenta, '' ) Cuenta
	--	FROM
	--	(
	--		SELECT 
	--			'FR' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			B.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OPCH A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (112,113)
	--		--NC
	--		UNION ALL
	--		SELECT 
	--			'NC' Tipo,
	--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
	--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
	--			END END as 'Estatus',
	--			A.CardCode 'Provedor',
	--			B.CardName 'Nombre',
	--			A.DocDate 'Fecha de Contabilización',
	--			A.DocDueDate 'Fecha de vencimiento',
	--			A.NumAtCard 'Folio Factura',
	--			A.DocNum 'Folio SAP'
	--			,A.DocCur
	--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
	--			,A.U_FP
	--			,A.DocEntry
	--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
	--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].ORPC A 
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
	--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
	--		Where A.DocStatus = 'O' AND B.GroupCode IN (112,113)
	--		UNION ALL
	--		--Saldos a favor
	--		SELECT distinct
	--			'SF' Tipo,
	--			'Saldo a favor' as 'Estatus',
	--			A.CardCode,
	--			C.CardName,
	--			A.DocDate,
	--			A.DocDueDate,
	--			'',
	--			A.DocNum
	--			,A.DocCurr
	--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
	--			,NULL
	--			,A.DocEntry
	--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
	--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
	--		FROM [SBOCTRZ].[dbo].OVPM A
	--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
	--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
	--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
	--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
	--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
	--		Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (112,113))tmp
	--	Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
	--			AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
	--				When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
	--				When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado')DATOS
	--GROUP BY Tipo, Proveedor, Nombre, Cuenta, BankName
	--ORDER BY Tipo, Proveedor


	--SELECT * FROM #TEMP
	--UNION ALL
	--SELECT Tipo + ' TOTAL' , NULL, Tipo + ' TOTAL'  collate database_default, + SUM([Aprobado MXP]), SUM([Aprobado USD]), NULL, NULL FROM #TEMP
	--GROUP BY Tipo
	--ORDER BY Tipo



	--DROP TABLE #TEMP
	
	--END


	--AGREGAR CHECK NC
	IF @TipoConsulta = 13
	BEGIN
		
		IF @GroupCode in (1)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]

				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				/*10*/, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				--, CAST(ISNULL(U_Flujo, 0) AS bit) 'U_Flujo'
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				/*20*/, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				------------------------------------------------------------------------------------------------------------------------------------------
				, CASE WHEN ISNULL(U_TC,0) = 0 THEN NULL
					WHEN ISNULL(U_TC,0) > 0 THEN 
					(CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END) / NULLIF(U_TC,0)
				END[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.U_Flujo
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,''
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP[U_FP]
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,D.U_Flujo
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
			AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (2)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, CASE WHEN ISNULL(U_TC,0) = 0 THEN DocCur ELSE 'USD' END 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END * Total[Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				--, CAST(ISNULL(U_Flujo, 0) AS bit) 'U_Flujo'
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			,A.U_Flujo
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			,''
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.U_TC
			,A.CreateDate
			,D.U_Flujo
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
			AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (3)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, U_CtaCredito
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_CtaCredito
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_CtaCredito
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,NULL
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode))tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END
		
		IF @GroupCode in (4)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END * 
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
								  THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND X.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode)  )tmp
			Where Provedor in ('20248', '20250', '20705','22305', '20667')
			      AND [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (5, 6)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END


	END

--	-------PEDRO 2015-10-28 Promedio de dias de pago
	IF @TIPOCONSULTA=14
	BEGIN
		SELECT 
			Proveedor,
			Nombre,
			Grupo,
			[Condicion de Pago] [Condición de pago],
			ISNULL(AVG([Promedio-Dias]), 0) [Promedio días de pago],
			ISNULL(SUM(DocTotal)/3, 0) [Promedio de pagos (3 meses)]
		FROM(
			SELECT CL.CardCode[Proveedor],CL.CardName[Nombre], GP.GroupName [Grupo], CP.PymntGroup[Condicion de Pago], 
			CASE WHEN FA.DocDate between DATEADD(mm,-3,DATEADD(mm,DATEDIFF(mm,0,@FechaHasta),0)) AND DATEADD(ms,-3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,@FechaHasta),0))) THEN DP.SumApplied  END  DocTotal,
			CASE WHEN FA.DocDate BETWEEN @FechaDesde AND @FechaHasta THEN DATEDIFF(DAY, FA.DocDate, EP.DocDate) END [Promedio-Dias]
			FROM sap.VW_OPCH FA
			INNER JOIN [SBOCTRZ].[dbo].OCRD CL ON CL.CardCode = FA.CardCode
			INNER JOIN [SBOCTRZ].[dbo].OCTG CP ON CP.GroupNum = CL.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].VPM2 DP ON DP.DocEntry = FA.DocEntry
			INNER JOIN [SBOCTRZ].[dbo].OVPM EP ON EP.DocNum = DP.DocNum AND EP.Canceled='N'
			INNER JOIN [SBOCTRZ].[dbo].OCRG GP ON GP.GroupCode = Cl.GroupCode
			WHERE FA.DocDate BETWEEN CASE WHEN @FechaDesde < DATEADD(mm,-3,DATEADD(mm,DATEDIFF(mm,0,@FechaHasta),0)) THEN @FechaDesde Else DATEADD(mm,-3,DATEADD(mm,DATEDIFF(mm,0,@FechaHasta),0)) END  AND @FechaHasta AND DP.InvType= 18 --and cl.CardCode = '10001'
			--GROUP BY CL.CardCode,CL.CardName, CP.PymntGroup, GP.GroupName,FA.DocDate, EP.DocDate, EP.DocTotal
			)T0
		GROUP BY Proveedor, Nombre, Grupo, [Condicion de Pago]
		HAVING ISNULL(AVG([Promedio-Dias]), 0) + ISNULL(AVG(DocTotal), 0) > 0
		ORDER BY Proveedor
	END

	--Pedro JM Consulta de pagos de factura segun el tipo de moneda MXM o USD en un rango especifico
	--03-11-2015 12:28
	IF @TIPOCONSULTA=15
	BEGIN
		Select FA.DocDate[Fecha], CAST(FA.DocNum AS VARCHAR(MAX))[Num Factura SAP], FA.NumAtCard[Num Factura Proveedor]
		,CL.CardCode[NoProveedor], 
		CL.CardName[Proveedor]
		,
		CASE
		WHEN EP.DocCurr='$' THEN DP.SumApplied
		END[MXP],
		CASE
		WHEN EP.DocCurr='USD' THEN DP.AppliedFC
		END[USD]
		,0[Orden]  
		FROM [SBOCTRZ].[dbo].OPCH FA
		INNER JOIN [SBOCTRZ].[dbo].VPM2 DP ON DP.DocEntry = FA.DocEntry
		INNER JOIN [SBOCTRZ].[dbo].OVPM EP ON EP.DocNum = DP.DocNum AND EP.Canceled='N'
		INNER JOIN [SBOCTRZ].[dbo].OCRD CL ON CL.CardCode = FA.CardCode
		where FA.docdate BETWEEN @FechaDesde AND @FechaHasta

		UNION

		Select NULL[Fecha], NULL,'SUB-TOTAL'[NumFACTURASAP], CL.CardCode[NoProveedor], 
		CL.CardName[Proveedor]
		,
		CASE
		WHEN EP.DocCurr='$' THEN SUM(DP.SumApplied)
		END[MXP],
		CASE
		WHEN EP.DocCurr='USD' THEN SUM(DP.AppliedFC)
		END[USD]
		,1[orden]  
		FROM [SBOCTRZ].[dbo].OPCH FA
		INNER JOIN [SBOCTRZ].[dbo].VPM2 DP ON DP.DocEntry = FA.DocEntry
		INNER JOIN [SBOCTRZ].[dbo].OVPM EP ON EP.DocNum = DP.DocNum AND EP.Canceled='N'
		INNER JOIN [SBOCTRZ].[dbo].OCRD CL ON CL.CardCode = FA.CardCode
		where FA.docdate BETWEEN @FechaDesde AND @FechaHasta
		GROUP BY CL.CardCode, CL.CardName, EP.DocCurr
		ORDER BY CL.CardName, Orden

		
	END

	--Pedro JM Consulta de la suma Total de pagos segun el tipo de moneda MXM o USD en un rango especifico
	--03-11-2015 12:28
	IF @TIPOCONSULTA=16
	BEGIN
		SELECT(
		SELECT 
		SUM(DP0.SumApplied)
		FROM 
		[SBOCTRZ].[dbo].OPCH FA0
		INNER JOIN [SBOCTRZ].[dbo].VPM2 DP0 ON DP0.DocEntry = FA0.DocEntry
		INNER JOIN [SBOCTRZ].[dbo].OVPM EP0 ON EP0.DocNum = DP0.DocNum AND EP0.Canceled='N'
		where FA0.docdate BETWEEN @FechaDesde AND @FechaHasta AND EP0.DocCurr='$')[MontoTotalMXM]
		,
		(SELECT 
		SUM(DP0.AppliedFC)
		FROM 
		[SBOCTRZ].[dbo].OPCH FA0
		INNER JOIN [SBOCTRZ].[dbo].VPM2 DP0 ON DP0.DocEntry = FA0.DocEntry
		INNER JOIN [SBOCTRZ].[dbo].OVPM EP0 ON EP0.DocNum = DP0.DocNum AND EP0.Canceled='N'
		where FA0.docdate BETWEEN @FechaDesde AND @FechaHasta AND EP0.DocCurr='USD')[MontoTotalUSD]
	END

--	--Reposicion de caja
--	IF @TipoConsulta = 17
--	BEGIN
--		Select * From tbl_RepCaja Where sEstatus <> 'C'
--	END

--	--Insertar reposicion de caja
--	IF @TipoConsulta = 18
--	BEGIN
--		DECLARE @Code NUMERIC
--		SET @Code = ISNULL((SELECT MAX(Code) FROM tbl_RepCaja ), 0) + 1

--		INSERT tbl_RepCaja(Code, sFormaPago , sReferencia , sSucursal , dtFechaReposicion, dtFechaAplicacion, sEstatus)
--					Values(@Code, @FormaPago, @Referencia, @Sucursal , @FechaReposicion, @FechaAplicacion, 'A')

--	    Select @Code
--	END

--	IF @TipoConsulta = 19
--	BEGIN
		
--		INSERT INTO tbl_RepCaja1(dCode, iLine, sFactura, sEmitido, sRFC, sConcepto, dMonto, dRetencionIVA, dRetencionISR, sOCSAP, sFacturaSAP, sPagoSAP, sPDF, sXML, exentoIVA, idPDF, idXML, deducible, dIVA)
--			VALUES(@Folio, @Line, @Factura, @Emitido, @RFC, @Concepto, @Monto, @RetencionIVA, @RetnecionISR, @OCSAP, @FacturaSAP, @PagoSAP, @pathPDF, @pathXML, @exentoIVA, @idPDF, @idXML, @deducible, ROUND(@Monto*0.16, 2, 1))
--	END

--	IF @FechaReposicionHasta IS NULL
--		SET @FechaReposicionHasta = @FechaReposicion

--	IF @TipoConsulta = 20
--	BEGIN
--		IF @Sucursal = 'Estado de Mexico'
--			SELECT @Sucursal = 'EDOMEX'
--		SELECT rc.Code, rc1.iLine, sFormaPago, RC.sReferencia, rc.dtFechaReposicion, 
--			rc.[dtFechaAplicacion],RC1.sFactura, RC1.sEmitido,
--			RC1.sRFC, RC1.sConcepto, ISNULL(RC1.dMonto,0)[dMonto], NULL exentoIVA, ISNULL(RC1.dIVA,0)[dIVA], ISNULL(RC1.dRetencionIVA,0)[dRetencionIVA], 
--			ISNULL(RC1.dRetencionISR,0)[dRetencionISR], 
--			ISNULL(RC1.dMonto,0) dTotal,
--			--((ISNULL(RC1.dMonto,0) + ISNULL(RC1.dIVA,0)) - (ISNULL(RC1.dRetencionIVA,0)+ISNULL(RC1.dRetencionISR,0))) + ISNULL(RC1.exentoIVA, 0)[dTotal],
--			RC1.sOCSAP,
--			RC1.sFacturaSAP, RC1.sPagoSAP sPagosSAP, ''[btnXML], RC1.sXML, ''[btnPDF], RC1.sPDF, REC.dtFecha[dtFechaReconciliacion]
--		FROM [SGUV].[dbo].[tbl_RepCaja] RC
--		LEFT JOIN [SGUV].[dbo].[tbl_Reconciliacion] REC ON REC.id_Reposicion = RC.Code
--		--LEFT JOIN [SGUV].[dbo].[tbl_Extracto] ext ON ext.Code = REC.id_Extracto
--		INNER JOIN  [SGUV].[dbo].[tbl_RepCaja1] RC1 ON RC1.dCode = RC.Code
--		WHERE RC.sFormaPago='Transferencia'
--			AND RC.sSucursal = @Sucursal
--			AND Rc.dtFechaReposicion = @FechaReposicion 
--		UNION
--		SELECT rc.Code, 0, sFormaPago, RC.sReferencia, rc.dtFechaReposicion, rc.[dtFechaAplicacion], '', '',
--		'', '', SUM(ISNULL(RC1.dMonto,0)), SUM(rc1.exentoIVA) exentoIVA, SUM(ISNULL(RC1.dIVA,0)), SUM(ISNULL(RC1.dRetencionIVA,0)), SUM(ISNULL(RC1.dRetencionISR,0)), 
--		--((SUM(ISNULL(RC1.dMonto,0)) + SUM(ISNULL(RC1.dIVA,0)) + SUM(ISNULL(RC1.exentoIVA, 0))) - (SUM(ISNULL(RC1.dRetencionIVA,0))+SUM(ISNULL(RC1.dRetencionISR,0)))) +SUM(ISNULL(RC1.exentoIVA, 0)), 
--		SUM(ISNULL(RC1.dMonto,0)) + SUM(ISNULL(rc1.exentoIVA,0)) + SUM(ISNULL(RC1.dIVA,0)) - (SUM(ISNULL(RC1.dRetencionIVA,0)) + SUM(ISNULL(RC1.dRetencionISR,0))),
--		NULL,
--		NULL, NULL, ''[btnXML], ''[sXML], ''[btnPDF], ''[sPDF], REC.dtFecha[dtFechaReconciliacion]
--		FROM [SGUV].[dbo].[tbl_RepCaja] RC
--		LEFT JOIN [SGUV].[dbo].[tbl_Reconciliacion] REC ON REC.id_Reposicion = RC.Code
--		INNER JOIN  [SGUV].[dbo].[tbl_RepCaja1] RC1 ON RC1.dCode = RC.Code
--		WHERE RC.sFormaPago='Cheque'
--			AND RC.sSucursal = @Sucursal
--			AND RC.dtFechaReposicion BETWEEN @FechaReposicion AND @FechaReposicionHasta
--			--AND Rc.dtFechaReposicion = @FechaReposicion
--		GROUP BY rc.Code, sFormaPago, RC.sReferencia, rc.dtFechaReposicion, rc.[dtFechaAplicacion], REC.dtFecha
--		ORDER BY Code
--	END
	
--	IF @TipoConsulta = 21
--	BEGIN
		
--		IF @Sucursal = 'Estado de Mexico'
--			SELECT @Sucursal = 'EDOMEX'
--		SELECT rc1.dCode Code, rc1.iLine, ''[sFormaPago], ''[sReferencia], ''[dtFechaReposicion], ''[dtFechaAplicacion], 
--		RC1.sFactura, RC1.sEmitido,
--		RC1.sRFC, RC1.sConcepto, ISNULL(RC1.dMonto,0)[dMonto], RC1.exentoIVA, ISNULL(RC1.dIVA,0)[dIVA], ISNULL(RC1.dRetencionIVA,0)[dRetencionIVA], 
--		ISNULL(RC1.dRetencionISR,0)[dRetencionISR], (ISNULL(RC1.dMonto,0) + ISNULL(RC1.dIVA,0)) - (ISNULL(RC1.dRetencionIVA,0)+ISNULL(RC1.dRetencionISR,0)) + ISNULL(RC1.exentoIVA, 0)[dTotal], RC1.sOCSAP,
--		RC1.sFacturaSAP, RC1.sPagoSAP sPagosSAP, ''[btnXML], RC1.sXML, ''[btnPDF], RC1.sPDF, ''[dtFechaReconciliacion], rc1.idPDF, RC1.idXML
--		FROM [SGUV].[dbo].[tbl_RepCaja] RC
--		INNER JOIN  [SGUV].[dbo].[tbl_RepCaja1] RC1 ON RC1.dCode = RC.Code
--		WHERE RC.sFormaPago='Cheque'
--			AND RC.sSucursal = @Sucursal
--			AND RC.dtFechaReposicion BETWEEN @FechaReposicion AND @FechaReposicionHasta
--			--AND Rc.dtFechaReposicion = @FechaReposicion
--		ORDER BY rc1.dCode, RC1.iLine
--	END

--	IF @TipoConsulta = 22
--	BEGIN
--		SELECT Fecha, ISNULL(dBancos, 0) dBancos, ISNULL(dSeguridad, 0) dSeguridad 
--		From tbl_RepCaja2 
--		Where 
--		Fecha = @FechaReposicion 
--		AND sSucursal = @Sucursal
--	END

--	IF @TipoConsulta = 23 
--	BEGIN
--		IF NOT EXISTS (Select * from tbl_RepCaja2 Where Fecha = @FechaReposicion AND sSucursal = @Sucursal)
--			INSERT INTO tbl_RepCaja2 VALUES (@FechaReposicion, @Sucursal , @Bancos, @Seguridad)
--		Else 
--			UPDATE tbl_RepCaja2 SET dBancos = @Bancos, dSeguridad = @Seguridad Where Fecha = @FechaReposicion AND sSucursal = @Sucursal
--	END


--	IF @TipoConsulta = 24
--	BEGIN
--		IF ISNULL(@OCSAP, '') <> ''
--			IF EXISTS (Select DocNum From [SBOCTRZ].dbo.OPOR Where DocNum = @OCSAP)
--				Update tbl_RepCaja1 SET sOCSAP = @OCSAP, sFacturaSAP = @FacturaSAP, sPagoSAP = @PagoSAP 
--				Where dCode = @Folio AND iLine = @Line
--			ELSE SET @Mensaje = 'El Folio de OC [' + @OCSAP + '] no existe.'

--		IF ISNULL(@FacturaSAP, '') <> ''
--			IF EXISTS (Select DocNum From [SBOCTRZ].dbo.OPCH Where DocNum = @FacturaSAP)
--			BEGIN
--				Update tbl_RepCaja1 SET sOCSAP = @OCSAP, sFacturaSAP = @FacturaSAP, sPagoSAP = @PagoSAP 
--				Where dCode = @Folio AND iLine = @Line

--				DECLARE @DocEntry INT, @DocType VARCHAR(5), @CardCode VARCHAR(10)
--				SELECT @idPDF = idPDF, @idXML = idXML FROM tbl_RepCaja1 WHERE dCode = @Folio AND iLine = @Line
--				Select @DocNum = DocNum, @DocEntry = DocEntry, @DocType = DocType, @CardCode = CardCode 
--				From [SBOCTRZ].dbo.OPCH Where DocNum = @FacturaSAP

--				UPDATE tbl_File_CFDI 
--				SET DocEntry = @DocEntry,
--					DocNum = @DocNum,
--					DocType = @DocType,
--					CardCode = @CardCode,
--					nTipoEmpresa = 1
--				WHERE nIdArchivo in (@idPDF, @idXML)

--				--set @Mensaje = CAST(@DocEntry AS VARCHAR(15)) + ' ' + CAST(@idPDF AS VARCHAR(15)) + ' ' + CAST(@idXML AS VARCHAR(15))
--			END
--			ELSE SET @Mensaje = 'El Folio de Factura [' + @FacturaSAP + '] no existe.'

--		IF ISNULL(@PagoSAP, '') <> ''
--			IF EXISTS (Select DocNum From [SBOCTRZ].dbo.OVPM Where DocNum = @PagoSAP)
--				Update tbl_RepCaja1 SET sOCSAP = @OCSAP, sFacturaSAP = @FacturaSAP, sPagoSAP = @PagoSAP 
--				Where dCode = @Folio AND iLine = @Line
--			ELSE SET @Mensaje = 'El Folio de Pago [' + @PagoSAP + '] no existe.'
		
--		Update tbl_RepCaja1 SET dMonto = @Monto, sConcepto = @Concepto, 
--								exentoIVA = @exentoIVA, 

--								dRetencionIVA = @RetencionIVA, 
--								dRetencionISR = @RetnecionISR  
--				Where dCode = @Folio AND iLine = @Line
--	END

--	--Extractos bancarios abiertos
--	IF @TipoConsulta = 25
--	BEGIN
--		SELECT 
--			A.Code,
--			A.dtFecha,
--			sConcepto,
--			sReferencia,
--			sRefAmpliada,
--			dCargo
--		FROM 
--			DBO.tbl_Extracto A
--			LEFT JOIN dbo.tbl_Reconciliacion B ON A.Code = B.id_Extracto
--		WHERE 
--			B.id_Reposicion IS NULL
--	END

--	--Operaciones de reposicion de caja abiertas
--	IF @TipoConsulta = 26
--	BEGIN
--		Select 
--			A.Code,
--			A.sFormaPago,
--			A.dtFechaReposicion,
--			A.sReferencia,
--			SUM(ISNULL(B.dMonto, 0) + ISNULL(B.dIVA, 0) + ISNULL(B.dRetencionIVA, 0) + ISNULL(B.dRetencionISR, 0)) Total
--		From 
--			dbo.tbl_RepCaja A
--			INNER JOIN dbo.tbl_RepCaja1 B ON A.Code = B.dCode 
--			LEFT JOIN dbo.tbl_Reconciliacion C ON A.Code = C.id_Reposicion 
--		Where 
--			C.Code IS NULL
--		GROUP BY A.sFormaPago, A.dtFechaReposicion, A.sReferencia, A.Code 
--	END

--	IF @TipoConsulta = 27
--	BEGIN
--		Set @Mensaje = 'Ok'

--		IF 
--			(Select ROUND(SUM(ISNULL(B.dMonto, 0) + ISNULL(B.dIVA, 0) + ISNULL(B.dRetencionIVA, 0) + ISNULL(B.dRetencionISR, 0)), 2)
--			 From dbo.tbl_RepCaja A
--				INNER JOIN dbo.tbl_RepCaja1 B ON A.Code = B.dCode
--			 Where A.Code = @idReposicion) = (Select ROUND(dCargo, 2) From dbo.tbl_Extracto Where Code = @idExtracto)

--		INSERT INTO dbo.tbl_Reconciliacion VALUES(@idReposicion, @idExtracto, GETDATE(), @UserID)

--		ELSE
--			SET @Mensaje = 'El monto de las transacciones no coinciden!!'

--	END

--	IF @TipoConsulta = 28
--	BEGIN
--		--DECLARE @Anio int, @Mes int
--		DECLARE @IniMes datetime, @FinMes datetime, @RangVencido datetime, 
--		@RangSem1 datetime,@RangSem11 datetime, @RangSem2 datetime, @RangSem22 datetime, @RangSem3 datetime, @RangSem33 datetime, 
--		@RangSem4 datetime, @RangSem44 datetime, @RangSem5 datetime, @RangSem55 datetime, @RangFuturo datetime 
--		--DECLARE @TC MONEY
--		SET @Anio = YEAR(GETDATE()) SET @Mes = MONTH(GETDATE())
--		--------------------------------------------------PROVEEDORES MXP-----------------------------------------------------------------------
--		SET @IniMes = (SELECT CAST( CAST(@Anio AS VARCHAR(4)) + '-' + CAST(@Mes AS VARCHAR(2)) + '-' + CAST('01' AS VARCHAR(2)) AS DATETIME))
--		SET @FinMes = (SELECT EOMONTH(@IniMes))
--		SET @RangVencido = (DATEADD(DAY, -1, @IniMes))
--		SET @RangFuturo = DATEADD(DAY, 1, @FinMes)

--		SET @RangSem1 = (@IniMes)
--		SET @RangSem11 = (DATEADD(DAY, -1, (SELECT Fecha1 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)))

--		SET @RangSem2 = (SELECT Fecha1 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)
--		SET @RangSem22 = (DATEADD(DAY, -1, (SELECT Fecha2 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)))

--		SET @RangSem3 = (SELECT Fecha2 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)
--		SET @RangSem33 = (DATEADD(DAY, -1, (SELECT Fecha3 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)))

--		SET @RangSem4 = (SELECT Fecha3 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)
--		SET @RangSem44 = (DATEADD(DAY, -1, (SELECT Fecha4 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)))

--		SET @RangSem5 = (SELECT Fecha4 FROM tbl_Cortes WHERE Año = @Anio AND Mes = @Mes)
--		SET @RangSem55 = (@FinMes)
		
--		SET @TC = (SELECT TOP 1 U_VALOR FROM PJ_PagosProv WHERE U_Nombre='TC')
--	--SELECT /*@RangVencido, @IniMes, @FinMes, */@RangSem1, @RangSem11, @RangSem2, @RangSem22, @RangSem3, @RangSem33, @RangSem4, @RangSem44, @RangSem5, @RangSem55

--			SELECT
				 
--				'Prov MXP'[Rubro],
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
--						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
--						THEN Total - 
--								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
--						ELSE 
--								CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--								THEN Total - 
--								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
--								ELSE Total END END
--					ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
--				INTO #MontosAprovados
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			b.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
			
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM  dbo.uf_tblGrpCode(1)) AND B.Currency = '$'
--			--AND A.U_FP = 'P'
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			b.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(1)) AND B.Currency = '$'
--			--AND A.U_FP = 'P'

--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(1)) AND C.Currency = '$'
			
--			)tmp
--			WHERE CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND 

--			CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0

--			--Order by Provedor, [Fecha de vencimiento]
--			---------------------------------------------PROVEDORES USD---------------------------------------------------------------------------------------
			
--			UNION ALL

--			SELECT 
--				'Prov USD'[Rubro],
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
--						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
--						THEN Total - 
--								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
--						ELSE 
--								CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--								THEN Total - 
--								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
--								ELSE Total END END
--					ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			b.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
			
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM  dbo.uf_tblGrpCode(2)) AND B.Currency = 'USD'
--			--AND A.U_FP = 'P'
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			b.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(2)) AND B.Currency = 'USD'
--			--AND A.U_FP = 'P'

--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(2)) AND C.Currency = 'USD'
			
--			)tmp
--			WHERE CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND 

--			CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0

--			---------------------------------------------PROVEDORES IMPORTACION---------------------------------------------------------------------------------------
--			UNION ALL 

--			SELECT 
--				'Importacion',
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
--							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
--									CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
--						ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(3))
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(3))
--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(3)))tmp
--			WHERE
--			CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND
--				CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0
--			--Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta

--			---------------------------------------------PROVEDORES BANCOS---------------------------------------------------------------------------------------
--			UNION ALL
--			--Facturas
--			SELECT 
--				'Bancos'[Rubro],
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END * 
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
--							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--								THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
--									CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--									THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
--						ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND X.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(4))
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(4))
--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(4))  )tmp
--			Where Provedor in ('20248', '20250', '20705','22305')
--			--      AND [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
--			--Order by Provedor, [Fecha de vencimiento]
--			AND
--			CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND
--			CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0
--			---------------------------------------------GASTOSOP-MXM---------------------------------------------------------------------------------------
--			UNION ALL

--			SELECT 
--				'Gastos Operativos MXP'[Rubro],
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
--							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
--									CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
--						ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(5)) AND B.Currency = '$'
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(5)) AND B.Currency = '$'
--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(5)) AND C.Currency = '$')tmp
--			--Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
--			--Order by Provedor, [Fecha de vencimiento]
--			WHERE
--			CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0
--			---------------------------------------------GASTOSOP-USD---------------------------------------------------------------------------------------
--			UNION ALL

--			SELECT 
--				'Gastos Operativos USD'[Rubro],
--				Estatus
--				, Provedor 'Proveedor'
--				, Nombre
--				, [Fecha de Contabilización]
--				, [Fecha de vencimiento]
--				, [Folio Factura]
--				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
--				, DocCur 'Moneda del documento'
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					Total [Monto original]
--				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
--					THEN 1 ELSE -1 END *
--					CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
--							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
--									CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
--						ELSE  Total END Total
--				, CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
--				, ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Propuesta 
--				, CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
--				, ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) Aprobado
--				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
--				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
--						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
--						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
--				, DocEntry
--				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
--				, ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Propuesta MXP'
--				, ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'Aprobado MXP'
--				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
--				, ISNULL(Cuenta, '' ) Cuenta
--				, Tipo
--				, U_Condiciones
--				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
--				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
--			FROM
--			(
--			SELECT 
--			'FR' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].OPCH A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND ISNULL(A.Indicator,'')<>'P' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(6)) AND B.Currency = 'USD'
--			--NC
--			UNION ALL
--			SELECT 
--			'NC' Tipo,
--			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
--			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
--			END END as 'Estatus',
--			A.CardCode 'Provedor',
--			B.CardName 'Nombre',
--			A.DocDate 'Fecha de Contabilización',
--			A.DocDueDate 'Fecha de vencimiento',
--			A.NumAtCard 'Folio Factura',
--			A.DocNum 'Folio SAP'
--			,A.DocCur
--			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
--			,A.U_FP
--			,A.DocEntry
--			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
--			,CAST(B.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,A.Indicator
--			FROM [SBOCTRZ].[dbo].ORPC A 
--			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
--			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
--			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(6)) AND B.Currency = 'USD'
--			UNION ALL
--			--Saldos a favor
--			SELECT distinct
--			'SF' Tipo,
--			'Saldo a favor' as 'Estatus',
--			A.CardCode,
--			C.CardName,
--			A.DocDate,
--			A.DocDueDate,
--			'',
--			A.DocNum
--			,A.DocCurr
--			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
--			,NULL
--			,A.DocEntry
--			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
--			,CAST(C.U_Condiciones as nvarchar(MAX)) U_Condiciones
--			,''
--			FROM [SBOCTRZ].[dbo].OVPM A
--			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
--			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
--			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'P'
--			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
--			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
--			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM dbo.uf_tblGrpCode(6)) AND C.Currency = 'USD')tmp
--			WHERE 
--			CAST(CASE WHEN Tipo = 'SF' 
--							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) = 1
--			AND CAST(CASE WHEN Tipo = 'SF'
--							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
--						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) = 0
--			---------------------------------------------Otros Proveedores---------------------------------------------------------------------------------------
--			UNION ALL

--			SELECT
--			'Otros Proveedores'
--			,''[Estatus]
--			, Code[Proveedor] 
--			, U_Proveedor COLLATE DATABASE_DEFAULT 'Nombre'
--			,NULL[Fecha de Contabilización]
--			,CAST(U_FechaPago AS DATETIME) 'Fecha de vencimiento'
--			, U_Factura COLLATE DATABASE_DEFAULT 'Folio Factura'
--			, NULL[Folio SAP]
--			, Case When U_TipoPago = 'Transferencia MXP' Then 'MXP'
--					When U_TipoPago = 'Transferencia USD' Then 'USD'
--					When U_TipoPago = 'Cheques' Then 'MXP' End 'Moneda'
--			, NULL[Monto original]
--			, NULL[Total]
--			, ISNULL(b_Propuesto,0) [Prop]
--			, U_Propuesta 'Propuesta'
--			, CAST(Case When U_Aprobado <> 0 Then 1 else 0 End as bit) Apro
--			, U_Aprobado 'Aprobado'
--			, NULL[Comentarios]
--			, NULL[Situación]
--			, NULL[DocEntry]
--			, NULL[TC]
--			, NULL[Propuesta MXP]
--			, NULL[Aprobado MXP]
--			, 0[Pagar USD]
--			, U_Cuenta COLLATE DATABASE_DEFAULT 'Cuenta'
--			,'--'[Tipo]
--			,NULL[U_Condiciones]
--			,0[Descuento]
--			,0[NC]
--		FROM PJ_PagosGastos
--		Where U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
--				AND  U_CIA = '004'
--				AND ISNULL(b_Propuesto,0) = 1
--				AND CAST(Case When U_Aprobado <> 0 Then 1 else 0 End as bit) = 0
--		--ORDER BY U_TipoPago, U_FechaPago 		
	
--		Order by 1, Provedor, [Fecha de vencimiento]

--		--SELECT * FROM #MontosAprovados

--		SELECT 0[ID], 'INGRESOS'[SUBID], 'Cobranza'[Rubro]
--		,(SELECT mVencidoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[VencidoMXP]
--		,(SELECT mVencidoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[VencidoUSD]
--		,(SELECT mSemana1MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana1-MXP]
--		,(SELECT mSemana1USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana1-USD]
--		,(SELECT mSemana2MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana2-MXP]
--		,(SELECT mSemana2USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana2-USD]
--		,(SELECT mSemana3MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana3-MXP]
--		,(SELECT mSemana3USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana3-USD]
--		,(SELECT mSemana4MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana4-MXP]
--		,(SELECT mSemana4USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana4-USD]
--		,(SELECT mSemana5MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana5-MXP]
--		,(SELECT mSemana5USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Semana5-USD]
--		,(SELECT mFuturoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Futuro-MXP]
--		,(SELECT mFuturoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'Cobranza' )[Futuro-USD]	
--		,'M'[Calculo], 0[Orden]
--		UNION ALL 
--		SELECT 0[ID], 'INGRESOS'[SUBID], 'S.I.B'[Rubro]
--		,(SELECT mVencidoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[VencidoMXP]
--		,(SELECT mVencidoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[VencidoUSD]
--		,(SELECT mSemana1MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana1-MXP]
--		,(SELECT mSemana1USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana1-USD]
--		,(SELECT mSemana2MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana2-MXP]
--		,(SELECT mSemana2USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana2-USD]
--		,(SELECT mSemana3MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana3-MXP]
--		,(SELECT mSemana3USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana3-USD]
--		,(SELECT mSemana4MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana4-MXP]
--		,(SELECT mSemana4USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana4-USD]
--		,(SELECT mSemana5MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana5-MXP]
--		,(SELECT mSemana5USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Semana5-USD]
--		,(SELECT mFuturoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Futuro-MXP]
--		,(SELECT mFuturoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'INGRESOS' AND sRubro = 'S.I.B' )[Futuro-USD]
--		,'M'[Calculo], 1[Orden]
--		UNION ALL 
--		------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Prov MXP'[Rubro],
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = '$')[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = 'USD')[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = '$')[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = 'USD')[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = '$')[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = 'USD')[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = '$')[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = 'USD')[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = '$')[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = 'USD')[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = '$')[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = 'USD')[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = '$')[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = 'USD')[Futuro-USD]
--		,'A'[Calculo], 2[Orden]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Prov USD'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = '$'*/)[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = 'USD'*/)[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = '$'*/)[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = 'USD'*/)[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = '$'*/)[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = 'USD'*/)[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = '$'*/)[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = 'USD'*/)[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = '$'*/)[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = 'USD'*/)[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = '$'*/)[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = 'USD'*/)[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = '$'*/)[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = 'USD'*/)[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 3[Orden]

--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Importacion'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = '$'*/)[VencidoMXP], 

--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = 'USD'*/)[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = '$'*/)[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = 'USD'*/)[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = '$'*/)[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = 'USD'*/)[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = '$'*/)[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = 'USD'*/)[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = '$'*/)[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = 'USD'*/)[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = '$'*/)[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = 'USD'*/)[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = '$'*/)[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = 'USD'*/)[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 4[Orden]

--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Bancos'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = '$')[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = 'USD')[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = '$')[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = 'USD')[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = '$')[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = 'USD')[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = '$')[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = 'USD')[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = '$')[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = 'USD')[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = '$')[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = 'USD')[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = '$')[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = 'USD')[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 5[Orden]
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Gastos Operativos MXP'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = '$'*/)[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = 'USD'*/)[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = '$'*/)[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = 'USD'*/)[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = '$'*/)[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = 'USD'*/)[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = '$'*/)[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = 'USD'*/)[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = '$'*/)[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = 'USD'*/)[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = '$'*/)[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = 'USD'*/)[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = '$'*/)[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = 'USD'*/)[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 6[Orden]
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Gastos Operativos USD'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos UD' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = '$'*/)[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos UD' AND [Fecha de vencimiento] <= @RangVencido /*AND [Moneda del documento] = 'USD'*/)[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = '$'*/)[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 /*AND [Moneda del documento] = 'USD'*/)[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = '$'*/)[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 /*AND [Moneda del documento] = 'USD'*/)[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = '$'*/)[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 /*AND [Moneda del documento] = 'USD'*/)[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = '$'*/)[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 /*AND [Moneda del documento] = 'USD'*/)[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = '$'*/)[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 /*AND [Moneda del documento] = 'USD'*/)[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = '$'*/)[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] >=@RangFuturo /*AND [Moneda del documento] = 'USD'*/)[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 7[Orden]
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Otros Proveedores'[Rubro],
--			------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = 'MXP')[VencidoMXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] <= @RangVencido AND [Moneda del documento] = 'USD')[VencidoUSD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = 'MXP')[Semana1-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 AND [Moneda del documento] = 'USD')[Semana1-USD],
--		------------------------------------------------------------------------------------------------------------------------------------------ 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = 'MXP')[Semana2-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 AND [Moneda del documento] = 'USD')[Semana2-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = 'MXP')[Semana3-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta	END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 AND [Moneda del documento] = 'USD')[Semana3-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = 'MXP')[Semana4-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 AND [Moneda del documento] = 'USD')[Semana4-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = 'MXP')[Semana5-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN [Propuesta MXP]	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 AND [Moneda del documento] = 'USD')[Semana5-USD], 
--		------------------------------------------------------------------------------------------------------------------------------------------
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = 'MXP')[Futuro-MXP], 
--		(SELECT SUM(CASE WHEN [Moneda del documento] = 'MXP' THEN Propuesta	 WHEN [Moneda del documento] = 'USD' THEN Propuesta END)
--		FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores' AND [Fecha de vencimiento] >=@RangFuturo AND [Moneda del documento] = 'USD')[Futuro-USD]
--		------------------------------------------------------------------------------------------------------------------------------------------
--		,'A'[Calculo], 8[Orden]
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Impuestos'[Rubro]
--		,(SELECT mVencidoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[VencidoMXP]
--		,(SELECT mVencidoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[VencidoUSD]
--		,(SELECT mSemana1MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana1-MXP]
--		,(SELECT mSemana1USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana1-USD]
--		,(SELECT mSemana2MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana2-MXP]
--		,(SELECT mSemana2USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana2-USD]
--		,(SELECT mSemana3MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana3-MXP]
--		,(SELECT mSemana3USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana3-USD]
--		,(SELECT mSemana4MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana4-MXP]
--		,(SELECT mSemana4USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana4-USD]
--		,(SELECT mSemana5MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana5-MXP]
--		,(SELECT mSemana5USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Semana5-USD]
--		,(SELECT mFuturoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Futuro-MXP]
--		,(SELECT mFuturoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Impuestos' )[Futuro-USD]	
--		,'M'[Calculo], 9[Orden]
--		UNION ALL 
--		SELECT 1[ID], 'EGRESOS'[SUBID], 'Intereses y C. Bancarias'[Rubro]
--		,(SELECT mVencidoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[VencidoMXP]
--		,(SELECT mVencidoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[VencidoUSD]
--		,(SELECT mSemana1MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana1-MXP]
--		,(SELECT mSemana1USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana1-USD]
--		,(SELECT mSemana2MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana2-MXP]
--		,(SELECT mSemana2USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana2-USD]
--		,(SELECT mSemana3MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana3-MXP]
--		,(SELECT mSemana3USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana3-USD]
--		,(SELECT mSemana4MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana4-MXP]
--		,(SELECT mSemana4USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana4-USD]
--		,(SELECT mSemana5MXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana5-MXP]
--		,(SELECT mSemana5USD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Semana5-USD]
--		,(SELECT mFuturoMXP FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Futuro-MXP]
--		,(SELECT mFuturoUSD FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = 'EGRESOS' AND sRubro = 'Intereses y C. Bancarias' )[Futuro-USD]	
--		,'M'[Calculo], 10[Orden]
--		ORDER BY ID, Orden --SUBID
--		/*
--		SELECT * FROM #MontosAprovados WHERE Rubro = 'Otros Proveedores'
--		select @RangFuturo
--		SELECT * FROM PJ_PagosGastos
--		*/
--		/*SELECT 
--		Rubro, Proveedor, Nombre, [Fecha de vencimiento], [Folio Factura], [Folio SAP], 
--		[Moneda del documento][Moneda],
--		CASE
--			WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]
--			WHEN [Moneda del documento] = 'USD' THEN Propuesta
--		END[Propuesta]
--		FROM #MontosAprovados
--		ORDER BY [Fecha de vencimiento], Proveedor
--		DROP TABLE #MontosAprovados*/
--		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--		/*SELECT 
--		Rubro, Proveedor, Nombre,-- [Fecha de vencimiento],
--		--(SELECT SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 THEN Propuesta * @TC END)
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] END)[VencidoMXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] <= @RangVencido THEN Propuesta END)[VencidoUSD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] END)[Semana1-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END)[Semana1-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] END)[Semana2-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END)[Semana2-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] END)[Semana3-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END)[Semana3-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] END)[Semana4-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END)[Semana4-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] END)[Semana5-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END)[Semana5-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] >=@RangFuturo THEN [Propuesta MXP] END)[Futuro-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] >=@RangFuturo THEN Propuesta END)[Futuro-USD]
--		FROM #MontosAprovados
--		GROUP BY Rubro, Proveedor, Nombre
--		ORDER BY Proveedor, nombre
--		*/
--		SELECT 
--		Rubro, Proveedor, Nombre,-- [Fecha de vencimiento],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] END)[VencidoMXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] <= @RangVencido THEN Propuesta END)[VencidoUSD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] END)[Semana1-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END)[Semana1-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] END)[Semana2-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END)[Semana2-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] END)[Semana3-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END)[Semana3-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] END)[Semana4-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END)[Semana4-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] END)[Semana5-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END)[Semana5-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] >=@RangFuturo THEN [Propuesta MXP] END)[Futuro-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] >=@RangFuturo THEN Propuesta END)[Futuro-USD]
--		FROM #MontosAprovados WHERE Rubro IN('Prov MXP', 'Bancos', 'Gastos Operativos MXP','Otros Proveedores') --solo los rubros que van a ser de una sola forma de pago
--		GROUP BY Rubro, Proveedor, Nombre
--		UNION ALL
--		SELECT 
--		Rubro, Proveedor, Nombre,-- [Fecha de vencimiento],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento]<=@RangVencido THEN Propuesta * @TC END)[VencidoMXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento]<=@RangVencido THEN Propuesta END) [VencidoUSD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta * @TC END)[Semana1-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END) [Semana1-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta * @TC END)[Semana2-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END) [Semana2-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta * @TC END)[Semana3-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END) [Semana3-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta * @TC END)[Semana4-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END) [Semana4-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta * @TC END)[Semana5-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END) [Semana5-USD],
--		SUM(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento]>=@RangFuturo THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento]>=@RangFuturo THEN Propuesta * @TC END)[Futuro-MXP],
--		SUM(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento]>=@RangFuturo THEN Propuesta END) [Futuro-USD]		
--		FROM #MontosAprovados WHERE Rubro IN('Prov USD', 'Importacion', 'Gastos Operativos USD') --solo los rubros que van a ser de una sola forma de pago
--		GROUP BY Rubro, Proveedor, Nombre
--		ORDER BY Proveedor, Nombre
--		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--		--SELECT 
--		--Proveedor, Nombre, [Fecha de vencimiento],
--		--CAST([Folio Factura] AS varchar(50)) + ' / ' + CAST(CAST([Folio SAP] AS INT) AS VARCHAR(50))[Folio Proveedor / Folio SAP], 
--		----[Folio Factura], [Folio SAP], 
--		--[Moneda del documento][Moneda],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] END)[VencidoMXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] <= @RangVencido THEN Propuesta END)[VencidoUSD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] END)[Semana1-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END)[Semana1-USD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] END)[Semana2-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END)[Semana2-USD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] END)[Semana3-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END)[Semana3-USD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] END)[Semana4-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END)[Semana4-USD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] END)[Semana5-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END)[Semana5-USD],
--		--(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] >=@RangFuturo THEN [Propuesta MXP] END)[Futuro-MXP],
--		--(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] >=@RangFuturo THEN Propuesta END)[Futuro-USD]

--		----CASE
--		----	WHEN [Moneda del documento] = '$' THEN [Propuesta MXP]
--		----	WHEN [Moneda del documento] = 'USD' THEN Propuesta
--		----END[Propuesta]
--		--FROM #MontosAprovados
--		--ORDER BY [Fecha de vencimiento] asc, Proveedor
--		SELECT 
--		Proveedor, Nombre, [Fecha de vencimiento],
--		CAST([Folio Factura] AS varchar(50)) + ' / ' + CAST(CAST([Folio SAP] AS INT) AS VARCHAR(50))[Folio Proveedor / Folio SAP], 
--		[Moneda del documento][Moneda],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] END)[VencidoMXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] <= @RangVencido THEN Propuesta END)[VencidoUSD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] END)[Semana1-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END)[Semana1-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] END)[Semana2-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END)[Semana2-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] END)[Semana3-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END)[Semana3-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] END)[Semana4-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END)[Semana4-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] END)[Semana5-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END)[Semana5-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Fecha de vencimiento] >=@RangFuturo THEN [Propuesta MXP] END)[Futuro-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Fecha de vencimiento] >=@RangFuturo THEN Propuesta END)[Futuro-USD]
--		FROM #MontosAprovados WHERE Rubro IN('Prov MXP', 'Bancos', 'Gastos Operativos MXP','Otros Proveedores') --solo los rubros que van a ser de una sola forma de pago
		
--		UNION ALL
--		SELECT 
--		Proveedor, Nombre, [Fecha de vencimiento],
--		CAST([Folio Factura] AS varchar(50)) + ' / ' + CAST(CAST([Folio SAP] AS INT) AS VARCHAR(50))[Folio Proveedor / Folio SAP], 
--		[Moneda del documento][Moneda],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento]<=@RangVencido THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento]<=@RangVencido THEN Propuesta * @TC END)[VencidoMXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento]<=@RangVencido THEN Propuesta END) [VencidoUSD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta * @TC END)[Semana1-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem1 AND @RangSem11 THEN Propuesta END) [Semana1-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta * @TC END)[Semana2-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem2 AND @RangSem22 THEN Propuesta END) [Semana2-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta * @TC END)[Semana3-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem3 AND @RangSem33 THEN Propuesta END) [Semana3-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta * @TC END)[Semana4-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem4 AND @RangSem44 THEN Propuesta END) [Semana4-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta * @TC END)[Semana5-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento] BETWEEN @RangSem5 AND @RangSem55 THEN Propuesta END) [Semana5-USD],
--		(CASE WHEN [Moneda del documento] = '$' AND [Pagar USD] = 0 AND [Fecha de vencimiento]>=@RangFuturo THEN [Propuesta MXP] WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 0 AND [Fecha de vencimiento]>=@RangFuturo THEN Propuesta * @TC END)[Futuro-MXP],
--		(CASE WHEN [Moneda del documento] = 'USD' AND [Pagar USD] = 1 AND [Fecha de vencimiento]>=@RangFuturo THEN Propuesta END) [Futuro-USD]		
--		FROM #MontosAprovados WHERE Rubro IN('Prov USD', 'Importacion', 'Gastos Operativos USD') --solo los rubros que van a ser de una sola forma de pago
--		ORDER BY [Fecha de vencimiento] asc, Proveedor

--		DROP TABLE #MontosAprovados
--		----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--		SELECT 'Vencido <= _' + convert(varchar(10),@RangVencido,103)[NomVencido], 
--		'SEMANA 1 _' + convert(varchar(10),@RangSem1,103) + ' - ' + convert(varchar(10),@RangSem11,103)[NomSemana1],
--		'SEMANA 2 _' + convert(varchar(10),@RangSem2,103) + ' - ' + convert(varchar(10),@RangSem22,103)[NomSemana2],
--		'SEMANA 3 _' + convert(varchar(10),@RangSem3,103) + ' - ' + convert(varchar(10),@RangSem33,103)[NomSemana3],
--		'SEMANA 4 _' + convert(varchar(10),@RangSem4,103) + ' - ' + convert(varchar(10),@RangSem44,103)[NomSemana4],
--		'SEMANA 5 _' + convert(varchar(10),@RangSem5,103) + ' - ' + convert(varchar(10),@RangSem55,103)[NomSemana5],
--		'Futuro >= _' + convert(varchar(10),@RangFuturo,103)[NomSemanaFutura]
--	END

--	--Metodo para guardar los valores que se ingresan manualmente en pagos de proveedor en el mes activo
--	IF @TipoConsulta = 29
--	BEGIN
--		IF @MontoRubro = 0
--			SET @MontoRubro = NULL

--		IF NOT EXISTS(SELECT * FROM tbl_Pagos_Proveedores_VMF WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro)
--		BEGIN
--			INSERT INTO tbl_Pagos_Proveedores_VMF(nAnio, nMes, sTipo, sRubro)
--										  VALUES (@Anio, @Mes, @TipoMov, @Rubro)
--			IF @ColumVal = 'VencidoMXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mVencidoMXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'VencidoUSD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mVencidoUSD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana1-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana1MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana1-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana1USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana2-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana2MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana2-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana2USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana3-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana3MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana3-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana3USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana4-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana4MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana4-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana4USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana5-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana5MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana5-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana5USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Futuro-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mFuturoMXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Futuro-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mFuturoUSD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
												
--		END
--		ELSE
--		BEGIN
--			IF @ColumVal = 'VencidoMXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mVencidoMXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'VencidoUSD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mVencidoUSD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana1-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana1MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana1-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana1USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana2-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana2MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana2-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana2USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana3-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana3MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana3-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana3USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana4-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana4MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana4-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana4USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana5-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana5MXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Semana5-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mSemana5USD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Futuro-MXP'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mFuturoMXP = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--			ELSE IF @ColumVal = 'Futuro-USD'
--				UPDATE tbl_Pagos_Proveedores_VMF SET mFuturoUSD = @MontoRubro WHERE nAnio = @Anio AND nMes = @Mes AND sTipo = @TipoMov AND sRubro = @Rubro
--		END

--	END

--Metodo para consultar la agrupacion de valores de pagos proveedores (real y propuesto)
	IF @TipoConsulta = 30
	BEGIN
		--DROP TABLE #Agrupacion
		--DROP TABLE #Agrupacion2
		--DROP TABLE #SaldosMesCompleto

		SET @FechaIniMes = CAST(CAST(YEAR(@FechaHasta) AS VARCHAR(4))  + '-' + CAST(MONTH(@FechaHasta) AS VARCHAR(2)) + '-' + '01' AS DATE)
		SET @FechaFinMes = CAST(CAST(YEAR(@FechaHasta) AS VARCHAR(4))  + '-' + CAST(MONTH(@FechaHasta) AS VARCHAR(2)) + '-' + CAST(DAY(EOMONTH(@FechaIniMes))AS VARCHAR(2)) AS DATE)
		SET @fechaConsulta = @FechaHasta--DATEADD(DAY, -1, @FechaIniMes)
		-------------------------------------------------------------------------------------------------------------------------
		SELECT 
		OCRD.CardCode, OCRD.CardName, OCRD.GroupCode, CASE TransType WHEN 18 Then 'TT' When 19 Then 'PC' When 46 Then 'PP' When 24 Then 'PR' When 30 Then 'AS' end as TipoDocumento,
		Tabla1.Docnum, Tabla1.DocDate, Tabla1.DocDueDate, Moneda, CASE WHEN Moneda = 'USD' and SUM(SaldoUSD) > 0 Then SUM(SaldoMXP) / SUM(SaldoUSD) else 0 end as TC,
		CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else 0 end MontoMXP, CASE WHEN Moneda = 'USD' Then SUM(SaldoUSD) else 0 end MontoUSD,
		CASE WHEN TransType = 18 THEN 
			CASE WHEN ISNULL((SELECT P0.U_NC FROM [finance].[PagosProv] P0 WHERE P0.U_FolioSAP = OPCH.DocEntry AND P0.U_Tipo = 'FR'), 0) = 0 THEN 1 ELSE -1 END *
				CASE WHEN 'FR' = 'FR' OR OPCH.Indicator = 'PR' THEN 
					CASE WHEN OPCH.Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = OPCH.DocEntry AND U_Tipo = 'FR'), 0) = 0 THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP = 'Y'),0)) 
					ELSE 
						CASE WHEN 'FR' = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = OPCH.DocEntry AND U_Tipo = 'FR'), 0) = 0 THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP IS NULL),0)) 
						ELSE (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  
						END 
					END
				ELSE  (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) 
			END 
			-----------------------------------------------
			WHEN TransType = 19 THEN 
			CASE WHEN ISNULL((SELECT P0.U_NC FROM [finance].[PagosProv] P0 WHERE P0.U_FolioSAP = ORPC.DocEntry AND P0.U_Tipo = 'NC'), 0) = 0 THEN 1 ELSE -1 END *
				CASE WHEN CASE TransType WHEN 18 Then 'FR' When 19 Then 'NC' When 46 Then 'SF' When 24 Then 'SF' When 30 Then 'SF' END = 'FR' OR OPCH.Indicator = 'PR' THEN 
					CASE WHEN ORPC.Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = ORPC.DocEntry AND U_Tipo = 'NC'), 0) = 0 THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP = 'Y'),0)) 
					ELSE 
						CASE WHEN 'NC' = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = ORPC.DocEntry AND U_Tipo = 'NC'), 0) = 0 THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP IS NULL),0)) 
						ELSE (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  
						END 
					END
				ELSE  (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) 
			END 
			-----------------------------------------------
			WHEN TransType IN (24,30,46) THEN 
			CASE WHEN ISNULL((SELECT P0.U_NC FROM [finance].[PagosProv] P0 WHERE P0.U_FolioSAP = OVPM.DocEntry AND P0.U_Tipo = 'SF'), 0) = 0 THEN 1 ELSE -1 END *
				CASE WHEN 'SF' = 'FR' OR '' = 'PR' THEN CASE WHEN '' = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = OVPM.DocEntry AND U_Tipo = 'SF'), 0) = 0
							THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) *ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP = 'Y'),0)) ELSE 
								CASE WHEN 'SF' = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = OVPM.DocEntry AND U_Tipo = 'SF'), 0) = 0
								THEN (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  - ((CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end) *ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = OCRD.CardCode AND PP IS NULL),0)) ELSE (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  END END
				ELSE  (CASE WHEN Moneda = '$' Then SUM(SaldoMXP) else SUM(SaldoUSD) end)  
				END 
		END[MontoDesc], /*U_TipoProveedor*/''[U_TipoProveedor]
		INTO #Agrupacion
			FROM (
				SELECT 
						T0.[TransId] TransId, T0.[Line_ID] LineId, MAX(T0.[Account]) Cuenta, MAX(T0.[ShortName]) CardCode, 
						MAX(T0.[TransType]) TransType, MAX(T0.[CreatedBy]) TransIDDocumento, MAX(T0.[BaseRef]) DocNum, 
						MAX(T0.[SourceLine]) SourceLine, MAX(T0.[RefDate]) DocDate, MAX(T0.[DueDate]) DocDueDate, MAX(T0.[TaxDate]) TaxDate, 
						MAX(T0.[BalDueCred]) + SUM(T1.[ReconSum]) SaldoMXP, MAX(T0.[BalFcCred]) + SUM(T1.[ReconSumFC]) SaldoUSD, 
						MAX(T0.[BalScCred]) + SUM(T1.[ReconSumSC]) SaldoDesc, MAX(T0.[LineMemo]) LineMemo, MAX(T3.[FolioPref]) FolioPref, MAX(T3.[FolioNum]) FolioNum, 
						MAX(T0.[Indicator]) Indicator, MAX(T4.[CardName]) CardName, MAX(T5.[CardCode]) CardCode2, MAX(T5.[CardName]) CardName2, 
						MAX(T4.[Balance]) SaldoActual, MAX(T5.[NumAtCard]) NumAtCard, MAX(T5.[SlpCode]) Slpcode, MAX(T0.[Project]) Project, 
						MAX(T0.[Debit]) + MAX(T0.[Credit]) SaldoContableMXP, MAX(T0.[FCDebit]) + MAX(T0.[FCCredit]) SaldoContableUSD, 
						MAX(T0.[SYSDeb]) + MAX(T0.[SYSCred]) SaldoContableMoneda, MAX(T4.[PymCode]) CondPago, MAX(T5.[BlockDunn]) BlockDunn, MAX(T5.[DunnLevel]) [DunnLevel1], 
						MAX(T5.[TransType]) TransType2, MAX(T5.[IsSales]) IsSales, MAX(T4.[Currency]) Moneda, MAX(T0.[FCCurrency]) MonedaExtranjera, 
						T0.[TransId] TransId2, MAX(T4.[DunTerm]) DunTerm, MAX(T0.[DunnLevel]) DunnLevel, T0.[BPLName] BPLName
				FROM 
						[SBOCTRZ].[dbo].[JDT1] T0 
						INNER JOIN [SBOCTRZ].[dbo].[ITR1] T1 ON T1.[TransId] = T0.[TransId] AND T1.[TransRowId] = T0.[Line_ID] 
						INNER JOIN [SBOCTRZ].[dbo].[OITR] T2 ON T2.[ReconNum] = T1.[ReconNum] 
						INNER JOIN [SBOCTRZ].[dbo].[OJDT] T3 ON T3.[TransId] = T0.[TransId] 
						INNER JOIN [SBOCTRZ].[dbo].[OCRD] T4 ON T4.[CardCode] = T0.[ShortName] 
						LEFT OUTER JOIN [SBOCTRZ].[dbo].[B1_JournalTransSourceView] T5 ON T5.[ObjType] = T0.[TransType] AND T5.[DocEntry] = T0.[CreatedBy] 
																										AND (T5.[TransType] <> 'I' OR (T5.[TransType] = 'I' AND T5.[InstlmntID] = T0.[SourceLine] )) 
				WHERE 
						T0.[RefDate] <= @fechaConsulta AND T0.[DueDate] <= @fechaConsulta
						and T4.[CardType] = ('S') AND T2.[ReconDate] > (@FechaIniMes) AND T1.[IsCredit] = ('C') 
						--AND T4.GroupCode = @GroupCode
				GROUP BY 
						T0.[TransId], T0.[Line_ID], T0.[BPLName] 
				HAVING 
						MAX(T0.[BalFcCred]) <>- SUM(T1.[ReconSumFC]) OR MAX(T0.[BalDueCred]) <>- SUM(T1.[ReconSum]) 
--==========================================================================================================
				UNION ALL 
				SELECT 
						T0.[TransId], T0.[Line_ID], MAX(T0.[Account]), MAX(T0.[ShortName]), 
						MAX(T0.[TransType]), MAX(T0.[CreatedBy]), MAX(T0.[BaseRef]), MAX(T0.[SourceLine]), 
						MAX(T0.[RefDate]), MAX(T0.[DueDate]), MAX(T0.[TaxDate]), - MAX(T0.[BalDueDeb]) - SUM(T1.[ReconSum]), 
						- MAX(T0.[BalFcDeb]) - SUM(T1.[ReconSumFC]), - MAX(T0.[BalScDeb]) - SUM(T1.[ReconSumSC]), MAX(T0.[LineMemo]), 
						MAX(T3.[FolioPref]), MAX(T3.[FolioNum]), MAX(T0.[Indicator]), MAX(T4.[CardName]), MAX(T5.[CardCode]), 
						MAX(T5.[CardName]), MAX(T4.[Balance]), MAX(T5.[NumAtCard]), MAX(T5.[SlpCode]), MAX(T0.[Project]), MAX(T0.[Debit]) + MAX(T0.[Credit]), 
						MAX(T0.[FCDebit]) + MAX(T0.[FCCredit]), MAX(T0.[SYSDeb]) + MAX(T0.[SYSCred]), MAX(T4.[PymCode]), MAX(T5.[BlockDunn]), MAX(T5.[DunnLevel]), MAX(T5.[TransType]), 
						MAX(T5.[IsSales]), MAX(T4.[Currency]), MAX(T0.[FCCurrency]), T0.[TransId], MAX(T4.[DunTerm]), MAX(T0.[DunnLevel]), T0.[BPLName] 
				FROM 
						[SBOCTRZ].[dbo].[JDT1] T0 
						INNER JOIN [SBOCTRZ].[dbo].[ITR1] T1 ON T1.[TransId] = T0.[TransId] AND T1.[TransRowId] = T0.[Line_ID] 
						INNER JOIN [SBOCTRZ].[dbo].[OITR] T2 ON T2.[ReconNum] = T1.[ReconNum] 
						INNER JOIN [SBOCTRZ].[dbo].[OJDT] T3 ON T3.[TransId] = T0.[TransId] 
						INNER JOIN [SBOCTRZ].[dbo].[OCRD] T4 ON T4.[CardCode] = T0.[ShortName] 
						LEFT OUTER JOIN [SBOCTRZ].[dbo].[B1_JournalTransSourceView] T5 ON T5.[ObjType] = T0.[TransType] AND T5.[DocEntry] = T0.[CreatedBy] 
						AND (T5.[TransType] <> 'I' OR (T5.[TransType] = 'I' AND T5.[InstlmntID] = T0.[SourceLine] )) 
				WHERE 
						T0.[RefDate] <= @fechaConsulta AND T0.[DueDate] <= @fechaConsulta and
						T4.[CardType] = ('S') AND T2.[ReconDate] > (@FechaIniMes) AND T1.[IsCredit] = ('D') and T0.DueDate <= @fechaConsulta
						--AND T4.GroupCode = @GroupCode
				GROUP BY 
						T0.[TransId], T0.[Line_ID], T0.[BPLName] 
				HAVING 
						MAX(T0.[BalFcDeb]) <>- SUM(T1.[ReconSumFC]) OR MAX(T0.[BalDueDeb]) <>- SUM(T1.[ReconSum]) 
--=========================================================================================================
				UNION ALL 
				SELECT 
						T0.[TransId], T0.[Line_ID], MAX(T0.[Account]), MAX(T0.[ShortName]), MAX(T0.[TransType]), MAX(T0.[CreatedBy]),
						MAX(T0.[BaseRef]), MAX(T0.[SourceLine]), MAX(T0.[RefDate]), MAX(T0.[DueDate]), MAX(T0.[TaxDate]), MAX(T0.[BalDueCred]) - MAX(T0.[BalDueDeb]), 
						MAX(T0.[BalFcCred]) - MAX(T0.[BalFcDeb]), MAX(T0.[BalScCred]) - MAX(T0.[BalScDeb]), MAX(T0.[LineMemo]), 
						MAX(T1.[FolioPref]), MAX(T1.[FolioNum]), MAX(T0.[Indicator]), MAX(T2.[CardName]), MAX(T3.[CardCode]), MAX(T3.[CardName]), 
						MAX(T2.[Balance]), MAX(T3.[NumAtCard]), MAX(T3.[SlpCode]), MAX(T0.[Project]), MAX(T0.[Debit]) + MAX(T0.[Credit]), 
						MAX(T0.[FCDebit]) + MAX(T0.[FCCredit]), MAX(T0.[SYSDeb]) + MAX(T0.[SYSCred]), MAX(T2.[PymCode]), MAX(T3.[BlockDunn]), 
						MAX(T3.[DunnLevel]), MAX(T3.[TransType]), MAX(T3.[IsSales]), MAX(T2.[Currency]), MAX(T0.[FCCurrency]), T0.[TransId], MAX(T2.[DunTerm]), 
						MAX(T0.[DunnLevel]), T0.[BPLName] 
				FROM 
						[SBOCTRZ].[dbo].[JDT1] T0 
						INNER JOIN [SBOCTRZ].[dbo].[OJDT] T1 ON T1.[TransId] = T0.[TransId] 
						INNER JOIN [SBOCTRZ].[dbo].[OCRD] T2 ON T2.[CardCode] = T0.[ShortName] 
						LEFT OUTER JOIN [SBOCTRZ].[dbo].[B1_JournalTransSourceView] T3 ON T3.[ObjType] = T0.[TransType] AND T3.[DocEntry] = T0.[CreatedBy] 
																										AND (T3.[TransType] <> 'I' OR (T3.[TransType] = 'I' AND T3.[InstlmntID] = T0.[SourceLine] )) 
				WHERE 
						T0.[RefDate] <= @fechaConsulta AND T0.[DueDate] <= @fechaConsulta and
						T2.[CardType] = ('S') AND (T0.[BalDueCred] <> T0.[BalDueDeb] OR T0.[BalFcCred] <> T0.[BalFcDeb] ) 
						--AND T2.GroupCode = @GroupCode 
						AND NOT EXISTS      
													(SELECT U0.[TransId], U0.[TransRowId] FROM [SBOCTRZ].[dbo].[ITR1] U0 INNER JOIN [SBOCTRZ].[dbo].[OITR] U1 ON U1.[ReconNum] = U0.[ReconNum] 
													WHERE T0.[TransId] = U0.[TransId] AND T0.[Line_ID] = U0.[TransRowId] AND U1.[ReconDate] > (@FechaIniMes) and T0.DueDate <= @fechaConsulta 
													GROUP BY U0.[TransId], U0.[TransRowId]) 
				GROUP BY T0.[TransId], T0.[Line_ID], T0.[BPLName]
			) Tabla1
				INNER JOIN [SBOCTRZ].dbo.OCRD ON Tabla1.CardCode = OCRD.CardCode
				INNER JOIN [SBOCTRZ].dbo.OCRG ON OCRD.GroupCode = OCRG.GroupCode
				LEFT JOIN [SBOCTRZ].dbo.OPCH ON OPCH.DocNum = Tabla1.DocNum AND Tabla1.TransType IN (18) AND OPCH.DocStatus='O'
				LEFT JOIN [SBOCTRZ].dbo.ORPC ON ORPC.DocNum = Tabla1.DocNum AND Tabla1.TransType IN(19) AND ORPC.DocStatus='O'
				LEFT JOIN [SBOCTRZ].[dbo].OVPM ON OVPM.DocNum = Tabla1.DocNum AND Tabla1.TransType IN (24,30,46) AND OVPM.Canceled = 'N' AND Case When OVPM.DocCurr = 'USD' Then OVPM.OpenBalFc Else OVPM.OpenBal End <> 0 
			--WHERE OCRD.QryGroup52 = 'Y'
			GROUP BY OCRD.GroupCode, OCRD.CardName, OCRD.CardCode, Moneda,Tabla1.DocDate,Tabla1.DocDueDate,TransType,Tabla1.DocNum,Currency
			,OPCH.DocEntry, ORPC.DocEntry, OVPM.DocEntry, OPCH.Indicator, ORPC.Indicator/*, U_TipoProveedor*/
			--Order By OCRD.CardCode

		

		SELECT * INTO #PagosPropuestosAnt FROM finance.VW_PagosProvProp WHERE [Fecha de vencimiento] < @FechaIniMes
		SELECT * INTO #PagosPropuestosAll FROM finance.VW_PagosProvProp WHERE [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta

		--SET @FechaDesde = @FechaIniMes
		
		/************AQUI YA SE LLENARON LAS TABLAS (#Agrupacion con info de saldo ant al mes)(#SaldosMesCompleto con info de saldos actuales del mes completo) *************************/
		

		SELECT 1[ID], 1[SUBID], 'SALDO INICIAL DE BANCOS'[Tipo], ''[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 1[PK], NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		SELECT 2[ID], 1[SUBID], 'INGRESOS'[Tipo], 'Cobranza'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 2[PK], NULL[UNION2],
		(SELECT SUM(CASE WHEN OC.DocCurr = '$' THEN RC.SumApplied END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N')[RealPagadoMXP], 
		(SELECT SUM(CASE WHEN OC.DocCurr = 'USD' THEN RC.AppliedFC END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N')[RealPagadoUSD], 
		NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		SELECT 2[ID], 2[SUBID], 'INGRESOS'[Tipo], 'Cobros del Grupo'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 3[PK], NULL[UNION2],
		(SELECT SUM(CASE WHEN OC.DocCurr = '$' THEN RC.SumApplied END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(116,122))[RealPagadoMXP], 
		(SELECT SUM(CASE WHEN OC.DocCurr = 'USD' THEN RC.AppliedFC END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(116,122))[RealPagadoUSD], 
		NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		SELECT 2[ID], 3[SUBID], 'INGRESOS'[Tipo], 'Vtas. Contado'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 4[PK], NULL[UNION2],
		(SELECT SUM(CASE WHEN OC.DocCurr = '$' THEN RC.SumApplied END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(2,20))[RealPagadoMXP], 
		(SELECT SUM(CASE WHEN OC.DocCurr = 'USD' THEN RC.AppliedFC END) FROM [SBOCTRZ].dbo.ORCT OC LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(2,20))[RealPagadoUSD],
		NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		SELECT 2[ID], 4[SUBID], 'INGRESOS'[Tipo], 'Total'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 5[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		----------------------------------------------
		UNION ALL
		SELECT 3[ID], 1[SUBID], 'EGRESOS'[Tipo], 'Provedores Nacionales (MXN)'[Rubro]
		, ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(101,110) AND Moneda='$' AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP')),0) 
		--+ ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(101,110) AND Moneda='$' AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		  [MXP-Real]
		, NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = 'Prov MXP' AND [Moneda del documento] = '$')[MXP-Propuesto]
		, NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 6[PK]
		, NULL[UNION2],
		(SELECT SUM(PagadoMXP) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Prov MXP' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta)[RealPagadoMXP]
		, NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 2[SUBID], 'EGRESOS'[Tipo], 'Provedores Nacionales (USD)'[Rubro], 
		NULL[MXP-Real], 
		ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(101,111) AND Moneda='USD' AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP')),0) 
		--+ ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(101,111) AND Moneda='USD' AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		[USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = 'Prov USD' AND [Moneda del documento] = 'USD')[MXP-Propuesto]
		, (SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Prov USD' AND [Moneda del documento] = 'USD')[USD-Propuesto]
		, NULL[Total MXP-Propuesto], 7[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], 
		(SELECT SUM(PagadoUSD) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Prov USD' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta)[RealPagadoUSD], NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 3[SUBID], 'EGRESOS'[Tipo], 'Provedores Importación'[Rubro], 
		NULL[MXP-Real], 
		ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(112,113) AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') and CardCode Collate Database_Default NOT IN(SELECT sCodigoProveedor FROM tbl_DescartoProveedorFlujoEfectivo)),0) 
	   --+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(112,113) AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') and CardCode Collate Database_Default NOT IN(SELECT sCodigoProveedor FROM tbl_DescartoProveedorFlujoEfectivo) AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	   [USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = 'Importacion'  AND [Moneda del documento] = 'USD')[MXP-Propuesto], 
		(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Importacion' AND [Moneda del documento] = 'USD')[USD-Propuesto], NULL[Total MXP-Propuesto], 8[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], 
		(SELECT SUM(PagadoUSD) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Importacion' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta)[RealPagadoUSD], NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 4[SUBID], 'EGRESOS'[Tipo], 'Cartas de Crédito (Bancos)'[Rubro], NULL[MXP-Real], 
		ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(118) AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') and CardCode in('20248', '20250', '20705','22305')),0) 
	  --+ ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(118) AND CardCode NOT IN('20012','21478') AND P.TipoDocumento IN('TT','PC','PP') and CardCode in('20248', '20250', '20705','22305') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	  [USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = 'Bancos' AND [Moneda del documento] = '$')[MXP-Propuesto], 
		(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Bancos' AND [Moneda del documento] = 'USD')[USD-Propuesto], NULL[Total MXP-Propuesto], 9[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], 
		(SELECT SUM(PagadoUSD) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Bancos' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta/*<= @FechaHasta*/)[RealPagadoUSD], NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		-----------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 5[SUBID], 'EGRESOS'[Tipo], 'Créditos Bancarios (Pagos a capital)'[Rubro], 
		ISNULL((SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Creditos Bancarios') AND U_TipoPago IN('Transferencia MXP', 'Cheques')
		AND U_FechaPago <= @FechaHasta),0)[MXP-Real], 
		(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Creditos Bancarios') AND U_TipoPago IN('Transferencia USD')
		AND U_FechaPago <= @FechaHasta)[USD-Real], NULL[Total MXP-Real], NULL[UNION]	
		, (SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'MXP' AND Tipo = 'Creditos Bancarios')[MXP-Propuesto], 
		(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'USD' AND Tipo = 'Creditos Bancarios')[USD-Propuesto], NULL[Total MXP-Propuesto], 10[PK], 
		NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 6[SUBID], 'EGRESOS'[Tipo], 'Créditos Bancarios (Intereses, Comisiones e IVA)'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 11[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 7[SUBID], 'EGRESOS'[Tipo], 'Gtos. Operativos'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 12[PK]
		, NULL[UNION2]
		, (SELECT SUM(PagadoMXP) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Gastos Operativos MXP' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta)[RealPagadoMXP]
		, (SELECT SUM(PagadoUSD) FROM dbo.fu_finance_FacturasRealPagado() WHERE Rubro = 'Gastos Operativos USD' AND [FechaPago] BETWEEN @FechaDesde AND @FechaHasta)[RealPagadoUSD], NULL[RealPagadoTotal], 'Y'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 8[SUBID], 'EGRESOS'[Tipo], 'Compra de Activos'[Rubro], 
		(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Activos') AND U_TipoPago IN('Transferencia MXP', 'Cheques') AND U_FechaPago <= @FechaHasta)[MXP-Real], 
		(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Activos') AND U_TipoPago IN('Transferencia USD') AND U_FechaPago <= @FechaHasta)[USD-Real], NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'MXP' AND Tipo = 'Activos')[MXP-Propuesto], 
			(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'USD' AND Tipo = 'Activos')[USD-Propuesto], NULL[Total MXP-Propuesto], 13[PK]
			, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 9[SUBID], 'EGRESOS'[Tipo], 'Anticipos, Impuestos y Gtos. De Importación'[Rubro], 
		(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Anticipos/Impuestos/Fletes/Estadias') AND U_TipoPago IN('Transferencia MXP', 'Cheques')
		AND U_FechaPago <= @FechaHasta)[MXP-Real], 
		(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> 'E' AND U_Estatus<>'T'
		AND U_CIA = '004' and U_Rubro IN('Anticipos/Impuestos/Fletes/Estadias') AND U_TipoPago IN('Transferencia USD')
		AND U_FechaPago <= @FechaHasta)[USD-Real], NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'MXP' AND Tipo = 'Anticipos/Impuestos/Fletes/Estadias')[MXP-Propuesto], 
		(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = 'Otros Proveedores' AND [Moneda del documento] = 'USD' AND Tipo = 'Anticipos/Impuestos/Fletes/Estadias')[USD-Propuesto], NULL[Total MXP-Propuesto], 14[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 10[SUBID], 'EGRESOS'[Tipo], 'Impuestos'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 15[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		UNION ALL
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		SELECT 3[ID], 11[SUBID], 'EGRESOS'[Tipo], 'Total'[Rubro], NULL[MXP-Real], NULL[USD-Real], NULL[Total MXP-Real], NULL[UNION], NULL[MXP-Propuesto], NULL[USD-Propuesto], NULL[Total MXP-Propuesto], 16[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal], 'N'[VerDetalle]
		---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		

		SELECT 4[ID], 1[SUBID], 'PAGADO'[Tipo], 'TRACTOZONE'[Rubro]
	   ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('01')),0) 
	   --+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('01') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	   [MXP-Real]
		,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('01')),0) 
		--+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('01') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		[USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '01' AND [Moneda del documento] = '$')[MXP-Propuesto]
		, (SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '01' AND [Moneda del documento] = 'USD')[USD-Propuesto]
		, NULL[Total MXP-Propuesto], 17[PK]
		, NULL[UNION2],NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal]
		----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		UNION ALL
		SELECT 4[ID], 2[SUBID], 'PAGADO'[Tipo], 'PROVEEDORES CON PRONTO PAGO'[Rubro]
	   ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('02')),0) 
	   --+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('02') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	   [MXP-Real]
		,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('02')),0) 
		--+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('02') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		[USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '02' AND [Moneda del documento] = '$')[MXP-Propuesto]
		, (SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '02' AND [Moneda del documento] = 'USD')[USD-Propuesto]
		, NULL[Total MXP-Propuesto], 18[PK]
		, NULL[UNION2],NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal]
		----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		UNION ALL
		SELECT 4[ID], 3[SUBID], 'PAGADO'[Tipo], 'PROVEEDORES DE BLOQUEO DE CUENTA'[Rubro]
	   ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('03')),0) 
	   --+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('03') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	   [MXP-Real]
		,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('03')),0) 
		--+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('03') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		[USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '03' AND [Moneda del documento] = '$')[MXP-Propuesto]
		, (SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '03' AND [Moneda del documento] = 'USD')[USD-Propuesto]
		, NULL[Total MXP-Propuesto], 19[PK]
		, NULL[UNION2], NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal]
		----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		UNION ALL
		SELECT 4[ID], 4[SUBID], 'PAGADO'[Tipo], 'FORWARD FLUJO / CARTA DE CRÉDITO'[Rubro]
	   ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('04')),0) 
	   --+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='$' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('04') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
	   [MXP-Real]
		,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('04')),0) 
		--+ISNULL((SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda='USD' AND P.TipoDocumento IN('TT','PC','PP') AND P.U_TipoProveedor IN('04') AND P.DocDueDate BETWEEN @FechaDesde AND @FechaHasta),0)
		[USD-Real]
		, NULL[Total MXP-Real], NULL[UNION]
		, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '04' AND [Moneda del documento] = '$')[MXP-Propuesto]
		, (SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'') = '04' AND [Moneda del documento] = 'USD')[USD-Propuesto]
		, NULL[Total MXP-Propuesto], 20[PK]
		, NULL[UNION2],NULL[RealPagadoMXP], NULL[RealPagadoUSD], NULL[RealPagadoTotal]
		----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

		--DECLARE @Fechas varchar(MAX) = '01-02,03-09,10-16,17-23,24-30,31-31'
		IF ISNULL(@Fechas,'') <> ''
		BEGIN
		
			SET @FInMonth = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-01' 
			SET @FFnMonth = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + CAST(DAY(@FechaHasta) as varchar(2)) 
			SET @i = 0;
			DECLARE Column_Draw CURSOR FOR SELECT item FROM [dbo].fu_hnt_OBTIENE_TABLA_DE_ARRAY([SBOCTRZ].[dbo].COM_OBTIENE_ARRAY_XML_FUNC(@Fechas,',')); 
			OPEN Column_Draw FETCH NEXT FROM Column_Draw INTO @Rango
			IF @@FETCH_STATUS <> 0 
				PRINT '<<None>>'   
			WHILE @@FETCH_STATUS = 0
			BEGIN 
		
				IF @i = 0
				BEGIN
					PRINT 'Encabezado'
					SET @ProvMXP = 'SELECT 6[PK], 3[ID], 1[SUBID], ''EGRESOS''[Tipo], ''Provedores Nacionales (MXN)''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov MXP'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
									, (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov MXP'' AND [Moneda del documento] = ''$'')[mSaldoAntUSD]
									,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov MXP'' AND [Moneda del documento] = ''$'')[mSaldoAntTOT]'
					
					SET @ProvUSD = 'SELECT 7[PK], 3[ID], 2[SUBID], ''EGRESOS''[Tipo], ''Provedores Nacionales (USD)''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'')[mSaldoAntTOT]'

					SET @ProvImp = 'SELECT 8[PK], 3[ID], 3[SUBID], ''EGRESOS''[Tipo], ''Provedores Importación''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'')[mSaldoAntTOT]'

					SET @ProvBancos = 'SELECT 9[PK], 3[ID], 4[SUBID], ''EGRESOS''[Tipo], ''Cartas de Crédito (Bancos)''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''USD'')[mSaldoAntTOT]'
					
					SET @ProvPagCapital = 'SELECT 10[PK], 3[ID], 5[SUBID], ''EGRESOS''[Tipo], ''Créditos Bancarios (Pagos a capital)''[Rubro], (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Creditos Bancarios'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''USD'' AND Tipo = ''Creditos Bancarios'')[mSaldoAntUSD], (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Creditos Bancarios'')[mSaldoAntTOT]'
					
					SET @ProvActivos = 'SELECT 13[PK], 3[ID], 8[SUBID], ''EGRESOS''[Tipo], ''Compra de Activos''[Rubro], (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Activos'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''USD'' AND Tipo = ''Activos'')[mSaldoAntUSD], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Activos'')[mSaldoAntTOT]'

					SET @ProvAnticipos = 'SELECT 14[PK], 3[ID], 9[SUBID], ''EGRESOS''[Tipo], ''Anticipos, Impuestos y Gtos. De Importación''[Rubro], (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'')[mSaldoAntMXP]
									, (SELECT SUM(Propuesta) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''USD'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'')[mSaldoAntUSD], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE Rubro = ''Otros Proveedores'' AND [Moneda del documento] = ''MXP'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'')[mSaldoAntTOT]'

					-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					--SET @ProvMXP = 'SELECT 6[PK], 3[ID], 1[SUBID], ''EGRESOS''[Tipo], ''Provedores Nacionales (MXN)''[Rubro], (SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(101,110) AND Moneda=''$'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP''))[mSaldoAntMXP], NULL[mSaldoAntUSD]
					--				,(SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(101,110) AND Moneda=''$'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP''))[mSaldoAntTOT]'

					--SET @ProvUSD = 'SELECT 7[PK], 3[ID], 2[SUBID], ''EGRESOS''[Tipo], ''Provedores Nacionales (USD)''[Rubro], NULL[mSaldoAntMXP], (SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(101,111) AND Moneda=''USD'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP''))[mSaldoAntUSD], NULL[mSaldoAntTOT]'

					--SET @ProvImp = 'SELECT 8[PK], 3[ID], 3[SUBID], ''EGRESOS''[Tipo], ''Provedores Importación''[Rubro], NULL[mSaldoAntMXP], (SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(112,113) AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') and CardCode Collate Database_Default NOT IN(SELECT sCodigoProveedor FROM tbl_DescartoProveedorFlujoEfectivo))[mSaldoAntUSD], NULL[mSaldoAntTOT]'

					--SET @ProvBancos = 'SELECT 9[PK], 3[ID], 4[SUBID], ''EGRESOS''[Tipo], ''Cartas de Crédito (Bancos)''[Rubro], NULL[mSaldoAntMXP], (SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE P.GroupCode IN(118) AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') and CardCode in(''20248'', ''20250'', ''20705'',''22305''))[mSaldoAntUSD], NULL[mSaldoAntTOT]'	

					--SET @ProvPagCapital = 'SELECT 10[PK], 3[ID], 5[SUBID], ''EGRESOS''[Tipo], ''Créditos Bancarios (Pagos a capital)''[Rubro], (SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntMXP]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntUSD]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntTOT]'
			
					--SET @ProvActivos = 'SELECT 13[PK], 3[ID], 8[SUBID], ''EGRESOS''[Tipo], ''Compra de Activos''[Rubro], (SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntMXP]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T''	AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntUSD]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntTOT]'
			
					--SET @ProvAnticipos = 'SELECT 14[PK], 3[ID], 9[SUBID], ''EGRESOS''[Tipo], ''Anticipos, Impuestos y Gtos. De Importación''[Rubro], (SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntMXP]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T''	AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntUSD]
					--				 ,(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago <= ''' + @FInMonth + ''')[mSaldoAntTOT]'
				END	
		
				PRINT @Rango
				 SET @DyIn = SUBSTRING(@Rango, 1,2) SET @DyFn = SUBSTRING(@Rango, 4, 2)
			
				SET @FechaIn = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + @DyIn PRINT @FechaIn
				SET @FechaFn = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + @DyFn	PRINT @FechaFn
				SET @RangoNom = @DyIn + '-' + @DyFn + '/' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '/' + CAST(YEAR(GETDATE()) AS varchar(4)) PRINT @RangoNom
		
				SET @i = @i + 1;	
				SET @ProvMXP += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Prov MXP'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvMXP += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvMXP += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Prov MXP'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				SET @ProvUSD += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvUSD += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvUSD += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Prov USD'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				SET @ProvImp += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvImp += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvImp += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Importacion'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				SET @ProvBancos += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvBancos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvBancos += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE Rubro = ''Bancos'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				SET @ProvPagCapital += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Creditos Bancarios'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvPagCapital += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Creditos Bancarios'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvPagCapital += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Creditos Bancarios'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				SET @ProvActivos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Compra de Activos'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvActivos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Compra de Activos'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvActivos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Compra de Activos'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				SET @ProvAnticipos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @ProvAnticipos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @ProvAnticipos += ',(SELECT SUM(Propuesta) FROM #PagosPropuestosAll WHERE Rubro = ''Otros Proveedores'' AND Tipo = ''Anticipos/Impuestos/Fletes/Estadias'' AND [Moneda del documento] = ''MXP'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				--SET @ProvMXP += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(101,110) AND Moneda=''$'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvMXP += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvMXP += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(101,110) AND Moneda=''$'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
		
				--SET @ProvUSD += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvUSD += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(101,111) AND Moneda=''USD'' AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvUSD += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				--SET @ProvImp += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvImp += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(112,113) AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') and CardCode Collate Database_Default NOT IN(SELECT sCodigoProveedor FROM tbl_DescartoProveedorFlujoEfectivo) AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvImp += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				--SET @ProvBancos += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvBancos += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE P.GroupCode IN(118) AND CardCode NOT IN(''20012'',''21478'') AND P.TipoDocumento IN(''TT'',''PC'',''PP'') and CardCode in(''20248'', ''20250'', ''20705'',''22305'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvBancos += ',NULL[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				--SET @ProvPagCapital += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvPagCapital += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvPagCapital += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Creditos Bancarios'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				--SET @ProvActivos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvActivos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvActivos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Activos'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				--SET @ProvAnticipos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				--SET @ProvAnticipos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia USD'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				--SET @ProvAnticipos += ',(SELECT SUM(U_Propuesta) FROM finance.PagosGastos WHERE U_Estatus IS NOT NULL AND U_Estatus <> ''E'' AND U_Estatus<>''T'' AND U_CIA = ''004'' and U_Rubro IN(''Anticipos/Impuestos/Fletes/Estadias'') AND U_TipoPago IN(''Transferencia MXP'', ''Cheques'') AND U_FechaPago BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
								
		
			FETCH NEXT FROM Column_Draw INTO @Rango
			END
			CLOSE Column_Draw 
			DEALLOCATE Column_Draw
			DECLARE @QRYY NVARCHAR(MAX) = ''
			SET @QRYY += @ProvMXP		 SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvUSD		 SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvImp		 SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvBancos	 SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvPagCapital SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvActivos 	 SET @QRYY += ' UNION ALL ' 
			SET @QRYY += @ProvAnticipos  
			
			EXECUTE(@QRYY)
		END
		ELSE
		BEGIN
			SELECT NULL[ID], NULL[SUBID], NULL[Tipo], NULL[Rubro]
		END

		

		IF ISNULL(@Fechas,'') <> ''
		BEGIN
		
			SET @FInMonth = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-01' 
			SET @FFnMonth = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + CAST(DAY(@FechaHasta) as varchar(2)) 
			SET @i = 0;
			DECLARE Column_Draw CURSOR FOR SELECT item FROM [dbo].fu_hnt_OBTIENE_TABLA_DE_ARRAY([SBOCTRZ].[dbo].COM_OBTIENE_ARRAY_XML_FUNC(@Fechas,',')); 
			OPEN Column_Draw FETCH NEXT FROM Column_Draw INTO @Rango
			IF @@FETCH_STATUS <> 0 
				PRINT '<<None>>'   
			WHILE @@FETCH_STATUS = 0
			BEGIN 
		
				IF @i = 0
				BEGIN
					PRINT 'Encabezado'
					
					SET @PagTRACTOZONE = 'SELECT 17[PK], 4[ID], 1[SUBID], ''PAGADO''[Tipo], ''TRACTOZONE''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
										  ,(SELECT SUM([Propuesta]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD]
										  ,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''$'')[mSaldoAntTOT]'

					SET @PagPRONTOPag = 'SELECT 18[PK], 4[ID], 2[SUBID], ''PAGADO''[Tipo], ''PROVEEDORES CON PRONTO PAGO''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
										  ,(SELECT SUM([Propuesta]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD]
										  ,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''$'')[mSaldoAntTOT]'

					SET @PagBLOQCTA = 'SELECT 19[PK], 4[ID], 3[SUBID], ''PAGADO''[Tipo], ''PROVEEDORES DE BLOQUEO DE CUENTA''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
										  ,(SELECT SUM([Propuesta]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD]
										  ,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''$'')[mSaldoAntTOT]'

					SET @PagFORDWARD = 'SELECT 20[PK], 4[ID], 4[SUBID], ''PAGADO''[Tipo], ''FORWARD FLUJO / CARTA DE CRÉDITO''[Rubro], (SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''$'')[mSaldoAntMXP]
										  ,(SELECT SUM([Propuesta]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''USD'')[mSaldoAntUSD]
										  ,(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAnt WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''$'')[mSaldoAntTOT]'
					
					
					/*SET @PagTRACTOZONE = 'SELECT 17[PK], 4[ID], 1[SUBID], ''PAGADO''[Tipo], ''TRACTOZONE''[Rubro], ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'')),0) [mSaldoAntMXP]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'')),0)[mSaldoAntUSD]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'')),0)[mSaldoAntTOT]'

					SET @PagPRONTOPag = 'SELECT 18[PK], 4[ID], 2[SUBID], ''PAGADO''[Tipo], ''PROVEEDORES CON PRONTO PAGO''[Rubro], ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'')),0) [mSaldoAntMXP]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'')),0)[mSaldoAntUSD]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'')),0)[mSaldoAntTOT]'

					SET @PagBLOQCTA = 'SELECT 19[PK], 4[ID], 3[SUBID], ''PAGADO''[Tipo], ''PROVEEDORES DE BLOQUEO DE CUENTA''[Rubro], ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'')),0)[mSaldoAntMXP]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'')),0)[mSaldoAntUSD]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'')),0)[mSaldoAntTOT]'

					SET @PagFORDWARD = 'SELECT 20[PK], 4[ID], 4[SUBID], ''PAGADO''[Tipo], ''FORWARD FLUJO / CARTA DE CRÉDITO''[Rubro], ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'')),0)[mSaldoAntMXP]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'')),0)[mSaldoAntUSD]
										  ,ISNULL((SELECT SUM(MontoDesc) FROM #Agrupacion P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'')),0)[mSaldoAntTOT]'
					*/
				END	
		
				PRINT @Rango
				SET @DyIn = SUBSTRING(@Rango, 1,2) SET @DyFn = SUBSTRING(@Rango, 4, 2)		
			
				SET @FechaIn = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + @DyIn PRINT @FechaIn
				SET @FechaFn = CAST(YEAR(GETDATE()) AS varchar(4)) + '-' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '-' + @DyFn	PRINT @FechaFn
				SET @RangoNom = @DyIn + '-' + @DyFn + '/' + CAST(MONTH(@FechaDesde) AS varchar(2)) + '/' + CAST(YEAR(GETDATE()) AS varchar(4)) PRINT @RangoNom
		
				SET @i = @i + 1;	
				
				SET @PagTRACTOZONE += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagTRACTOZONE += ',(SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagTRACTOZONE += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''01'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
			
				SET @PagPRONTOPag += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagPRONTOPag += ',(SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagPRONTOPag += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''02'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				SET @PagBLOQCTA += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagBLOQCTA += ',(SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagBLOQCTA += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''03'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				SET @PagFORDWARD += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagFORDWARD += ',(SELECT SUM([Propuesta]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''USD'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagFORDWARD += ',(SELECT SUM([Propuesta MXP]) FROM #PagosPropuestosAll WHERE ISNULL(TipoProveedor,'''') = ''04'' AND [Moneda del documento] = ''$'' AND [Fecha de vencimiento] BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				
				/*
				SET @PagTRACTOZONE += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagTRACTOZONE += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagTRACTOZONE += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''01'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
			
				SET @PagPRONTOPag += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagPRONTOPag += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagPRONTOPag += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''02'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				SET @PagBLOQCTA += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagBLOQCTA += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagBLOQCTA += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''03'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'

				SET @PagFORDWARD += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'MXP]'
				SET @PagFORDWARD += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''USD'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'USD]'
				SET @PagFORDWARD += ',(SELECT SUM(MontoDesc) FROM #SaldosMesCompleto P WHERE Moneda=''$'' AND P.TipoDocumento IN(''TT'',''PC'',''PP'') AND P.U_TipoProveedor IN(''04'') AND DocDueDate BETWEEN ''' + @FechaIn + ''' AND ''' + @FechaFn + ''')[sSm' + CAST(@i AS varchar(50)) + 'TOT]'
				*/
			
		
			FETCH NEXT FROM Column_Draw INTO @Rango
			END
			CLOSE Column_Draw 
			DEALLOCATE Column_Draw
			DECLARE @QRYY2 NVARCHAR(MAX) = ''
			SET @QRYY2 += @PagTRACTOZONE	SET @QRYY2 += ' UNION ALL ' 
			SET @QRYY2 += @PagPRONTOPag		SET @QRYY2 += ' UNION ALL ' 
			SET @QRYY2 += @PagBLOQCTA		SET @QRYY2 += ' UNION ALL ' 
			SET @QRYY2 += @PagFORDWARD	
		
			EXECUTE(@QRYY2)
		END
		ELSE
		BEGIN
			SELECT NULL[PK], NULL[ID], NULL[SUBID], NULL[Tipo], NULL[Rubro]
		END

		--DROP TABLE #Agrupacion
		--DROP TABLE #SaldosMesCompleto
		--DROP TABLE #PagosPropuestosAnt
		--DROP TABLE #PagosPropuestosAll
	END

--	IF @TipoConsulta = 31
--	BEGIN
--		Update tbl_RepCaja SET dtFechaAplicacion = @FechaAplicacion Where Code = @Folio	
--		--select * from tbl_RepCaja where code = 72

--		--set @Mensaje = 'Ok'
--	END
	
--	IF @TipoConsulta = 32
--	BEGIN
--		IF @PKD IN (2) --SE TRATA DE: INGRESOS - COBRANZA
--		BEGIN
--			SELECT OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr, CASE WHEN OC.DocCurr = '$' THEN SUM(RC.SumApplied) WHEN OC.DocCurr = 'USD' THEN SUM(RC.AppliedFC) END[Monto] 
--			FROM [SBOCTRZ].dbo.ORCT OC 
--			LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum WHERE OC.DocDate 
--			BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND OC.DocCurr = @MONEDAD AND OC.CardName IS NOT NULL
--			GROUP BY OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr
--			ORDER BY OC.DocNum
--		END 
--		ELSE IF @PKD IN (3) --SE TRATA DE: INGRESOS - COBROS DEL GRUPO
--		BEGIN
--			SELECT OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr, CASE WHEN OC.DocCurr = '$' THEN SUM(RC.SumApplied) WHEN OC.DocCurr = 'USD' THEN SUM(RC.AppliedFC) END[Monto] 
--			FROM [SBOCTRZ].dbo.ORCT OC 
--			LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum 
--			LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode 
--			WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(116,122) AND OC.DocCurr = @MONEDAD AND OC.CardName IS NOT NULL
--			GROUP BY OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr
--			ORDER BY OC.DocNum
--		END 
--		ELSE IF @PKD IN (4) --SE TRATA DE: INGRESOS - VTA. CONTADO
--		BEGIN
--			SELECT OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr, CASE WHEN OC.DocCurr = '$' THEN SUM(RC.SumApplied) WHEN OC.DocCurr = 'USD' THEN SUM(RC.AppliedFC) END[Monto] 
--			FROM [SBOCTRZ].dbo.ORCT OC 
--			LEFT JOIN [SBOCTRZ].dbo.RCT2 RC ON OC.DocNum = RC.DocNum 
--			LEFT JOIN [SBOCTRZ].dbo.OCRD CL ON OC.CardCode = CL.CardCode 
--			WHERE OC.DocDate BETWEEN @FechaDesde AND @FechaHasta AND OC.Canceled='N' AND CL.GroupCode IN(2,20) AND OC.DocCurr = @MONEDAD AND OC.CardName IS NOT NULL
--			GROUP BY OC.DocEntry, OC.DocNum, OC.CardCode, OC.CardName, OC.DocDate, OC.DocCurr
--			ORDER BY OC.DocNum
--		END 
--		ELSE IF @PKD IN (6) --SE TRATA DE: EGRESOS - PROV. NACIONALES MXP
--		BEGIN
--			SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--			CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--			FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Prov MXP' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--			AND [Moneda del documento] = @MONEDAD			
--			GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--			HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--			ORDER BY [Folio SAP]
--		END
--		ELSE IF @PKD IN (7) --SE TRATA DE: EGRESOS - PROV. NACIONALES USD
--		BEGIN
--			SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--			CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--			FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Prov USD' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--			AND [Moneda del documento] = @MONEDAD			
--			GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--			HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--			ORDER BY [Folio SAP]
--		END
--		ELSE IF @PKD IN (8) --SE TRATA DE: EGRESOS - PROV. IMPORTACION
--		BEGIN
--			SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--			CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--			FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Importacion' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--			AND [Moneda del documento] = @MONEDAD			
--			GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--			HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--			ORDER BY [Folio SAP]
--		END

--		ELSE IF @PKD IN (9) --SE TRATA DE: EGRESOS - CARTA DE CREDITO (BANCOS)
--		BEGIN
--			SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--			CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--			FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Bancos' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--			AND [Moneda del documento] = @MONEDAD			
--			GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--			HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--			ORDER BY [Folio SAP]
--		END
--		ELSE IF @PKD IN (12) --SE TRATA DE: EGRESOS - GASTOS OPERATIVOS
--		BEGIN
--			IF @RUBROD = 'Gtos. Operativos' AND @MONEDAD = '$'
--			BEGIN
--				SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--				CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--				FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Gastos Operativos MXP' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--				AND [Moneda del documento] = @MONEDAD			
--				GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--				HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--				ORDER BY [Folio SAP]
--			END
--			ELSE IF @RUBROD = 'Gtos. Operativos' AND @MONEDAD = 'USD'
--			BEGIN
--				SELECT DocEntry, [Folio SAP][DocNum], Proveedor[CardCode], Nombre[CardName], [Fecha de vencimiento][DocDate], [Moneda del documento][DocCurr], 
--				CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END[Monto] 
--				FROM dbo.v_FacturasWPagos() WHERE Rubro = 'Gastos Operativos USD' AND [Fecha de vencimiento] BETWEEN @FechaDesde AND @FechaHasta
--				AND [Moneda del documento] = @MONEDAD			
--				GROUP BY DocEntry, [Folio SAP],  Proveedor, Nombre, [Fecha de vencimiento], [Moneda del documento]
--				HAVING (CASE WHEN [Moneda del documento] = '$' THEN SUM(PagadoMXP) WHEN [Moneda del documento] = 'USD' THEN SUM(PagadoUSD) END) > 0
--				ORDER BY [Folio SAP]
--			END
--		END
--	END	

--	IF @TipoConsulta = 33
--	BEGIN
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@NombreArchivo)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@NombreMetodo)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@NumLinea)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@NumCol)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@NumCodError)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@TabActual)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@UsuarioSuceso)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@EvtMet)
--		--INSERT INTO tbl_MSGPrueba (Valor) VALUES (@MensajeError)

--		DECLARE @CuerpoMSG varchar(max) = ''
--		--SET @CuerpoMSG = /*'Archivo:' + @NombreArchivo + ', Metodo: ' + @NombreMetodo + ', */ 'Linea: ' + CAST(@NumLinea AS VARCHAR(50)) + ', Columna: ' + CAST(@NumCol AS VARCHAR(50)) 
--		--				+ ', CodigoError:' + CAST(@NumCodError AS VARCHAR(50)) + ', Pestaña:' + @TabActual + ', Usuario: ' + @UsuarioSuceso + ', EvtMet:' + @EvtMet + ', Mensaje:' + @MensajeError
--		--EXEC msdb.dbo.sp_send_dbmail   
--		--		@profile_name = 'Correo Halconet',--'Correo Halconet',
--		--		@recipients = 'pedro.juarez@tractozone.com.mx',
--		--		@subject = 'Error en pagos proveedores',
--		--		@body = @CuerpoMSG
				
--	END

	IF @TipoConsulta = 34
	BEGIN
		DECLARE @TbGruposCode table (GroupCode int)
		IF @TipoMov = 0
		BEGIN
			INSERT INTO @TbGruposCode 
			SELECT OG.GroupCode from [SBOCTRZ].dbo.OCRG OG WHERE GroupType = 'S'
		END
		ELSE IF @TipoMov = 1
		BEGIN
			INSERT INTO @TbGruposCode 
			SELECT OG.GroupCode from [SBOCTRZ].dbo.OCRG OG WHERE GroupType = 'S'
			AND GROUPCODE IN(/*110,111,112,113*/104,105,106,107)
		END
		ELSE IF @TipoMov = 2
		BEGIN
			INSERT INTO @TbGruposCode 
			SELECT OG.GroupCode from [SBOCTRZ].dbo.OCRG OG WHERE GroupType = 'S'
			AND GROUPCODE NOT IN(/*110,111,112,113*/104,105,106,107) /*proximo a cambiar 104,105,106,107*/
		END

		SELECT 
			OP.DocNum[No_Factura]
			, FORMAT(OP.CreateDate, 'dd/MM/yyyy') [Fecha_Creacion]
			, FORMAT(OP.DocDate, 'dd/MM/yyyy') [Fecha_Contabilizacion]
			, FORMAT(OPD.DocDate, 'dd/MM/yyyy') [Fecha_Entrada_Material]
			, OP.CardCode[Proveedor]
			, OC.CardName[Nombre]
			, OP.DocCur[Moneda]
			, CASE 
				WHEN OP.DocCur = '$' THEN  OP.DocTotal
				WHEN OP.DocCur = 'USD' THEN OP.DocTotalFC
			 END [Monto]
			, OP.NumAtCard[Referencia]--, OPD.DocNum
			, OPD.DocNum[No_EM]
			, CONCAT(PD1.Whscode, ' | ', OW.WhsName)[Almacen]
		FROM [SBOCTRZ].dbo.OPCH OP /*sap.VW_OPCH OP*/
			INNER JOIN [SBOCTRZ].dbo.PCH1 P1 ON P1.DocEntry = OP.DocEntry
			INNER JOIN [SBOCTRZ].dbo.OCRD OC ON OP.CardCode = OC.CardCode
			INNER JOIN [SBOCTRZ].dbo.PDN1 PD1 ON PD1.BaseEntry = P1.DocEntry AND PD1.BaseLine = P1.LineNum 
			INNER JOIN [SBOCTRZ].dbo.OPDN OPD ON OPD.DocEntry = PD1.DocEntry		
			LEFT JOIN  [SBOCTRZ].dbo.OWHS OW ON OW.WhsCode = PD1.WhsCode
		WHERE 
			OP.DocDate BETWEEN @FechaDesde AND @FechaHasta
			AND OC.GroupCode IN(SELECT GroupCode FROM @TbGruposCode)
		GROUP BY 
			OP.DocNum
			,OP.CreateDate
			, OP.DocDate
			, OP.CardCode
			, OC.CardName
			, OP.DocCur
			, OP.DocTotal
			, OP.NumAtCard--, OPD.DocNum
			, OPD.DocNum
			, PD1.Whscode
			, OW.WhsName
			, OPD.DocDate
			, OP.DocTotalFC
		ORDER BY OP.DocNum
	END

	DECLARE @QRY NVARCHAR(MAX)
	DECLARE @Params NVARCHAR(MAX)
-----------------------------------------APARTIR DE AQUI ES SP_PAGOS_PROVEEDORES---------------------
	IF @TipoConsulta = 35
	BEGIN
		--SET LANGUAGE SPANISH
		SET @QRY='
			Select
				B.CardCode Codigo,
				B.CardName [Nombre de proveedor], 
				C.GroupName Grupo,
				SUM(A.DocTotal) [Total de pagos],'

		DECLARE @Aux DATE
		SET @Aux = @Desde

		WHILE @Aux <= @Hasta
		BEGIN
			SET @QRY += 'SUM(CASE WHEN A.DocDate = ''' + CAST(@Aux AS NVARCHAR(10)) + ''' THEN A.DocTotal END) [' + CAST(DATEPART(DD, @Aux) as NVARCHAR(5)) + ' - ' +  LEFT(DATENAME(MM,@Aux), 3) + '],'

			SET @Aux = DATEADD(dd, 1, @Aux)
		END

		SET @QRY = LEFT(@QRY, LEN(@QRY)-1)

		SET @QRY +='
			From [SBOCTRZ].dbo.OVPM A
				INNER JOIN [SBOCTRZ].dbo.OCRD B ON A.CardCode = B.CardCode 
				INNER JOIN [SBOCTRZ].dbo.OCRG C ON B.GroupCode = C.GroupCode
			Where 
				A.Canceled = ''N''
				AND A.DocDate between @Desde AND @Hasta
				AND B.GroupCode in ('+@Grupos +')
			Group By B.CardCode, B.CardName, C.GroupName'

		--select @QRY

		SET @Params = '@Desde Date, @Hasta DATE'
		EXEC sp_executesql @QRY, @Params, @Desde, @Hasta
	END

	IF @TipoConsulta = 36
	BEGIN
		SELECT
			Tipo,
			Proveedor, 
			Nombre,
			SUM([Aprobado MXP]) [Aprobado MXP],
			SUM([Aprobado USD]) [Aprobado USD],
			BankName [Banco],
			Cuenta
		INTO #TEMP
		FROM(
			SELECT
				'MXP' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) [Aprobado MXP]
				, NULL [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/104,101) AND B.Currency = '$'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/104,101) AND B.Currency = '$'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*110,101*/104,101) AND C.Currency = '$')tmp
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			UNION ALL
			SELECT
				'USD' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 0
					THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) * (Select Valor from hnt.Config_ParametrosGenerales x Where x.Name = 'TC')END [Aprobado MXP]
	
				, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 1
					THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) END [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/105,101) AND B.Currency = 'USD'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/105,101) AND B.Currency = 'USD'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*111,101*/105,101) AND C.Currency = 'USD')tmp
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			---------------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------
			UNION ALL
			SELECT
				'BANCOS' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) [Aprobado MXP]
				, ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/108,102) AND B.Currency = 'USD'
				--NC
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*111,101*/108,102) AND C.Currency = 'USD'
				)tmp
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			UNION ALL
			/*********************************************************************************************/ --Solicitado Esperanza
			SELECT
				'GOMXP' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL((SELECT U_AprobadoMXP FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) [Aprobado MXP]
				, NULL [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/102) AND B.Currency = '$'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/102) AND B.Currency = '$'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*110,101*/102) AND C.Currency = '$')tmp
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			UNION ALL

			/*********************************************************************************************/
			SELECT
				'IMPORTACIÓN' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 0
					THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) * (Select Valor from hnt.Config_ParametrosGenerales x Where x.Name = 'TC')END [Aprobado MXP]
	
				, CASE WHEN Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) = 1
					THEN ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) END [Aprobado USD]
				, BankName
				, ISNULL(Cuenta, '' ) Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					A.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*112,113*/106,107)
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					B.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*112,113*/106,107)
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*112,113*/106,107))tmp
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE
					AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'
			UNION ALL-----AGRGAR MONTOS APROBADOS DE OTROS PROVEEDORES EN PREVIO DE PAGOS 2015-1-20
			Select 
				'OTROS PROVEEDORES' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '004'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			UNION ALL
			Select 
				'GASTOS' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '001'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'SC' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '002'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'PEJ' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '003'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'LOGISTICA' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '005'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			)DATOS
		GROUP BY Tipo, Proveedor, Nombre, Cuenta, BankName
		ORDER BY Tipo, Proveedor
		
		SELECT * FROM #TEMP
		UNION ALL
		SELECT Tipo + ' TOTAL' , NULL, Tipo + ' TOTAL'  collate database_default, + SUM([Aprobado MXP]), SUM([Aprobado USD]), NULL, NULL FROM #TEMP
		GROUP BY Tipo
		ORDER BY Tipo

		DROP TABLE #TEMP
	END

	IF @TipoConsulta = -36
	BEGIN
		SELECT
			Tipo,
			Proveedor, 
			Nombre,
			SUM([Aprobado MXP]) [Aprobado MXP],
			SUM([Aprobado USD]) [Aprobado USD],
			BankName [Banco],
			Cuenta
		INTO #TEMP1
		FROM(
			SELECT
				'MXP' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL(B.U_AprobadoMXP, 0.00) [Aprobado MXP]
				, NULL [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/104,101) AND B.Currency = '$'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/104,101) AND B.Currency = '$'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*110,101*/104,101) AND C.Currency = '$'
			)A
			LEFT JOIN [finance].PagosProv B ON A.Tipo = B.U_Tipo AND A.DocEntry = B.U_FolioSAP
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			UNION ALL
			SELECT
				'USD' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, CASE WHEN Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End = 0
					THEN ISNULL(B.U_AprobadoUSD, 0.00) * (Select Valor from hnt.Config_ParametrosGenerales x Where x.Name = 'TC')END [Aprobado MXP]
	
				, CASE WHEN Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0.00) as bit) = 1
					THEN ISNULL(B.U_AprobadoUSD, 0.00) END [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/105,101) AND B.Currency = 'USD'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/105,101) AND B.Currency = 'USD'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*111,101*/105,101) AND C.Currency = 'USD'
				)A
				LEFT JOIN [finance].PagosProv B ON A.Tipo = B.U_Tipo AND A.DocEntry = B.U_FolioSAP
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			---------------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------
			UNION ALL
			SELECT
				'BANCOS' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL(B.U_AprobadoMXP, 0.00) [Aprobado MXP]
				, ISNULL(B.U_AprobadoUSD, 0.00) [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*111,101*/108,102) AND B.Currency = 'USD'
				--NC
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*111,101*/108,102) AND C.Currency = 'USD'
			)A
			LEFT JOIN [finance].PagosProv B ON A.Tipo = B.U_Tipo AND A.DocEntry = B.U_FolioSAP
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			UNION ALL
			/*********************************************************************************************/ --Solicitado Esperanza
			SELECT
				'GOMXP' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, ISNULL(B.U_AprobadoMXP, 0.00) [Aprobado MXP]
				, NULL [Aprobado USD]
				, BankName
				, Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/102) AND B.Currency = '$'
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,101*/102) AND B.Currency = '$'
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*110,101*/102) AND C.Currency = '$'
				)A
				LEFT JOIN [finance].PagosProv B ON A.Tipo = B.U_Tipo AND A.DocEntry = B.U_FolioSAP
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE	
				AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'	
			UNION ALL

			/*********************************************************************************************/
			SELECT
				'IMPORTACIÓN' Tipo 
				, Provedor 'Proveedor'
				, Nombre
				, CASE WHEN Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0.00) as bit) = 0
					THEN ISNULL(B.U_AprobadoUSD, 0.00) * (Select Valor from hnt.Config_ParametrosGenerales x Where x.Name = 'TC')END [Aprobado MXP]
	
				, CASE WHEN Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0.00) as bit) = 1
					THEN ISNULL(U_AprobadoUSD, 0.00) END [Aprobado USD]
				, BankName
				, ISNULL(Cuenta, '' ) Cuenta
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					A.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*112,113*/106,107)
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					B.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where A.DocStatus = 'O' AND B.GroupCode IN (/*112,113*/106,107)
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				FROM [SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (/*112,113*/106,107)
				)A
				LEFT JOIN [finance].PagosProv B ON A.Tipo = B.U_Tipo AND A.DocEntry = B.U_FolioSAP
			Where [Fecha de vencimiento] between @Desde AND @Hasta --CAMBIO DE FECHA POR VARIABLE
					AND Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
						When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
						When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  = 'Aprobado'
			UNION ALL-----AGRGAR MONTOS APROBADOS DE OTROS PROVEEDORES EN PREVIO DE PAGOS 2015-1-20
			Select 
				'OTROS PROVEEDORES' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '004'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			UNION ALL
			Select 
				'GASTOS' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '001'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'SC' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '002'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'PEJ' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '003'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				UNION ALL
			Select 
				'LOGISTICA' Tipo,
				'-' Proveedor,
				U_Proveedor COLLATE DATABASE_DEFAULT Nombre,
				CASE WHEN U_TipoPago in ('Transferencia MXP', 'Cheques') THEN U_Aprobado END [Aprobado MXP],
				CASE WHEN U_TipoPago in ('Transferencia USD') THEN U_Aprobado END [Aprobado USD],
				U_Banco COLLATE DATABASE_DEFAULT Banco,
				U_Cuenta COLLATE DATABASE_DEFAULT Cuenta
			 From finance.PagosGastos
			Where U_CIA = '005'
				AND U_Aprobado <> 0
				AND U_Estatus NOT IN ('E', 'T')
				----------------------%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%--------------------------------------
			)DATOS
		GROUP BY Tipo, Proveedor, Nombre, Cuenta, BankName
		ORDER BY Tipo, Proveedor
		
		SELECT * FROM #TEMP1
		UNION ALL
		SELECT Tipo + ' TOTAL' , NULL, Tipo + ' TOTAL'  collate database_default, + SUM([Aprobado MXP]), SUM([Aprobado USD]), NULL, NULL FROM #TEMP1
		GROUP BY Tipo
		ORDER BY Tipo

		DROP TABLE #TEMP1
	END

	IF @TipoConsulta = 37
	BEGIN	
		SELECT
			ROW_NUMBER() OVER ( PARTITION BY Provedor ORDER BY Provedor) 'Num'--mum
			, ID DocEntry--docentry
			, [Folio SAP]--foliosap
			, Provedor 'Proveedor'--proveedor
			, Nombre--nombre
			, DocCur 'Moneda' --moneda
			, Case When DocCur = 'USD' Then 
					ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 
				   When DocCur = '$' Then 
					ISNULL((SELECT U_AprobadoMXP FROM [finance].PagosProv WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) End Aprobado--aprobado
			, GETDATE() 'FechaContabilizacion'--fechacont
			, GETDATE() 'Fecha transferencia'--fechatrans
			, Case When DocCur  = 'USD' Then
					'1120-001-003'
				   When DocCur = '$' and GroupCode = 102 Then
				    '1120-001-005'
				   When DocCur = '$' and GroupCode <> 102 Then
				    '1120-001-004' End 'Cuenta contable'--cuenta --cambio de cuenta --1120-001-007
			, Case When Tipo = 'FR' Then 'it_PurchaseInvoice'
				   When Tipo = 'NC' Then 'it_PurchaseCreditNote'
				   When Tipo = 'SF' Then 'it_JournalEntry' End Tipo--tipo
			, DocLine--docline
			, 'Pendiente' [Estatus]--estatus
			, '' [Forma de pago]--grupo
			  --Case When ISNULL((SELECT U_Template FROM [@PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 'N') = 'N' Then 'Pendiente'
			  --	   Else 'Procesado' End 'Estatus'
			, GroupCode Grupo	
			, CAST(1 AS BIT) [Agregar]--add	
		FROM
		(
			SELECT 
				'FR' Tipo,
				CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
				ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
				END END as 'Estatus',
				A.CardCode 'Provedor',
				A.CardName 'Nombre',
				A.DocDate 'Fecha de Contabilización',
				A.DocDueDate 'Fecha de vencimiento',
				A.NumAtCard 'Folio Factura',
				A.DocNum 'Folio SAP'
				,A.DocCur
				,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
				,A.U_FP
				,A.DocEntry
				,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				, A.DocEntry 'ID'
				, 0 DocLine 
				, B.GroupCode
			FROM [SBOCTRZ].[dbo].OPCH A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,111,112,113,118,101*/104,105,106,107,108,101,102)
			--NC
			UNION ALL
			SELECT 
				'NC' Tipo,
				CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
				ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
				END END as 'Estatus',
				A.CardCode 'Provedor',
				A.CardName 'Nombre',
				A.DocDate 'Fecha de Contabilización',
				A.DocDueDate 'Fecha de vencimiento',
				A.NumAtCard 'Folio Factura',
				A.DocNum 'Folio SAP'
				,A.DocCur
				,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
				,A.U_FP
				,A.DocEntry
				,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				,A.DocEntry 'ID'
				,0 DocLine
				,B.GroupCode
			FROM [SBOCTRZ].[dbo].ORPC A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (/*110,111,112,113,118,101*/104,105,106,107,108,101,102)
				AND B.GroupCode <> 101 -- quitar gastos importacion
			UNION ALL
			--Saldos a favor
			SELECT distinct
				'SF' Tipo,
				'Saldo a favor' as 'Estatus',
				A.CardCode,
				A.CardName,
				A.DocDate,
				A.DocDueDate,
				'',
				A.DocNum
				,A.DocCurr
				,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
				,Case When Case When DocCurr = 'USD' Then 
					ISNULL((SELECT U_AprobadoUSD FROM [finance].PagosProv WHERE U_FolioSAP = A.DocEntry AND U_Tipo = 'SF'), 0) 
				   When DocCurr = '$' Then 
					ISNULL((SELECT U_AprobadoMXP FROM [finance].PagosProv WHERE U_FolioSAP = A.DocEntry AND U_Tipo = 'SF'), 0) End <> 0 Then 'A' End
				,A.DocEntry
				,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
				,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
				,A.TransId 'ID'
				,1 DocLine
				,C.GroupCode
			FROM [SBOCTRZ].[dbo].OVPM A
				LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
				INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
				LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND A.OpenBal <> 0 AND C.GroupCode IN (/*110,111,112,113,118,101*/104,105,106,107,108,101,102)
				AND C.GroupCode <> 101 -- quitar gastos importacion
				)tmp
		Where U_FP = 'A'
		Order by Provedor, [Fecha de vencimiento]
	END

	IF @TipoConsulta = 38
	BEGIN
		Select AcctCode 'Codigo', AcctCode + ' '+AcctName 'Nombre' from [SBOCTRZ].DBO.OACT Where AcctCode like '1120-%' AND Postable = 'Y'
		UNION ALL
		Select AcctCode 'Codigo', AcctCode + ' '+AcctName 'Nombre' from [SBOCTRZ].DBO.OACT Where AcctCode = '2140-002-000' --> usd impo
	END

	IF @TipoConsulta = 39
	BEGIN
		select '' FldValue, '' Descr
		UNION ALL
 		select FldValue, Descr from [SBOCTRZ].dbo.UFD1 where TableID = 'OVPM' and FieldID = 7
	END

	IF @TipoConsulta = 40	
	BEGIN
		
		IF @GroupCode in (1)
		BEGIN
			--Facturas
			SELECT 
				 Provedor 'Proveedor'
				, Nombre
				, [Folio Factura]
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, CreateDate[FechaDocumento]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, DocEntry
				, Tipo
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				------------------------------------------------------------------------------------------------------------
				, ISNULL((SELECT TOP 1 Code FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Code
				, ISNULL((SELECT TOP 1 Obl FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Obl
				, ISNULL((SELECT TOP 1 Obligado FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Obligado
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 DescPP FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'Desc_PP'
				, ISNULL((SELECT TOP 1 DescPP FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) DescPP
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 BC FROM [finance].[FlujodeEfectivo] WHERE FolioSAP =  [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'Bcta'
				, ISNULL((SELECT TOP 1 BC FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) BC
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 N_P FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'NP'
				, ISNULL((SELECT TOP 1 N_P FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) N_P
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apr'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Ap'
				
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST('' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.Doctotal - A.paidTodate <> 0 AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP[U_FP]
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST('' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			UNION ALL
			----Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST('' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			,A.U_TC
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
			AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			order by Proveedor, [Total]desc
		END

		IF @GroupCode in (2)
		BEGIN
			--Facturas
			SELECT 
				 Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CreateDate[FechaDocumento]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, CASE WHEN ISNULL(U_TC,0) = 0 THEN DocCur ELSE 'USD' END 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END * Total[Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, DocEntry
				,Tipo
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT TOP 1 Code FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Code
				, ISNULL((SELECT TOP 1 Obl FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Obl
				, ISNULL((SELECT TOP 1 Obligado FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Obligado
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 DescPP FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'Desc_PP'
				, ISNULL((SELECT TOP 1 DescPP FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) DescPP
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 BC FROM [finance].[FlujodeEfectivo] WHERE FolioSAP =  [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'Bcta'
				, ISNULL((SELECT TOP 1 BC FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) BC
				, CAST(CASE WHEN ISNULL((SELECT TOP 1 N_P FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]), 0) <> 0 
				THEN 1 ELSE 0 END AS BIT) 'NP'
				, ISNULL((SELECT TOP 1 N_P FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) N_P
				--, CAST(CASE WHEN ISNULL((SELECT TOP 1 Ap FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]), 0) <> 0 
				--THEN 1 ELSE 0 END AS BIT) 'Apr'
				--, ISNULL((SELECT TOP 1 Ap FROM [finance].[FlujodeEfectivo] WHERE FolioSAP = [Folio SAP]),0) Ap
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apr'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Ap
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.U_TC
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
			AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END

	END

	--PAGOS PROVEEDORES EN VERSION WEB --
	IF @TipoConsulta = 41
	BEGIN
		
		IF @GroupCode in (1)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]

				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				/*10*/, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, CAST(ISNULL(U_Flujo, 0) AS bit) 'U_Flujo'
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				/*20*/, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				------------------------------------------------------------------------------------------------------------------------------------------
				, CASE WHEN ISNULL(U_TC,0) = 0 THEN NULL
					WHEN ISNULL(U_TC,0) > 0 THEN 
					(CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END) / NULLIF(U_TC,0)
				END[Monto Dolares]
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.U_Flujo
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.CreateDate
					,A.U_TC
				FROM
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where
					A.Doctotal - A.paidTodate <> 0 
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Provedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,''
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP[U_FP]
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.CreateDate
					,A.U_TC
				FROM 
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				WHERE
					A.DocStatus = 'O' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				UNION ALL
				--Saldos a favor
				SELECT DISTINCT
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,D.U_Flujo
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,''
					,A.CreateDate
					,A.U_TC
				FROM
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				WHERE
					A.Canceled = 'N' 
					AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (2)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, CASE WHEN ISNULL(U_TC,0) = 0 THEN DocCur ELSE 'USD' END 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END * Total[Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 
						THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - 
								(Total * ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, CAST(ISNULL(U_Flujo, 0) AS bit) 'U_Flujo'
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			,A.U_Flujo
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			b.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_TC
			,A.CreateDate
			,''
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.U_TC
			,A.CreateDate
			,D.U_Flujo
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
			AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta		
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (3)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, U_CtaCredito
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_CtaCredito
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.U_CtaCredito
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,NULL
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode))tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END
		
		IF @GroupCode in (4)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END * 
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
							 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
								  THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND X.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode)  )tmp
			Where Provedor in ('20248', '20250', '20705','22305', '20667')
			      AND [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (5, 6)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Provedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura]
				, CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP = 'Y'),0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) = 0 THEN Total - (Total*ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND PP IS NULL),0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL((SELECT ISNULL(U_PropuestaUSD,0) + ISNULL(U_PropuestaMXP,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL((SELECT U_PropuestaUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS decimal(18,2)) Propuesta 
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL((SELECT ISNULL(U_AprobadoMXP,0) + ISNULL(U_AprobadoUSD,0)  FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL((SELECT U_AprobadoUSD FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) Aprobado
				, ISNULL((SELECT U_Comentarios FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), '') Comentarios
				, NULL[U_CtaCredito]
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL((SELECT U_TC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'TC'
				, CAST(ISNULL((SELECT U_PropuestaMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(ISNULL((SELECT U_AprobadoMXP FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, Cast(ISNULL((SELECT Case When ISNULL(U_USD, '') = 'Y' Then 1 End FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo),0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL((select x.Descuento from [finance].[DscProv] x where x.CardCode COLLATE DATABASE_DEFAULT = Provedor AND x.PP IS NULL),0) Descuento
				, ISNULL((SELECT U_NC FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'NC'
				, ISNULL((SELECT PagosInicial FROM [finance].[PagosProv] WHERE U_FolioSAP = DocEntry AND U_Tipo = Tipo), 0) 'PagosInicial'
				, CreateDate[FechaDocumento]
				, NULL[Monto Dolares]
			FROM
			(
			SELECT 
			'FR' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OPCH A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.Doctotal - A.paidTodate <> 0 /*AND A.InvntSttus = 'O'*/ AND ISNULL(A.Indicator,'')<>'PC' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			--NC
			UNION ALL
			SELECT 
			'NC' Tipo,
			CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
			ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
			END END as 'Estatus',
			A.CardCode 'Provedor',
			B.CardName 'Nombre',
			A.DocDate 'Fecha de Contabilización',
			A.DocDueDate 'Fecha de vencimiento',
			A.NumAtCard 'Folio Factura',
			A.DocNum 'Folio SAP'
			,A.DocCur
			,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
			,A.U_FP
			,A.DocEntry
			,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
			,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,A.Indicator
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].ORPC A 
			INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
			INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			Where A.DocStatus = 'O' AND B.GroupCode IN (SELECT * FROM @TblGrpCode) AND B.Currency = @MONEDA_PROV
			UNION ALL
			--Saldos a favor
			SELECT distinct
			'SF' Tipo,
			'Saldo a favor' as 'Estatus',
			A.CardCode,
			C.CardName,
			A.DocDate,
			A.DocDueDate,
			'',
			A.DocNum
			,A.DocCurr
			,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
			,NULL
			,A.DocEntry
			,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
			,''
			,A.CreateDate
			FROM [SBOCTRZ].[dbo].OVPM A
			LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
			INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
			LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
			INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
			LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			Where A.Canceled = 'N' AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV)tmp
			Where [Fecha de vencimiento] between @FechaDesde AND @FechaHasta
			Order by Provedor, [Fecha de vencimiento]
		END

	END

	--PAGOS PROVEEDORES EN VERSION WEB --
	IF @TipoConsulta = -41
	BEGIN
		IF @GroupCode in (1)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Proveedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura] Factura
				, CAST([Folio SAP] as decimal(18,4)) [Folio_SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL((B.U_NC), 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL((B.U_NC), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((B.U_NC), 0) = 0 
						THEN Total - 
								(Total * ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((B.U_NC), 0) = 0
							 THEN Total - 
								(Total*ISNULL(CASE WHEN PP IS NULL THEN Descuento END,0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
					AND ISNULL(ISNULL(B.U_PropuestaUSD,0) + ISNULL(B.U_PropuestaMXP,0), 0) <> 0 
					THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL(B.U_PropuestaUSD , 0) AS DECIMAL(18,2)) Propuesta
				, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL(ISNULL(B.U_AprobadoMXP,0) + ISNULL(B.U_AprobadoUSD,0), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL(B.U_AprobadoUSD, 0) AS decimal(18,2)) Aprobado
				/*20*/, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, ISNULL(B.U_Comentarios, '') Comentarios
				, CAST(ISNULL(U_Flujo, 0) AS bit) 'Pagado'
				, NULL[U_CtaCredito]
				, ISNULL((B.U_NC), 0) 'NC'
				, CASE WHEN ISNULL(U_FP, 'N') = 'N' THEN 'Normal' 
					   WHEN ISNULL(U_FP, 'N') = 'P' THEN 'Propuesta'
					   WHEN ISNULL(U_FP, 'N') = 'A' THEN 'Aprobado' 
				  END  Situacion
				, DocEntry
				, ISNULL(B.U_TC, 0) 'TC'
				, Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL(CASE WHEN PP IS NULL THEN Descuento END,0) Descuento
				, ISNULL(B.PagosInicial, 0) [Contemplar Pago Inicial]
				, CreateDate[Fecha Documento]
				------------------------------------------------------------------------------------------------------------------------------------------
				, CASE WHEN ISNULL(B.U_TC,0) = 0 THEN NULL
					WHEN ISNULL(B.U_TC,0) > 0 THEN 
					(CASE WHEN ISNULL((B.U_NC), 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL((B.U_NC), 0) = 0 
						THEN Total - 
								(Total*ISNULL((CASE WHEN PP = 'Y' THEN C.Descuento END),0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL((B.U_NC), 0) = 0
							 THEN Total - 
								(Total*ISNULL((CASE WHEN PP IS NULL THEN C.Descuento END),0)) 
							 ELSE Total END END
					ELSE  Total END) / NULLIF(A.U_TC,0)
				END Monto_Dolares
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Proveedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.U_Flujo
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.CreateDate
					,A.U_TC
				FROM
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				WHERE
					A.Doctotal - A.paidTodate <> 0 
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Proveedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,''
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP[U_FP]
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.CreateDate
					,A.U_TC
				FROM
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				WHERE
					A.DocStatus = 'O'
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				UNION ALL
				--Saldos a favor
				SELECT DISTINCT
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,D.U_Flujo
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,''
					,A.CreateDate
					,A.U_TC
				FROM 
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				WHERE
					A.Canceled = 'N'
					AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
			LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
			Where [Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
			Order by Proveedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (2)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Proveedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura] Factura
				, CAST([Folio SAP] AS DECIMAL(18,4)) [Folio SAP]
				, CASE WHEN ISNULL(b.U_TC,0) = 0 THEN DocCur ELSE 'USD' END 'Moneda del documento'
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END * Total[Monto original]
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 
						THEN Total - 
								(Total * ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) 
						ELSE 
							 CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0
							 THEN Total - 
								(Total * ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) 
							 ELSE Total END END
					ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL(B.U_PropuestaUSD,0) + ISNULL(B.U_PropuestaMXP, 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL(B.U_PropuestaUSD, 0) AS DECIMAL(18,2)) Propuesta
				, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL(ISNULL(B.U_AprobadoMXP,0) + ISNULL(B.U_AprobadoUSD,0), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL(B.U_AprobadoUSD, 0) AS decimal(18,2)) Aprobado
				, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, ISNULL(B.U_Comentarios, '') Comentarios
				, CAST(ISNULL(U_Flujo, 0) AS bit) 'Pagado'
				, NULL[U_CtaCredito]
				, ISNULL(B.U_NC, 0) 'NC'
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL(B.U_TC, 0) 'TC'
				, Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL(CASE WHEN C.PP IS NULL THEN C.Descuento END,0) Descuento
				, ISNULL(B.PagosInicial, 0) [Contemplar Pago Inicial]
				, CreateDate[Fecha Documento]
				, NULL Monto_Dolares
			FROM
			(
				SELECT 
					'FR' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Proveedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.U_TC
					,A.CreateDate
					,A.U_Flujo
				FROM 
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
				Where 
					A.Doctotal - A.paidTodate <> 0 
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo,
					CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'
					END END as 'Estatus',
					A.CardCode 'Proveedor',
					b.CardName 'Nombre',
					A.DocDate 'Fecha de Contabilización',
					A.DocDueDate 'Fecha de vencimiento',
					A.NumAtCard 'Folio Factura',
					A.DocNum 'Folio SAP'
					,A.DocCur
					,Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					,A.U_FP
					,A.DocEntry
					,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					,CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,A.Indicator
					,A.U_TC
					,A.CreateDate
					,''
				FROM 
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where
					A.DocStatus = 'O'
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				UNION ALL
				--Saldos a favor
				SELECT distinct
					'SF' Tipo,
					'Saldo a favor' as 'Estatus',
					A.CardCode,
					C.CardName,
					A.DocDate,
					A.DocDueDate,
					'',
					A.DocNum
					,A.DocCurr
					,Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as DocTotal
					,NULL
					,A.DocEntry
					,ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					,CAST(/*C.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					,''
					,A.U_TC
					,A.CreateDate
					,D.U_Flujo
				FROM
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where 
					A.Canceled = 'N' 
					AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode) AND C.Currency = @MONEDA_PROV
			)A
				LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
				LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
			Where [Fecha de vencimiento] between @Desde AND @Hasta		
			Order by Proveedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (3)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Proveedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura] Factura
				, CAST([Folio SAP] AS DECIMAL(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL(ISNULL(B.U_PropuestaUSD,0) + ISNULL(B.U_PropuestaMXP,0), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL(B.U_PropuestaUSD, 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL(ISNULL(B.U_AprobadoMXP,0) + ISNULL(B.U_AprobadoUSD,0), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL(B.U_AprobadoUSD, 0) AS DECIMAL(18,2)) Aprobado
				, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, ISNULL(B.U_Comentarios, '') Comentarios
				, U_CtaCredito
				, ISNULL(B.U_NC, 0) 'NC'
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL(B.U_TC, 0) 'TC'
				, Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End, 0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL(CASE WHEN C.PP IS NULL THEN C.Descuento END,0) Descuento
				, ISNULL(B.PagosInicial, 0) [Contemplar Pago Inicial]
				, CreateDate[Fecha Documento]
				, NULL Monto_Dolares
			FROM
			(
				SELECT 
					'FR' Tipo
					, CASE 
						WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
						ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido' END 
					  END 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					, A.Indicator
					, A.U_CtaCredito
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where 
					A.Doctotal - A.paidTodate <> 0 
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo
					, CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
						  ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido' END
					  END 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					, A.Indicator
					, A.U_CtaCredito
					, A.CreateDate
				FROM 
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where 
					A.DocStatus = 'O'
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
				UNION ALL
				--Saldos a favor
				SELECT DISTINCT
					'SF' Tipo
					, 'Saldo a favor' as 'Estatus'
					, A.CardCode 'Proveedor'
					, C.CardName
					, A.DocDate
					, A.DocDueDate
					, ''
					, A.DocNum
					, A.DocCurr
					, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 DocTotal
					, NULL
					, A.DocEntry
					, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					, CAST(/*C.U_Condiciones*/'' AS NVARCHAR(MAX)) U_Condiciones
					, ''
					, NULL
					, A.CreateDate
				FROM 
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				WHERE
					A.Canceled = 'N'
					AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode)
			)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
			LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
			Where [Fecha de vencimiento] BETWEEN @Desde AND @Hasta
			Order by Proveedor, [Fecha de vencimiento]
		END
		
		IF @GroupCode in (4)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Proveedor 
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura] Factura
				, CAST([Folio SAP] AS DECIMAL(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END * 
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0
							 THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END ,0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0
								  THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL(ISNULL(B.U_PropuestaUSD,0) + ISNULL(B.U_PropuestaMXP,0), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL(B.U_PropuestaUSD, 0) AS DECIMAL(18,2)) Propuesta 
				, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL(ISNULL(B.U_AprobadoMXP,0) + ISNULL(B.U_AprobadoUSD,0), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL(B.U_AprobadoUSD, 0) AS DECIMAL(18,2)) Aprobado
				, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, ISNULL(B.U_Comentarios, '') Comentarios
				, NULL[U_CtaCredito]
				, ISNULL(B.U_NC, 0) 'NC'
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL(B.U_TC, 0) 'TC'
				, Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 End,0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL(CASE WHEN C.PP IS NULL THEN C.Descuento END,0) Descuento
				, ISNULL(B.PagosInicial, 0) [Contemplar Pago Inicial]
				, CreateDate[Fecha Documento]
				, NULL Monto_Dolares
			FROM
			(
				SELECT 
					'FR' Tipo
					, CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
						  ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido' END
					  END as 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END AS 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					, A.Indicator
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				WHERE
					A.Doctotal - A.paidTodate <> 0
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo
					, CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
						 ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido'END
					  END as 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST('' as nvarchar(MAX)) U_Condiciones
					, A.Indicator
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				Where
					A.DocStatus = 'O'
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode)
				UNION ALL
				--Saldos a favor
				SELECT DISTINCT
					'SF' Tipo
					, 'Saldo a favor' as 'Estatus'
					, A.CardCode 'Proveedor'
					, C.CardName
					, A.DocDate
					, A.DocDueDate
					, ''
					, A.DocNum
					, A.DocCurr
					, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal End *-1 DocTotal
					, NULL
					, A.DocEntry
					, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					, CAST('' AS NVARCHAR(MAX)) U_Condiciones
					, ''
					, A.CreateDate
				FROM 
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				Where 
					A.Canceled = 'N' 
					AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode) 
			)A
				LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
				LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
			where Proveedor in ('20248', '20250', '20705','22305', '20667')
			      AND [Fecha de vencimiento] BETWEEN @Desde AND @Hasta
			ORDER BY Proveedor, [Fecha de vencimiento]
		END

		IF @GroupCode in (5, 6)
		BEGIN
			--Facturas
			SELECT 
				Estatus
				, Proveedor 'Proveedor'
				, Nombre
				, [Fecha de Contabilización]
				, [Fecha de vencimiento]
				, [Folio Factura] Factura
				, CAST([Folio SAP] AS DECIMAL(18,4)) [Folio SAP]
				, DocCur 'Moneda del documento'
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  Total [Monto original]
				, CASE WHEN ISNULL(B.U_NC, 0) = 0
				  THEN 1 ELSE -1 END *
				  CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
							THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) ELSE 
							     CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
					   ELSE  Total END Total
				, CAST(CASE WHEN Tipo = 'SF' 
							AND ISNULL(ISNULL(B.U_PropuestaUSD,0) + ISNULL(B.U_PropuestaMXP,0), 0) <> 0 
					   THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') IN ('P', 'A') Then 1 Else 0 End as bit) END AS BIT) 'Prop'
				, CAST(ISNULL(B.U_PropuestaUSD, 0) AS decimal(18,2)) Propuesta 
				, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
				, CAST(CASE WHEN Tipo = 'SF'
							AND ISNULL(ISNULL(B.U_AprobadoMXP,0) + ISNULL(B.U_AprobadoUSD,0), 0) <> 0 
						THEN 1 ELSE Cast(Case When ISNULL(U_FP, 'N') = 'A' Then 1 Else 0 End as bit) END AS BIT) 'Apro'
				, CAST(ISNULL(B.U_AprobadoUSD, 0) AS DECIMAL(18,2)) Aprobado
				, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
				, ISNULL(B.U_Comentarios, '') Comentarios
				, NULL[U_CtaCredito]
				, ISNULL(B.U_NC, 0) 'NC'
				, Case When ISNULL(U_FP, 'N') = 'N' Then 'Normal' 
					   When ISNULL(U_FP, 'N') = 'P' Then 'Propuesta'
					   When ISNULL(U_FP, 'N') = 'A' Then 'Aprobado' END  Situación
				, DocEntry
				, ISNULL(B.U_TC, 0) 'TC'
				, Cast(ISNULL(Case When ISNULL(B.U_USD, '') = 'Y' Then 1 END,0) as bit) 'Pagar USD'
				, ISNULL(Cuenta, '' ) Cuenta
				, Tipo
				, U_Condiciones
				, ISNULL(CASE WHEN C.PP IS NULL THEN C.Descuento END,0) Descuento
				, ISNULL(B.PagosInicial, 0) [Contemplar Pago Inicial]
				, CreateDate[Fecha Documento]
				, NULL Monto_Dolares
			FROM
			(
				SELECT 
					'FR' Tipo
					, CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
					     ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido' END 
					  END 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST(/*B.U_Condiciones*/'' as nvarchar(MAX)) U_Condiciones
					, A.Indicator
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].OPCH A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				WHERE 
					A.Doctotal - A.paidTodate <> 0
					AND ISNULL(A.Indicator,'')<>'PC' 
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				--NC
				UNION ALL
				SELECT 
					'NC' Tipo
					, CASE WHEN DocDueDate >= GETDATE() Then 'Por Vencer'
						 ELSE CASE WHEN DocDueDate <= GETDATE() THEN 'Vencido' END 
					  END as 'Estatus'
					, A.CardCode 'Proveedor'
					, B.CardName 'Nombre'
					, A.DocDate 'Fecha de Contabilización'
					, A.DocDueDate 'Fecha de vencimiento'
					, A.NumAtCard 'Folio Factura'
					, A.DocNum 'Folio SAP'
					, A.DocCur
					, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END * -1 'Total'
					, A.U_FP
					, A.DocEntry
					, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
					, CAST(/*B.U_Condiciones*/'' AS NVARCHAR(MAX)) U_Condiciones
					, A.Indicator
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].ORPC A 
					INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
					INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
				WHERE
					A.DocStatus = 'O'
					AND B.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND B.Currency = @MONEDA_PROV
				UNION ALL
				--Saldos a favor
				SELECT DISTINCT
					'SF' Tipo
					, 'Saldo a favor' 'Estatus'
					, A.CardCode 'Proveedor'
					, C.CardName
					, A.DocDate
					, A.DocDueDate
					, ''
					, A.DocNum
					, A.DocCurr
					, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 DocTotal
					, NULL
					, A.DocEntry
					, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
					, CAST(/*C.U_Condiciones*/'' AS NVARCHAR(MAX)) U_Condiciones
					, ''
					, A.CreateDate
				FROM
					[SBOCTRZ].[dbo].OVPM A
					LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
					INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
					LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
					INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
					LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
				WHERE
					A.Canceled = 'N'
					AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
					AND C.GroupCode IN (SELECT * FROM @TblGrpCode) 
					AND C.Currency = @MONEDA_PROV
			)A
				LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
				LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
			WHERE [Fecha de vencimiento] BETWEEN @Desde AND @Hasta
			ORDER BY Proveedor, [Fecha de vencimiento]
		END

		SELECT 'Propuesta, Aprobado, U_CtaCredito, DocEntry, TC, Pagar_USD, Cuenta, Tipo, U_Condiciones, Descuento' HiddenColumns
	END

	--PRELIMINARES DE PAGOS EN SAP(ENCABEZADO)
	IF @TipoConsulta = 42
	BEGIN
		SELECT 
			A.DocNum[Folio Borrador],
			A.CardCode[Codigo], 
			A.JrnlMemo[Nombre],
			A.TrsfrSum[Importe], 
			A.DocDate[Fecha Contable],
			A.TrsfrDate[Fecha Transferencia],
			Nombre[Autor],
			B.DocNum[Folio SAP],
			A.U_ActMessage[Mensaje]
		FROM sap.OVPM A
		LEFT JOIN SBOCTRZ.dbo.OVPM B ON A.TransId = B.DocNum
		JOIN hnt.Usuarios C on C.UserID = A.FolioHalcon
		WHERE 
			CAST(A.DocDate AS date) BETWEEN CAST(@Desde AS date) AND CAST(@Hasta AS date)
		ORDER BY
			A.DocNum DESC
	END
	--PRELIMINARES DE PAGOS EN SAP(DETALLE)
	IF @TipoConsulta = 43
	BEGIN
		SELECT 
			A.DocNum[Folio Borrador],
			InvoiceId[Line],
			A.DocEntry, 
			CASE InvType WHEN 18 THEN (SELECT DocNum FROM SBOCTRZ.dbo.OPCH X WHERE X.DocEntry = A.DocEntry)
						 WHEN 19 THEN (SELECT DocNum FROM SBOCTRZ.dbo.ORPC X WHERE X.DocEntry = A.DocEntry)END [Documento],
			SumApplied[Importe],
			AppliedFC[Importe USD], 
			CASE InvType WHEN 18 THEN 'Factura de proveedores' 
						 WHEN 19 THEN 'Nota de Crédito de proveedores' END [Tipo Documento]
		FROM sap.VPM2 A
		JOIN sap.OVPM B ON A.DocNum = B.DocNum
		WHERE 
			B.DocNum = @DocNum
	END

	IF @TipoConsulta = 44
	BEGIN
		SELECT 'MXP' Nombre, '1' Codigo
		UNION ALL
		SELECT 'USD' Nombre, '2' Codigo
		UNION ALL
		SELECT 'Importación', '3' Codigo
		UNION ALL
		SELECT 'Banco' Nombre, '4' Codigo
		UNION ALL
		SELECT 'Gastos OP MXP' Nombre, '5' Codigo
		UNION ALL
		SELECT 'Gastos OP USD' Nombre, '6' Codigo
	END

	IF @TipoConsulta = 45
	BEGIN
		SELECT 
			CASE 
				WHEN @Rol IN (1, 18, 19, 20) AND @TipoPermiso = 'Filtros' THEN 1 -- FILTROS
				WHEN @Rol IN (1, 18, 29) AND @TipoPermiso = 'Guardar' THEN 1 -- GUARDAR
				ELSE 0
			END Permiso
		FROM hnt.Usuarios WHERE UserID = @UserID
	END

	IF @TipoConsulta = 46
	BEGIN
		SET @TC = (SELECT VALOR FROM hnt.config_ParametrosGenerales WHERE Id = 37)

		-- RESUMEN
		SELECT *
		INTO #TblResumen 
		FROM (
			SELECT 
				1 ID
				, 'MXP' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT
					1 ID
					, 'MXP' APARTADO
					, ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, ISNULL(0.00 * @TC, 0.00) + ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) Total
					, ISNULL(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, ISNULL(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
				FROM (	
					SELECT
						CASE WHEN ISNULL((B.U_NC), 0) = 0 THEN 1 ELSE -1 END * 
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR' THEN CASE WHEN Indicator = 'PR' AND ISNULL((B.U_NC), 0) = 0 THEN Total - (Total * ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) 
						ELSE CASE WHEN Tipo = 'FR' AND ISNULL((B.U_NC), 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN Descuento END,0)) ELSE Total END 
						END ELSE  Total END Total
						, ISNULL(B.U_PropuestaMXP, 0) 'Propuesta MXP'
						, ISNULL(B.U_AprobadoMXP, 0) 'Aprobado MXP'
						, Doccur
					FROM (
						SELECT 
							'FR' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
							, A.CardCode 'Proveedor'
							, A.Doccur
						FROM 
							[SBOCTRZ].[dbo].OPCH A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
						WHERE 
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'')<>'PC' 
							AND B.GroupCode IN (101, 104) 
							AND B.Currency = '$'
						UNION ALL
						SELECT 
							'NC' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
							, A.CardCode 'Proveedor'
							, A.Doccur
						FROM
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						Where
							A.DocStatus = 'O' 
							AND B.GroupCode IN (101, 104) 
							AND B.Currency = '$'
							--Saldos a favor
						UNION ALL
						SELECT DISTINCT
							'SF' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, '' Indicator
							, Case WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 Total
							, A.CardCode 'Proveedor'
							, A.DocCurr 
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE
							A.Canceled = 'N' 
							AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (101, 104) 
							AND C.Currency = '$'
					) A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					WHERE [Fecha de vencimiento] between @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaMXP, U_AprobadoMXP
				) T1
				GROUP BY Doccur
				UNION ALL 
				SELECT
					1 ID
					, 'MXP' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T1_1
			GROUP BY ID, APARTADO
			UNION ALL
			SELECT 
				2 ID
				, 'USD' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT -- USD
					2 ID
					, 'USD' APARTADO
					, ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, ISNULL(ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) * @TC, 0.00) + 0.00 Total
					, ISNULL(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, ISNULL(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
				FROM (
					SELECT 
						CASE WHEN ISNULL(B.U_NC , 0) = 0
						THEN 1 ELSE -1 END *
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 
						THEN Total - 
						(Total * ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) 
						ELSE 
						CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0
						THEN Total - 
						(Total * ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) 
						ELSE Total END END
						ELSE  Total END Total
						, ISNULL(B.U_PropuestaUSD, 0) * @TC 'Propuesta MXP'
						, ISNULL(B.U_AprobadoMXP, 0.00) 'Aprobado MXP'
						, Doccur
					FROM(
						SELECT 
							'FR' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END 'Total'
							, A.CardCode 'Proveedor'
							, A.Doccur
						FROM 
							[SBOCTRZ].[dbo].OPCH A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
						Where
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'') <> 'PC'
							AND B.GroupCode IN (105, 101) 
							AND B.Currency = 'USD'
						UNION ALL
						SELECT 
							'NC' Tipo
							,  A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END * -1 'Total'
							, A.CardCode Proveedor
							, A.Doccur
						FROM 
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.DocStatus = 'O'
							AND B.GroupCode IN (105, 101)
							AND B.Currency = 'USD'
						UNION ALL
						SELECT DISTINCT
							'SF' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, '' Indicator
							, Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End *-1 as Total
							, A.CardCode 'Proveedor'
							, A.Doccurr DocCur
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE 
							A.Canceled = 'N' 
							AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (105, 101) AND C.Currency = 'USD'
					)A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					Where [Fecha de vencimiento] between @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaUSD, U_AprobadoMXP
				) T2
				GROUP BY Doccur
				UNION ALL 
				SELECT
					2 ID
					, 'USD' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T2_2
			GROUP BY ID, APARTADO
			UNION ALL
			SELECT 
				3 ID
				, 'Importación' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT --IMPORTACIÓN
					3 ID
					, 'Importación' APARTADO
					, COALESCE(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, COALESCE(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, COALESCE(COALESCE(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) * @TC, 0.00) + COALESCE(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) Total
					, COALESCE(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, COALESCE(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
				FROM (
					SELECT 
						ISNULL(CASE WHEN B.U_NC = 0
						THEN 1 ELSE -1 END *
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR' 
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 
						THEN Total - 
						(Total * ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) 
						ELSE 
						CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0
						THEN Total - 
						(Total * ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) 
						ELSE Total END END
						ELSE  Total END, 0) Total
						, ISNULL(B.U_PropuestaMXP, 0) 'Propuesta MXP'
						, ISNULL(B.U_AprobadoMXP, 0) 'Aprobado MXP'
						, Doccur
					FROM (
						SELECT 
							'FR' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End as 'Total'
							, A.CardCode 'Proveedor'
							, A.doccur
						FROM
							[SBOCTRZ].[dbo].OPCH A 
							LEFT JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'')<>'PC' 
							AND B.GroupCode IN (106, 107)
						UNION ALL
						SELECT 
							'NC' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End * -1 as 'Total'
							, A.CardCode 'Proveedor'
							, A.Doccur
						FROM 
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.DocStatus = 'O'
							AND B.GroupCode IN (106, 107)
						UNION ALL
						SELECT DISTINCT
							'SF' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, '' Indicator
							, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 Total
							, A.CardCode Proveedor
							, A.DocCurr
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE 
							A.Canceled = 'N' 
							AND CASE WHEN  A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (106, 107)
					)A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					--WHERE [Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaMXP, U_AprobadoMXP
				) T3
				GROUP BY Doccur
				UNION ALL 
				SELECT
					3 ID
					, 'Importacion' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T3_3
			UNION ALL
			SELECT 
				4 ID
				, 'Bancos' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT --BANCOS
					4 ID
					, 'Bancos' APARTADO
					, ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, ISNULL(ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) * @TC, 0.00) + ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) Total
					, ISNULL(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, ISNULL(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
				FROM (
					SELECT 
						CASE WHEN ISNULL(B.U_NC , 0) = 0
						THEN 1 ELSE -1 END * 
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0
						THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) ELSE 
						CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0
						THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
						ELSE  Total END Total
						, ISNULL(B.U_PropuestaMXP, 0) 'Propuesta MXP'
						, ISNULL(B.U_AprobadoMXP, 0) 'Aprobado MXP'
						, DocCur
					FROM (
						SELECT 
							'FR' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END 'Total'
							, A.CardCode 'Proveedor'
							, A.DocCur
						FROM
							[SBOCTRZ].[dbo].OPCH A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'')<>'PC' 
							AND B.GroupCode IN (108)
						UNION ALL
						SELECT 
							'NC' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, A.Indicator
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END * -1 'Total'
							, A.CardCode 'Proveedor'
							, A.DocCur
						FROM
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.DocStatus = 'O' 
							AND B.GroupCode IN (108)
						UNION ALL
						--Saldos a favor
						SELECT DISTINCT
							'SF' Tipo
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocEntry
							, '' Indicator
							, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 Total
							, A.CardCode 'Proveedor'
							, D.DocCur
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE
							A.Canceled = 'N' 
							AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (108)
					)A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					WHERE [Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaMXP, U_AprobadoMXP
				) T4
				GROUP BY DocCur
				UNION ALL 
				SELECT
					3 ID
					, 'Bancos' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T4_4
			UNION ALL
			SELECT 
				5 ID
				, 'Otros Proveedores' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT 
					5 ID
					, 'Otros Proveedores' Apartado
					, ISNULL(SUM(USD),0.00) USD
					, ISNULL(SUM(MXP),0.00) MXP
					, ISNULL(SUM(TOTAL),0.00) TOTAL
					, ISNULL(SUM([Propuesta MXP]),0.00) [Propuesta MXP] 
					, ISNULL(SUM([Aprobado MXP]),0.00) [Aprobado MXP]
					, ISNULL(SUM([Propuesta USD]),0.00) [Propuesta USD]
					, ISNULL(SUM([Aprobado USD]),0.00) [Aprobado USD]
				FROM (
					SELECT
						ISNULL(CASE WHEN U_TipoPago = 'Transferencia USD' THEN U_Propuesta END, 0.00) 'USD'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') THEN U_Propuesta END, 0.00) 'MXP'
						, (ISNULL(CASE WHEN U_TipoPago = 'Transferencia USD' THEN U_Propuesta END, 0.00) * @TC) + ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') THEN U_Propuesta END, 0.00) 'TOTAL'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') AND b_Propuesto = 1 THEN U_Propuesta END, 0.00) 'Propuesta MXP'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') AND U_Aprobado <> 0 THEN U_Propuesta END, 0.00) 'Aprobado MXP'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia USD') AND b_Propuesto = 1 THEN U_Propuesta END, 0.00) 'Propuesta USD'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia USD') AND U_Aprobado <> 0 THEN U_Propuesta END, 0.00) 'Aprobado USD'
					FROM [finance].[PagosGastos]
					WHERE
						U_Estatus IS NOT NULL
						AND U_Estatus NOT IN ('E', 'T')
						AND U_CIA = '004'
						AND U_FechaPago BETWEEN @Desde AND @Hasta
				) T5
				UNION ALL 
				SELECT
					5 ID
					, 'Otros Proveedores' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T5_5
			UNION ALL
			SELECT 
				6 ID
				, 'Gastos' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT 
					6 ID
					, 'Gastos' Apartado
					, SUM(USD) USD
					, SUM(MXP) MXP
					, SUM(TOTAL) TOTAL
					, SUM([Propuesta MXP]) [Propuesta MXP] 
					, SUM([Aprobado MXP]) [Aprobado MXP]
					, SUM([Propuesta USD]) [Propuesta USD]
					, sum([Aprobado USD]) [Aprobado USD]
				FROM (
					SELECT
						ISNULL(CASE WHEN U_TipoPago = 'Transferencia USD' THEN U_Propuesta END, 0.00) 'USD'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') THEN U_Propuesta END, 0.00) 'MXP'
						, (ISNULL(CASE WHEN U_TipoPago = 'Transferencia USD' THEN U_Propuesta END, 0.00) * @TC) + ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') THEN U_Propuesta END, 0.00) 'TOTAL'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') AND b_Propuesto = 1 THEN U_Propuesta END, 0.00) 'Propuesta MXP'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia MXP', 'Cheques') AND U_Aprobado <> 0 THEN U_Propuesta END, 0.00) 'Aprobado MXP'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia USD') AND b_Propuesto = 1 THEN U_Propuesta END, 0.00) 'Propuesta USD'
						, ISNULL(CASE WHEN U_TipoPago IN ('Transferencia USD') AND U_Aprobado <> 0 THEN U_Propuesta END, 0.00) 'Aprobado USD'
					FROM [finance].[PagosGastos]
					WHERE
						U_Estatus IS NOT NULL 
						AND U_Estatus NOT IN ('E', 'T')
						AND U_CIA = '001'
						AND U_FechaPago BETWEEN @Desde AND @Hasta
				) T6
				UNION ALL
				SELECT
					6 ID
					, 'Gastos' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T6_6
			UNION ALL
			SELECT 
				7 ID
				, 'GASTOS OP MXP' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT --GASTOS OP MXP
					7 ID
					, 'GASTOS OP MXP' APARTADO
					, ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, ISNULL(ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) * @TC, 0.00) + ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) Total
					, ISNULL(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, ISNULL(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
					FROM (
					SELECT 
						CASE WHEN ISNULL(B.U_NC, 0) = 0
						THEN 1 ELSE -1 END *
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) ELSE 
						CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
						ELSE  Total END Total
						, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
						, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
						, DocCur
					FROM (
						SELECT 
							'FR' Tipo
							, A.CardCode 'Proveedor'
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCur
							, Case When A.DocCur = 'USD' Then (A.DocTotalFC - A.PaidFC) Else (A.DocTotal-A.PaidToDate) End 'Total'
							, A.DocEntry
							, A.Indicator
						FROM
							[SBOCTRZ].[dbo].OPCH A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE 
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'')<>'PC' 
							AND B.GroupCode IN (102) 
							AND B.Currency = '$'
						UNION ALL
						SELECT 
							'NC' Tipo
							, A.CardCode Proveedor
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCur
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END * -1 Total
							, A.DocEntry
							, A.Indicator
						FROM
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.DocStatus = 'O' 
							AND B.GroupCode IN (102) AND B.Currency = '$'
						UNION ALL
						--Saldos a favor
						SELECT DISTINCT
							'SF' Tipo
							, A.CardCode Proveedor
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCurr
							, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 Total
							, A.DocEntry
							, '' Indicator
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE
							A.Canceled = 'N'
							AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (102) AND C.Currency = '$'
					)A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					WHERE [Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaMXP, U_AprobadoMXP
				) T7
				GROUP BY DocCur
				UNION ALL
				SELECT
					7 ID
					, 'Gastos OP MXP' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T7_7
			UNION ALL
			SELECT 
				8 ID
				, 'GASTOS OP USD' APARTADO
				, SUM(USD)USD
				, SUM(MXP) MXP
				, SUM(Total) Total
				, SUM([Propuesta MXP]) [Propuesta MXP]
				, SUM([Aprobado MXP]) [Aprobado MXP]
				, SUM([Propuesta USD]) [Propuesta USD]
				, SUM([Aprobado USD]) [Aprobado USD]
			FROM (
				SELECT --GASTOS OP MXP
					8 ID
					, 'GASTOS OP MXP' APARTADO
					, ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) USD
					, ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) MXP
					, ISNULL(ISNULL(CASE WHEN DOCCUR = 'USD' THEN SUM(Total) END, 0.00) * @TC, 0.00) + ISNULL(CASE WHEN DOCCUR = '$' THEN SUM(Total) END, 0.00) Total
					, ISNULL(SUM([Propuesta MXP]), 0.00) [Propuesta MXP]
					, ISNULL(SUM([Aprobado MXP]), 0.00) [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
				FROM (
					SELECT 
						CASE WHEN ISNULL(B.U_NC, 0) = 0
						THEN 1 ELSE -1 END *
						CASE WHEN Tipo = 'FR' OR Indicator = 'PR'
						THEN CASE WHEN Indicator = 'PR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP = 'Y' THEN C.Descuento END,0)) ELSE 
						CASE WHEN Tipo = 'FR' AND ISNULL(B.U_NC, 0) = 0 THEN Total - (Total*ISNULL(CASE WHEN PP IS NULL THEN C.Descuento END,0)) ELSE Total END END
						ELSE  Total END Total
						, CAST(ISNULL(B.U_PropuestaMXP, 0) AS DECIMAL(18,2)) 'Propuesta MXP'
						, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
						, DocCur
						FROM (
						SELECT 
							'FR' Tipo
							, A.CardCode 'Proveedor'
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCur
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END 'Total'
							, A.DocEntry
							, A.Indicator
						FROM
							[SBOCTRZ].[dbo].OPCH A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE 
							A.Doctotal - A.paidTodate <> 0 
							AND ISNULL(A.Indicator,'')<>'PC' 
							AND B.GroupCode IN (102) 
							AND B.Currency = 'USD'
						UNION ALL
						SELECT 
							'NC' Tipo
							, A.CardCode Proveedor
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCur
							, CASE WHEN A.DocCur = 'USD' THEN (A.DocTotalFC - A.PaidFC) ELSE (A.DocTotal-A.PaidToDate) END * -1 Total
							, A.DocEntry
							, A.Indicator
						FROM
							[SBOCTRZ].[dbo].ORPC A 
							INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
							INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
						WHERE
							A.DocStatus = 'O' 
							AND B.GroupCode IN (102) AND B.Currency = 'USD'
						UNION ALL
						--Saldos a favor
						SELECT DISTINCT
							'SF' Tipo
							, A.CardCode Proveedor
							, A.DocDueDate 'Fecha de vencimiento'
							, A.DocCurr
							, CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END *-1 Total
							, A.DocEntry
							, '' Indicator
						FROM 
							[SBOCTRZ].[dbo].OVPM A
							LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
							INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
							LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
							INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
							LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
						WHERE
							A.Canceled = 'N'
							AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
							AND C.GroupCode IN (102) AND C.Currency = 'USD'
					)A
					LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND U_Tipo = Tipo
					LEFT JOIN [finance].[DscProv] C ON C.CardCode = A.Proveedor
					WHERE [Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
					GROUP BY DocEntry, Tipo, Proveedor, Indicator, Total, Doccur, U_NC, Descuento, PP, U_PropuestaMXP, U_AprobadoMXP
				) T8
				GROUP BY DocCur
				UNION ALL
				SELECT
					8 ID
					, 'Gastos OP USD' APARTADO
					, 0.00 USD
					, 0.00 MXP
					, 0.00 Total
					, 0.00 [Propuesta MXP]
					, 0.00 [Aprobado MXP]
					, 0.00 [Propuesta USD]
					, 0.00 [Aprobado USD]
			) T8_8
		)TblPrincipal 

		SELECT * FROM #TblResumen ORDER BY ID ASC

		-- TOTALES RESUMEN
		SELECT 'Disponible' Total
			, SUM(ISNULL(CASE WHEN ID = 16 THEN Valor END, 0.00)) [Propuesta MXP]
			, SUM(ISNULL(CASE WHEN ID = 16 THEN Valor END, 0.00)) [Aprobado MXP]
			, SUM(ISNULL(CASE WHEN ID = 17 THEN Valor END, 0.00)) [Propuesta USD]
			, SUM(ISNULL(CASE WHEN ID = 17 THEN Valor END, 0.00)) [Aprobado USD]
		FROM hnt.Config_ParametrosGenerales  A
		WHERE Id IN (16, 17)
		UNION ALL
		SELECT
			'Sobrante/Faltante' Total
			, SUM(ISNULL([Propuesta MXP], 0.00)) [Propuesta MXP]
			, SUM(ISNULL([Aprobado MXP], 0.00)) [Aprobado MXP]
			, SUM(ISNULL([Propuesta USD], 0.00)) [Propuesta USD]
			, CAST(SUM(ISNULL([Aprobado USD], 0.00)) + ISNULL((select SUM(Valor) from hnt.Config_ParametrosGenerales where ID = 17), 0.00) AS DECIMAL(18,4)) [Aprobado USD]
		FROM #TblResumen
		UNION ALL
		SELECT
			'Pendiente' Total
			, SUM(ISNULL(CASE WHEN ID = 26 THEN Valor END, 0.00)) [Propuesta MXP]
			, SUM(ISNULL(CASE WHEN ID = 26 THEN Valor END, 0.00)) [Aprobado MXP]
			, SUM(ISNULL(CASE WHEN ID = 27 THEN Valor END, 0.00)) [Propuesta USD]
			, SUM(ISNULL(CASE WHEN ID = 27 THEN Valor END, 0.00)) [Aprobado USD]
		FROM hnt.Config_ParametrosGenerales  A
		WHERE Id IN (26, 27)
		UNION ALL
		SELECT
			'Disp + Pend - Prop' Total
			, 0.00 [Propuesta MXP]
			, 0.00 [Aprobado MXP]
			, 0.00 [Propuesta USD]
			, 0.00 [Aprobado USD]
		
		-- TOTALES BANCOS
		SELECT
			'BANCOMER' Banco
			, SUM(ISNULL(CASE WHEN ID = 5 THEN Valor END, 0.00)) [Disponible MXP]
			, SUM(ISNULL(CASE WHEN ID = 7 THEN Valor END, 0.00)) [Pendiente MXP]
			, SUM(ISNULL(CASE WHEN ID = 6 THEN Valor END, 0.00)) [Disponible USD]
			, SUM(ISNULL(CASE WHEN ID = 8 THEN Valor END, 0.00)) [Pendiente USD]
		FROM hnt.Config_ParametrosGenerales  A
		UNION ALL
		SELECT
			'BANAMEX' Banco
			, SUM(ISNULL(CASE WHEN ID = 1 THEN Valor END, 0.00)) [Disponible MXP]
			, SUM(ISNULL(CASE WHEN ID = 3 THEN Valor END, 0.00)) [Pendiente MXP]
			, SUM(ISNULL(CASE WHEN ID = 2 THEN Valor END, 0.00)) [Disponible USD]
			, SUM(ISNULL(CASE WHEN ID = 4 THEN Valor END, 0.00)) [Pendiente USD]
		FROM hnt.Config_ParametrosGenerales  A
		UNION ALL
		SELECT
			'Total' Banco
			, 0.00 [Disponible MXP]
			, 0.00 [Pendiente MXP]
			, 0.00 [Disponible USD]
			, 0.00 [Pendiente USD]

		DROP TABLE #TblResumen

		-- TC ACTUAL
		SELECT @TC TC
	END

	IF @TipoConsulta = 47
	BEGIN
		SELECT 
			CAST([Folio SAP] as decimal(18,4)) Factura
			, Nombre Proveedor
			, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Autorizado'
			, ISNULL(Cuenta, '' ) Cuenta
			, Currency 'Moneda'
		FROM
		(
			SELECT 
				'FR' Tipo,
				b.CardName 'Nombre',
				A.DocDueDate 'Fecha de vencimiento',
				A.DocNum 'Folio SAP'
				,A.DocEntry
				,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta
				,B.Currency
			FROM
				[SBOCTRZ].[dbo].OPCH A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			WHERE
				A.Doctotal - A.paidTodate <> 0 
				AND ISNULL(A.Indicator,'')<>'PC' 
				AND B.GroupCode IN (101, 104) 
				AND B.Currency = '$'
			--NC
			UNION ALL
			SELECT 
				'NC' Tipo
				, B.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM
				[SBOCTRZ].[dbo].ORPC A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.DocStatus = 'O'
				AND B.GroupCode IN (101, 104)
				AND B.Currency = '$'
			UNION ALL
			SELECT DISTINCT
				'SF' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum'Folio SAP'
				, A.DocEntry
				, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
				, C.Currency
			FROM 
				[SBOCTRZ].[dbo].OVPM A
				LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
				INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
				LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			WHERE
				A.Canceled = 'N'
				AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
				AND C.GroupCode IN (101, 104) AND C.Currency = '$'
		)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
		WHERE 
			[Fecha de vencimiento] BETWEEN @Desde AND @Hasta
			AND B.U_AprobadoMXP <> 0
		UNION ALL
		-- USD
		SELECT 
			CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
			, Nombre
			, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
			, ISNULL(Cuenta, '' ) Cuenta
			, Currency 'Moneda'
		FROM
		(
			SELECT 
				'FR' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta
				, B.Currency
			FROM 
				[SBOCTRZ].[dbo].OPCH A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode			
			WHERE
				A.Doctotal - A.paidTodate <> 0 
				AND ISNULL(A.Indicator,'')<>'PC' 
				AND B.GroupCode IN (101, 105) 
				AND B.Currency = 'USD'
			UNION ALL
			SELECT 
				'NC' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM
				[SBOCTRZ].[dbo].ORPC A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.DocStatus = 'O' 
				AND B.GroupCode IN (101, 105)
				AND B.Currency = 'USD'
			UNION ALL
			SELECT DISTINCT
				'SF' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
				, C.Currency
			FROM 
				[SBOCTRZ].[dbo].OVPM A
				LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
				INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
				LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			WHERE
				A.Canceled = 'N' 
				AND CASE WHEN A.DocCurr = 'USD' THEN A.OpenBalFc ELSE A.OpenBal END <> 0 
				AND C.GroupCode IN (101, 105) 
				AND C.Currency = 'USD'
		)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
		WHERE 
			[Fecha de vencimiento] BETWEEN @Desde AND @Hasta		
			AND B.U_AprobadoMXP <> 0
		UNION ALL
		-- IMPORTANCIÓN 
		SELECT 
			CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
			, Nombre
			, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
			, ISNULL(Cuenta, '' ) Cuenta
			, Currency 'Moneda'
		FROM
		(
			SELECT 
				'FR' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM
				[SBOCTRZ].[dbo].OPCH A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.Doctotal - A.paidTodate <> 0 
				AND ISNULL(A.Indicator,'')<>'PC' 
				AND B.GroupCode IN (106, 107)
			UNION ALL
			SELECT 
				'NC' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				,A.DocEntry
				,ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM 
				[SBOCTRZ].[dbo].ORPC A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.DocStatus = 'O'
				AND B.GroupCode IN (101, 105)
			UNION ALL
			SELECT DISTINCT
				'SF' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry 
				, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta
				, C.Currency
			FROM 
				[SBOCTRZ].[dbo].OVPM A
				LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
				INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
				LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			WHERE
				A.Canceled = 'N' 
				AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
				AND C.GroupCode IN (106, 107)
		)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
		WHERE 
			[Fecha de vencimiento] BETWEEN @Desde AND @Hasta 
			AND B.U_AprobadoMXP <> 0
		UNION ALL
		-- Banco
		SELECT 
			CAST([Folio SAP] as decimal(18,4)) [Folio SAP]
			, Nombre
			, CAST(ISNULL(B.U_AprobadoMXP, 0) AS DECIMAL(18,2)) 'Aprobado MXP'
			, ISNULL(Cuenta, '' ) Cuenta
			, Currency 'Moneda'
		FROM
		(
			SELECT 
				'FR' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM 
				[SBOCTRZ].[dbo].OPCH A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.Doctotal - A.paidTodate <> 0 
				AND ISNULL(A.Indicator,'')<>'PC' 
				AND B.GroupCode IN (108)
			--NC
			UNION ALL
			SELECT 
				'NC' Tipo
				, A.CardName 'Nombre'
				, A.DocDueDate 'Fecha de vencimiento'
				, A.DocNum 'Folio SAP'
				, A.DocEntry
				, ISNULL(B.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(B.DflAccount,'') Cuenta 
				, B.Currency
			FROM
				[SBOCTRZ].[dbo].ORPC A 
				INNER JOIN [SBOCTRZ].[dbo].OCRD B ON A.CardCode = B.CardCode AND B.CardCode NOT IN ('20012','21478')
				INNER JOIN [SBOCTRZ].[dbo].OCTG D ON B.GroupNum = D.GroupNum
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON B.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON B.BankCode = F.BankCode
			WHERE
				A.DocStatus = 'O'
				AND B.GroupCode IN (108)
			UNION ALL
			--Saldos a favor
			SELECT DISTINCT
			'SF' Tipo
			, A.CardName 'Nombre'
			, A.DocDueDate 'Fecha de vencimiento'
			, A.DocNum 'Folio SAP'
			, A.DocEntry
			, ISNULL(C.BankCode,'') BankCode,ISNULL(F.BankName,'') BankName,ISNULL(C.DflAccount,'') Cuenta 
			, C.Currency
			FROM
				[SBOCTRZ].[dbo].OVPM A
				LEFT JOIN [SBOCTRZ].[dbo].VPM2 B ON A.DocNum = B.DocNum
				INNER JOIN [SBOCTRZ].[dbo].OCRD C ON A.CardCode = C.CardCode AND C.CardCode NOT IN ('20012','21478')
				LEFT JOIN [SBOCTRZ].[dbo].OPCH D ON B.DocEntry = D.DocEntry AND ISNULL(D.Indicator,'')<>'PC'
				INNER JOIN [SBOCTRZ].[dbo].OCRG E ON C.GroupCode = E.GroupCode 
				LEFT JOIN [SBOCTRZ].[dbo].ODSC F ON C.BankCode = F.BankCode
			WHERE
				A.Canceled = 'N' 
				AND Case When A.DocCurr = 'USD' Then A.OpenBalFc Else A.OpenBal End <> 0 
				AND C.GroupCode IN (108)  
		)A
			LEFT JOIN [finance].[PagosProv] B ON A.DocEntry = B.U_FolioSAP AND Tipo = B.U_Tipo
		WHERE
			Nombre in ('20248', '20250', '20705','22305', '20667')
			AND [Fecha de vencimiento] BETWEEN @Desde AND @Hasta
			AND B.U_AprobadoMXP <> 0
	END

	-- SOLICITUD DE PAGO
	IF @TipoConsulta = 48
	BEGIN
		BEGIN TRY
			-- INSERT DE SOLICITUD 
			IF @Opc = 1
			BEGIN	
				-- Cuando ya existe una solictud de pago con el folio de la OC
				IF EXISTS (SELECT Id FROM finance.PagosProveedoresSol WHERE Folio = @Folio and Folio <> '') BEGIN RAISERROR('Ya se ha solicitado un pago para está OC', 11, 1) END
				-- Cuando el importe solicitado es menor a $0.00
				IF @ImportePropuesto <= 0 BEGIN RAISERROR('El importe solicitado debe ser mayor a $0.00', 11, 1) END
				-- Cuando el importe aprobado es mayor al solicitado
				IF @ImportePropuesto < @ImporteAprobado BEGIN RAISERROR('El importe solicitado no puede ser mayor al importe aprobado', 11, 1) END
				-- Cuando no se ha elegido un proveedor
				IF @CardCode = 0 BEGIN RAISERROR('Debes elegir un proveedor', 11, 1) END
				-- Cuando no se ha elegido un banco
				IF ISNULL(@Banco, '') = '' BEGIN RAISERROR('Debes elegir un banco', 11, 1) END
				-- Agregar predefinidamente el tipo de pago transferencia MXP
				IF @TipoPago = '0' BEGIN SET @TipoPago = '1' END

				INSERT INTO finance.PagosProveedoresSol 
				VALUES (
					@Empresa
					, @Folio
					, @FechaPago
					, @CardCode
					, @Concepto
					, @FolioSAP
					, @Currency
					, @ImportePropuesto
					, @ImporteAprobado
					, @ReferenciaPago
					, @Cuenta
					, @Banco
					, @EstatusPagos
					, @UserID
					, @TipoPago
					, NULL
					, GETDATE()
					, GETDATE()
					, 'P'
					, 'N'
				)

				SELECT 'Pago solicitado' Msj
			END
			-- RECHAZAR SOLICITUD
			ELSE IF @Opc = 2
			BEGIN
				UPDATE finance.PagosProveedoresSol SET EstatusSolicitud = 'R', ComentarioRechazo = @Comentario WHERE Id = @Id and Empresa = @Empresa
				SELECT 'Solicitud de pago cancelada' Msj
			END
			-- UPDATE DE SOLICITUD
			ELSE IF @Opc = 3
			BEGIN
				-- Cuando el importe solicitado es menor a $0.00
				IF @ImportePropuesto <= 0 BEGIN RAISERROR('El importe solicitado debe ser mayor a $0.00', 11, 1) END
				-- Cuando el importe aprobado es mayor al solicitado
				IF @ImportePropuesto < @ImporteAprobado BEGIN RAISERROR('El importe solicitado no puede ser mayor al importe aprobado', 11, 1) END
				-- Cuando no se ha elegido un proveedor
				IF @CardCode = 0 BEGIN RAISERROR('Debes elegir un proveedor', 11, 1) END
				-- Cuando no se ha elegido un banco
				IF ISNULL(@Banco, '') = '' BEGIN RAISERROR('Debes elegir un banco', 11, 1) END



				UPDATE finance.PagosProveedoresSol SET 
					Empresa = @Empresa
					, Folio = @Folio
					, FechaPago = @FechaPago
					, CardCode = @CardCode
					, Concepto = @Concepto
					, DocNum = @FolioSAP
					, Currency = @Currency
					, ImportePropuesto = @ImportePropuesto
					, ImporteAprobado = @ImporteAprobado
					, ReferenciaPago = @ReferenciaPago
					, Cuenta = @Cuenta
					, Banco = @Banco
					, EstatusPagos = @EstatusPagos
					, TipoPago = @TipoPago
					, UpdateDate = GETDATE()
				WHERE Id = @Id
				SELECT 'Solicitud actualizada' Msj
			END
			-- UPDATE DE ESTATUS DE LA SOLICITUD
			ELSE IF @Opc = 4
			BEGIN
				UPDATE finance.PagosProveedoresSol SET EstatusSolicitud = @Estatus WHERE Id = @Id
			END
			-- UPDATE DESDE EL GRID PARA CAMPOS EN ESPECÍFICO
			ELSE IF @Opc = 5
			BEGIN
				-- Cuando el importe solicitado es menor a $0.00
				IF @ImportePropuesto <= 0 BEGIN RAISERROR('El importe solicitado debe ser mayor a $0.00', 11, 1) END
				-- Cuando el importe aprobado es mayor al solicitado
				IF @ImportePropuesto < @ImporteAprobado BEGIN RAISERROR('El importe solicitado no puede ser mayor al importe aprobado', 11, 1) END

				UPDATE finance.PagosProveedoresSol SET ImportePropuesto = @ImportePropuesto, ImporteAprobado = @ImporteAprobado, FechaPago = @FechaPago, EstatusPagos = @EstatusPagos, UpdateDate = GETDATE() WHERE Id = @Id
				SELECT 'Solicitud actualizada' Msj
			END
		END TRY
		BEGIN CATCH
			SET @Error = (SELECT ERROR_MESSAGE() + ' <br/> SP: up_finance_PagosProveedores <br/> Consulta: ' + CAST(@TipoConsulta AS VARCHAR(50)) + ' <br/>' AS ErrorMessage);
			RAISERROR(@Error, 11, 1);
		END CATCH
	END

	-- CATALOGOS DE FORMULARIO
	IF @TipoConsulta = 49
	BEGIN
		IF @TipoLista = 'Empresa'
		BEGIN
			SELECT 'CTRZPROV' Codigo, 'CTRZ PROV' Nombre
			UNION ALL
			SELECT 'CTRZGTOS' Codigo, 'CTRZGTOS' Nombre
			UNION ALL
			SELECT 'DPJPROV' Codigo, 'DPJPROV' Nombre
			UNION ALL
			SELECT 'DPJGTOS' Codigo, 'DPJGTOS' Nombre
			UNION ALL
			SELECT 'SIPJ' Codigo, 'SIPJ' Nombre
			UNION ALL
			SELECT 'CPEJ' Codigo, 'CPEJ' Nombre
			UNION ALL
			SELECT 'LYTPJ' Codigo, 'LYTPJ' Nombre
			UNION ALL
			SELECT 'DTRZ' Codigo, 'DTRZ' Nombre
			UNION ALL
			SELECT 'ITRZ' Codigo, 'ITRZ' Nombre
			UNION ALL
			SELECT 'SERVIMPO' Codigo, 'SERVIMPO' Nombre
		END
		ELSE IF @TipoLista = 'Proveedor'
		BEGIN
			SELECT '0' Codigo, '- Elige un proveedor-' Nombre
			UNION ALL
			SELECT 
				CardCode Codigo
				, Concat(CardCode , ' | ', CardName) Nombre
			FROM
				SBOCTRZ.dbo.OCRD
				LEFT JOIN SBOCTRZ.dbo.OSTA ON OCRD.VatGroup = OSTA.Code
			WHERE 
				CardType = 'S' 
				AND frozenFor = 'N'
				AND GroupCode = '102'
		END
		ELSE IF @TipoLista = 'Moneda'
		BEGIN
			SELECT '$' Codigo
			UNION ALL
			SELECT 'USD' Codigo
		END
		ELSE IF @TipoLista = 'EstatusPagos' 
		BEGIN
			SELECT '0' Codigo, '-Estatus de pago-' Nombre
			UNION ALL
			SELECT '1' Codigo, '1 | Pagar' Nombre
			UNION ALL
			SELECT '2' Codigo, '2 | Pagado' Nombre
			UNION ALL
			SELECT '3' Codigo, '3 | Programado' Nombre
		END
		ELSE IF @TipoLista = 'Banco'
		BEGIN
			SELECT '' Codigo, '- Selecciona un banco -' Nombre
			UNION ALL
			SELECT BankCode Codigo, BankName Nombre
			FROM SBOCTRZ.dbo.ODSC
		END
		ElSE IF @TipoLista = 'TipoPago'
		BEGIN
			SELECT '0' Codigo, '- Selecciona un tipo de pago -' Nombre
			UNION ALL
			SELECT '1' Codigo, 'Transferencia MXP' Nombre
			UNION ALL
			SELECT '2' Codigo, 'Transferencia USD' Nombre
			UNION ALL
			SELECT '3' Codigo, 'Cheque' Nombre
		END
		ELSE IF @TipoLista = 'Cuentas'
		BEGIN
			SELECT
				A.BankCode
				, B.BankName
				, Account 
			FROM SBOCTRZ.DBO.OCRB A
			LEFT JOIN SBOCTRZ.dbo.ODSC B ON A.BankCode = B.BankCode
			WHERE CardCode = @CardCode
		END
		ELSE IF @TipoLista = 'EstatusSolicitudes'
		BEGIN
			SELECT '0' Codigo, '-Todas las solicitudes-' Nombre
			UNION ALL
			SELECT 'A' Codigo, 'Autorizadas' Nombre
			UNION ALL
			SELECT 'P' Codigo, 'Pendientes' Nombre
			UNION ALL
			SELECT 'R' Codigo, 'Rechazados' Nombre
		END
	END

	-- SELECT SOLICITUDES DE PAGO
	IF @TipoConsulta = 50
	BEGIN
		SET @Qry = '
			SELECT
				A.Id
				, A.Folio
				, A.Empresa
				, FORMAT(A.CreateDate, ''yyyy-MM-dd'') [Fecha_de_solicitud]
				, FORMAT(FechaPago, ''yyyy-MM-dd'') [Fecha_de_pago]
				, B.CardName [Proveedor]
				, B.CardCode
				, A.Concepto
				, A.DocNum [Factura_Referencia_OC]
				, A.Currency [Moneda]
				, ISNULL(A.ImportePropuesto, 0.00) [Importe_solicitado]
				, ISNULL(A.ImporteAprobado, 0.00) [Importe_a_pagar]
				, C.Nombre [Solicita]
				, A.Cuenta
				, D.BankName [Banco]
				, D.BankCode
				, EstatusPagos
				, CASE 
					  WHEN A.EstatusPagos = 0 THEN ''Sin estatus de pago''
					  WHEN A.EstatusPagos = 1 THEN ''1 | Pagar''
					  WHEN A.EstatusPagos = 2 THEN ''2 | Pagado''
					  WHEN A.EstatusPagos = 3 THEN ''3 | Programado''
					  WHEN A.EstatusPagos = 4 THEN ''4 | Eliminado''
				  END [Estatus_Pagos]
				, ISNULL(A.TipoPago, ''0'') [TipoPago]
				, CASE 
					WHEN EstatusSolicitud = ''P'' THEN 0
					WHEN EstatusSolicitud = ''A'' THEN 1
					WHEN EstatusSolicitud = ''R'' THEN 2
	 			  END [Autorizar]
				, '''' [Editar]
			FROM 
		        finance.PagosProveedoresSol A
			    JOIN SBOCTRZ.dbo.OCRD B ON A.CardCode = B.CardCode
			    JOIN hnt.Usuarios C ON A.UserID = C.UserID
			    JOIN SBOCTRZ.dbo.ODSC D ON A.BANCO = D.BankCode
			WHERE 
			    A.FechaPago BETWEEN @Desde AND @Hasta 
				AND Empresa = @Empresa
				AND EstatusSolicitud in (' + @Estatus + ')
			ORDER BY A.Id DESC
		'
		SET @ParamDefinitions = N'@Desde DATE, @Hasta DATE, @Empresa VARCHAR(100)'
		EXECUTE sp_executesql @Qry, @ParamDefinitions, @Desde, @Hasta, @Empresa

		SELECT 'Folio, CardCode, BankCode, TipoPago, EstatusPagos, Id'  HiddenColumns
	END

	-- SELECT DETALLE DE SOLICITUD DE PAGO
	IF @TipoConsulta = 51
	BEGIN
		SET @Qry = '
			SELECT
				K.Id
				, ISNULL(K.Empresa, ''CTRZPROV'') Empresa
				, A.Id Folio
				, GETDATE() FechaPago
				, ISNULL(A.CardCode, K.CardCode) CardCode
				, ISNULL(Motivo, Concepto) Concepto
				, ISNULL(CAST(F.DocNum AS VARCHAR(50)), K.DocNum) DocNum
				, ISNULL(I.Currency, K.Currency) Currency 
				, ISNULL(J.BankCode, K.Banco) Banco
				, ISNULL(J.Account, K.Cuenta) Cuenta
				, ISNULL(A.Importe, ImportePropuesto) ImportePropuesto
				, ISNULL(K.ImporteAprobado, 0.00) ImporteAprobado
				, ISNULL(K.ReferenciaPago, '''') ReferenciaPago
				, ISNULL(K.EstatusPagos, 0) Estatus_Pagos
				, ISNULL(K.TipoPago, 0) TipoPago
				, COUNT(ISNULL(L.Folio, M.IdSolicitud)) ContadorDocs
				, ISNULL(K.EstatusSolicitud, '''') EstatusSolicitud
			FROM
		'
		IF ISNULL(@Folio, '') <> '' SET @QRY += '
				finance.SolicitudCompra A
				LEFT JOIN finance.PagosProveedoresSol K ON A.Id = K.Folio
		'
		ELSE IF ISNULL(@Id, '') <> '' SET @QRY += '
				finance.PagosProveedoresSol K 
				LEFT JOIN finance.SolicitudCompra A ON A.Id = K.Folio
		'
		SET @Qry += '
				LEFT JOIN sap.ODRF C ON C.U_FolioSolicitud = A.Id AND Indicator = ''HW''
				LEFT JOIN SBOCTRZ.dbo.OPOR F ON C.TransId = F.DocEntry
				LEFT JOIN SBOCTRZ.dbo.OCRD I ON A.CardCode = I.CardCode
				LEFT JOIN SBOCTRZ.dbo.OCRB J ON J.CardCode = I.CardCode
				LEFT JOIN [HNT-Files].dbo.Files_SolicitudCompraEvidencias L ON A.Id = L.Folio
				LEFT JOIN finance.SolPagosProv_Files M ON M.IdSolicitud = K.Id
			WHERE 
		'
		
		IF ISNULL(@Folio, '') <> '' SET @QRY += '
				A.Id = @Folio 
		'
		ELSE IF ISNULL(@Id, '') <> '' SET @QRY += '
				K.Id = @Id
		'
		SET @QRY += '
			GROUP BY K.Id, K.Empresa, A.Id, A.CardCode, K.CardCode, Motivo, Concepto, F.DocNum, K.DocNum, A.CreateDate, I.Currency, K.Currency, J.BankCode, K.Banco, J.Account, K.Cuenta, A.Importe, ImportePropuesto, K.ImporteAprobado, K.ReferenciaPago, K.EstatusPagos, K.TipoPago, K.EstatusSolicitud
			ORDER BY A.CreateDate DESC
		'

		SET @ParamDefinitions = N'@Folio varchar(15), @Id varchar(15)'
		EXECUTE sp_executesql @Qry, @ParamDefinitions,  @Folio, @Id
	END
	
	-- SELECT DOCUMENTOS
	IF @TipoConsulta = 52
	BEGIN
		IF ISNULL(@Folio, '') <> '' BEGIN
			SELECT Id, Folio, Nombre, Extension, 'OC' TipoDoc FROM [HNT-Files].dbo.Files_SolicitudCompraEvidencias WHERE Folio = @Folio
		END
		ELSE IF ISNULL(@Id, '') <> '' BEGIN
			SELECT IdArchivo Id, IdSolicitud Folio, Nombre, Extension, 'SOLICITUD' TipoDoc, Ruta FROM finance.SolPagosProv_Files WHERE IdSolicitud = @Id
		END

		SELECT 'Id, Folio, TipoDoc, Ruta' HiddenColumns
	END

	-- INSERT DE RELACION DE DOCUMENTOS
	IF @TipoConsulta = 53
	BEGIN
		INSERT INTO finance.SolPagosProv_Files VALUES (@Folio, @NombreArchivo, @Extension, @Ruta, @UserID, GETDATE())
	END

	-- SELECT SOLICITUDES DE PAGO Autorizadas
	IF @TipoConsulta = 54
	BEGIN
		SELECT
			A.Id
			, A.Folio
			, A.Empresa
			, FORMAT(A.CreateDate, 'yyyy-MM-dd') [Fecha_de_solicitud]
			, FORMAT(FechaPago, 'yyyy-MM-dd') [Fecha_de_pago]
			, B.CardName [Proveedor]
			, B.CardCode
			, A.Concepto
			, A.DocNum [Factura_Referencia_OC]
			, A.Currency [Moneda]
			, ISNULL(A.ImportePropuesto, 0.00) [Importe_solicitado]
			, ISNULL(A.ImporteAprobado, 0.00) [Importe_a_pagar]
			, C.Nombre [Solicita]
			, A.Cuenta
			, D.BankName [Banco]
			, D.BankCode
			, EstatusPagos
			, ISNULL(A.TipoPago, '0')TipoPago
		FROM 
			finance.PagosProveedoresSol A
			JOIN SBOCTRZ.dbo.OCRD B ON A.CardCode = B.CardCode
			JOIN hnt.Usuarios C ON A.UserID = C.UserID
			JOIN SBOCTRZ.dbo.ODSC D ON A.BANCO = D.BankCode
		WHERE 
			  A.FechaPago BETWEEN @Desde AND @Hasta 
			  AND Empresa = @Empresa
			  AND A.EstatusSolicitud = 'A'
		ORDER BY A.FechaPago DESC

		SELECT 'Folio, CardCode, BankCode, TipoPago, Id'  HiddenColumns
	END
END
